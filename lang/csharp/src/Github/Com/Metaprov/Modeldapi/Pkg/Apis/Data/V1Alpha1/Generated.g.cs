// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: github.com/metaprov/modelaapi/pkg/apis/data/v1alpha1/generated.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1 {

  /// <summary>Holder for reflection information generated from github.com/metaprov/modelaapi/pkg/apis/data/v1alpha1/generated.proto</summary>
  public static partial class GeneratedReflection {

    #region Descriptor
    /// <summary>File descriptor for github.com/metaprov/modelaapi/pkg/apis/data/v1alpha1/generated.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GeneratedReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CkRnaXRodWIuY29tL21ldGFwcm92L21vZGVsZGFwaS9wa2cvYXBpcy9kYXRh",
            "L3YxYWxwaGExL2dlbmVyYXRlZC5wcm90bxI0Z2l0aHViLmNvbS5tZXRhcHJv",
            "di5tb2RlbGRhcGkucGtnLmFwaXMuZGF0YS52MWFscGhhMRpHZ2l0aHViLmNv",
            "bS9tZXRhcHJvdi9tb2RlbGRhcGkvcGtnL2FwaXMvY2F0YWxvZy92MWFscGhh",
            "MS9nZW5lcmF0ZWQucHJvdG8aIms4cy5pby9hcGkvY29yZS92MS9nZW5lcmF0",
            "ZWQucHJvdG8aNGs4cy5pby9hcGltYWNoaW5lcnkvcGtnL2FwaXMvbWV0YS92",
            "MS9nZW5lcmF0ZWQucHJvdG8aL2s4cy5pby9hcGltYWNoaW5lcnkvcGtnL3J1",
            "bnRpbWUvZ2VuZXJhdGVkLnByb3RvGjZrOHMuaW8vYXBpbWFjaGluZXJ5L3Br",
            "Zy9ydW50aW1lL3NjaGVtYS9nZW5lcmF0ZWQucHJvdG8igwEKD0FnZ3JlZ2F0",
            "aW9uU3BlYxITCgtzbGlkZVBlcmlvZBgBIAEoCRJbCgxhZ2dyZWdhdGlvbnMY",
            "AiADKAsyRS5naXRodWIuY29tLm1ldGFwcm92Lm1vZGVsZGFwaS5wa2cuYXBp",
            "cy5kYXRhLnYxYWxwaGExLkZlYXR1cmVBZ2dyU3BlYyL8AwoGQ29sdW1uEgwK",
            "BG5hbWUYASABKAkSEwoLZmVhdHVyZU5hbWUYAiABKAkSEAoIZGF0YXR5cGUY",
            "AyABKAkSDgoGZm9ybWF0GAQgASgJEhMKC2Rlc2NyaXB0aW9uGAUgASgJEg4K",
            "Bmlnbm9yZRgGIAEoCBINCgVsYWJlbBgHIAEoCBIQCghudWxsYWJsZRgIIAEo",
            "CBIKCgJwaxgJIAEoCBISCgptdWx0aXBsZU9mGAogASgFEg8KB21heGltdW0Y",
            "CyABKAESGAoQZXhjbHVzaXZlTWF4aW11bRgMIAEoCBIPCgdtaW5pbXVtGA0g",
            "ASgBEhgKEGV4Y2x1c2l2ZU1pbmltdW0YDiABKAgSEQoJbWF4TGVuZ3RoGA8g",
            "ASgFEhEKCW1pbkxlbmd0aBgQIAEoBRIPCgdwYXR0ZXJuGBEgASgJEhAKCHJl",
            "cXVpcmVkGBIgASgIEg0KBXRpdGxlGBMgASgJEg8KB2V4YW1wbGUYFCABKAkS",
            "FAoMZXh0ZXJuYWxEb2NzGBUgASgJEgwKBGVudW0YFiADKAkSFwoPdHJhbnNm",
            "b3JtZXJIaW50GBcgASgJEhAKCG1heEl0ZW1zGBggASgFEhAKCG1pbkl0ZW1z",
            "GBkgASgFEhMKC3VuaXF1ZUl0ZW1zGBogASgIEhIKCnRpbWVDb2x1bW4YGyAB",
            "KAgi3gIKEENvbHVtblN0YXRpc3RpY3MSDAoEbmFtZRgBIAEoCRILCgNtaW4Y",
            "AiABKAESCwoDbWF4GAMgASgBEgwKBG1lYW4YBCABKAESDgoGc3RkZGV2GAUg",
            "ASgBEhAKCHNrZXduZXNzGAYgASgBEhAKCGt1cnRvc2lzGAcgASgBEg0KBXpl",
            "cm9zGAggASgBEgsKA3AyNRgKIAEoARILCgNwNTAYCyABKAESCwoDcDc1GAwg",
            "ASgBEg8KB21pc3NpbmcYDiABKAUSDwoHaW52YWxpZBgPIAEoBRIOCgZ0YXJn",
            "ZXQYECABKAgSEgoKaW1wb3J0YW5jZRgRIAEoARIPCgdkaXN0aW5jGBIgASgF",
            "Eg8KB2lnbm9yZWQYEyABKAgSEAoIbnVsbGFibGUYFCABKAgSEAoIaGlnaENy",
            "ZWQYFSABKAgSEAoIaGlnaENvcnIYFiABKAgSDAoEc2tldxgXIAEoCCIwCgxE",
            "YXRhTG9jYXRpb24SEgoKYnVja2V0TmFtZRgBIAEoCRIMCgRwYXRoGAIgASgJ",
            "IoICCgxEYXRhUGlwZWxpbmUSQgoIbWV0YWRhdGEYASABKAsyMC5rOHMuaW8u",
            "YXBpbWFjaGluZXJ5LnBrZy5hcGlzLm1ldGEudjEuT2JqZWN0TWV0YRJUCgRz",
            "cGVjGAIgASgLMkYuZ2l0aHViLmNvbS5tZXRhcHJvdi5tb2RlbGRhcGkucGtn",
            "LmFwaXMuZGF0YS52MWFscGhhMS5EYXRhUGlwZWxpbmVTcGVjElgKBnN0YXR1",
            "cxgDIAEoCzJILmdpdGh1Yi5jb20ubWV0YXByb3YubW9kZWxkYXBpLnBrZy5h",
            "cGlzLmRhdGEudjFhbHBoYTEuRGF0YVBpcGVsaW5lU3RhdHVzIp4BChVEYXRh",
            "UGlwZWxpbmVDb25kaXRpb24SDAoEdHlwZRgBIAEoCRIOCgZzdGF0dXMYAiAB",
            "KAkSRgoSbGFzdFRyYW5zaXRpb25UaW1lGAQgASgLMiouazhzLmlvLmFwaW1h",
            "Y2hpbmVyeS5wa2cuYXBpcy5tZXRhLnYxLlRpbWUSDgoGcmVhc29uGAUgASgJ",
            "Eg8KB21lc3NhZ2UYBiABKAkipwEKEERhdGFQaXBlbGluZUxpc3QSQAoIbWV0",
            "YWRhdGEYASABKAsyLi5rOHMuaW8uYXBpbWFjaGluZXJ5LnBrZy5hcGlzLm1l",
            "dGEudjEuTGlzdE1ldGESUQoFaXRlbXMYAiADKAsyQi5naXRodWIuY29tLm1l",
            "dGFwcm92Lm1vZGVsZGFwaS5wa2cuYXBpcy5kYXRhLnYxYWxwaGExLkRhdGFQ",
            "aXBlbGluZSKLAgoPRGF0YVBpcGVsaW5lUnVuEkIKCG1ldGFkYXRhGAEgASgL",
            "MjAuazhzLmlvLmFwaW1hY2hpbmVyeS5wa2cuYXBpcy5tZXRhLnYxLk9iamVj",
            "dE1ldGESVwoEc3BlYxgCIAEoCzJJLmdpdGh1Yi5jb20ubWV0YXByb3YubW9k",
            "ZWxkYXBpLnBrZy5hcGlzLmRhdGEudjFhbHBoYTEuRGF0YVBpcGVsaW5lUnVu",
            "U3BlYxJbCgZzdGF0dXMYAyABKAsySy5naXRodWIuY29tLm1ldGFwcm92Lm1v",
            "ZGVsZGFwaS5wa2cuYXBpcy5kYXRhLnYxYWxwaGExLkRhdGFQaXBlbGluZVJ1",
            "blN0YXR1cyKhAQoYRGF0YVBpcGVsaW5lUnVuQ29uZGl0aW9uEgwKBHR5cGUY",
            "ASABKAkSDgoGc3RhdHVzGAIgASgJEkYKEmxhc3RUcmFuc2l0aW9uVGltZRgE",
            "IAEoCzIqLms4cy5pby5hcGltYWNoaW5lcnkucGtnLmFwaXMubWV0YS52MS5U",
            "aW1lEg4KBnJlYXNvbhgFIAEoCRIPCgdtZXNzYWdlGAYgASgJIq0BChNEYXRh",
            "UGlwZWxpbmVSdW5MaXN0EkAKCG1ldGFkYXRhGAEgASgLMi4uazhzLmlvLmFw",
            "aW1hY2hpbmVyeS5wa2cuYXBpcy5tZXRhLnYxLkxpc3RNZXRhElQKBWl0ZW1z",
            "GAIgAygLMkUuZ2l0aHViLmNvbS5tZXRhcHJvdi5tb2RlbGRhcGkucGtnLmFw",
            "aXMuZGF0YS52MWFscGhhMS5EYXRhUGlwZWxpbmVSdW4irQEKE0RhdGFQaXBl",
            "bGluZVJ1blNwZWMSEwoLdmVyc2lvbk5hbWUYASABKAkSGAoQZGF0YXBpcGVs",
            "aW5lTmFtZRgCIAEoCRJYCgxkYXRhTG9jYXRpb24YAyABKAsyQi5naXRodWIu",
            "Y29tLm1ldGFwcm92Lm1vZGVsZGFwaS5wa2cuYXBpcy5kYXRhLnYxYWxwaGEx",
            "LkRhdGFMb2NhdGlvbhINCgVvd25lchgEIAEoCSKtAgoVRGF0YVBpcGVsaW5l",
            "UnVuU3RhdHVzEg4KBmlucHV0cxgBIAMoCRIOCgZvdXRwdXQYAiABKAkSDQoF",
            "cGhhc2UYAyABKAkSPQoJc3RhcnRUaW1lGAQgASgLMiouazhzLmlvLmFwaW1h",
            "Y2hpbmVyeS5wa2cuYXBpcy5tZXRhLnYxLlRpbWUSQgoOY29tcGxldGlvblRp",
            "bWUYBSABKAsyKi5rOHMuaW8uYXBpbWFjaGluZXJ5LnBrZy5hcGlzLm1ldGEu",
            "djEuVGltZRJiCgpjb25kaXRpb25zGAYgAygLMk4uZ2l0aHViLmNvbS5tZXRh",
            "cHJvdi5tb2RlbGRhcGkucGtnLmFwaXMuZGF0YS52MWFscGhhMS5EYXRhUGlw",
            "ZWxpbmVSdW5Db25kaXRpb24ipAEKEERhdGFQaXBlbGluZVNwZWMSEwoLdmVy",
            "c2lvbk5hbWUYASABKAkSEwoLZGVzY3JpcHRpb24YAiABKAkSFQoNaW5wdXRE",
            "YXRhc2V0cxgDIAMoCRITCgtyZWNpcGVOYW1lcxgEIAMoCRIZChFvdXRwdXRE",
            "YXRhc2V0TmFtZRgFIAEoCRIQCghzY2hlZHVsZRgGIAEoCRINCgVvd25lchgH",
            "IAEoCSJ1ChJEYXRhUGlwZWxpbmVTdGF0dXMSXwoKY29uZGl0aW9ucxgBIAMo",
            "CzJLLmdpdGh1Yi5jb20ubWV0YXByb3YubW9kZWxkYXBpLnBrZy5hcGlzLmRh",
            "dGEudjFhbHBoYTEuRGF0YVBpcGVsaW5lQ29uZGl0aW9uIv8BCgtEYXRhUHJv",
            "ZHVjdBJCCghtZXRhZGF0YRgBIAEoCzIwLms4cy5pby5hcGltYWNoaW5lcnku",
            "cGtnLmFwaXMubWV0YS52MS5PYmplY3RNZXRhElMKBHNwZWMYAiABKAsyRS5n",
            "aXRodWIuY29tLm1ldGFwcm92Lm1vZGVsZGFwaS5wa2cuYXBpcy5kYXRhLnYx",
            "YWxwaGExLkRhdGFQcm9kdWN0U3BlYxJXCgZzdGF0dXMYAyABKAsyRy5naXRo",
            "dWIuY29tLm1ldGFwcm92Lm1vZGVsZGFwaS5wa2cuYXBpcy5kYXRhLnYxYWxw",
            "aGExLkRhdGFQcm9kdWN0U3RhdHVzIp0BChREYXRhUHJvZHVjdENvbmRpdGlv",
            "bhIMCgR0eXBlGAEgASgJEg4KBnN0YXR1cxgCIAEoCRJGChJsYXN0VHJhbnNp",
            "dGlvblRpbWUYBCABKAsyKi5rOHMuaW8uYXBpbWFjaGluZXJ5LnBrZy5hcGlz",
            "Lm1ldGEudjEuVGltZRIOCgZyZWFzb24YBSABKAkSDwoHbWVzc2FnZRgGIAEo",
            "CSKlAQoPRGF0YVByb2R1Y3RMaXN0EkAKCG1ldGFkYXRhGAEgASgLMi4uazhz",
            "LmlvLmFwaW1hY2hpbmVyeS5wa2cuYXBpcy5tZXRhLnYxLkxpc3RNZXRhElAK",
            "BWl0ZW1zGAIgAygLMkEuZ2l0aHViLmNvbS5tZXRhcHJvdi5tb2RlbGRhcGku",
            "cGtnLmFwaXMuZGF0YS52MWFscGhhMS5EYXRhUHJvZHVjdCL7BAoPRGF0YVBy",
            "b2R1Y3RTcGVjEg0KBW93bmVyGAEgASgJEjYKCXRlbmFudFJlZhgCIAEoCzIj",
            "Lms4cy5pby5hcGkuY29yZS52MS5PYmplY3RSZWZlcmVuY2USVwoMc3Rha2Vo",
            "b2xkZXJzGAMgAygLMkEuZ2l0aHViLmNvbS5tZXRhcHJvdi5tb2RlbGRhcGku",
            "cGtnLmFwaXMuZGF0YS52MWFscGhhMS5TdGFrZUhvbGRlchJWCgtnaXRMb2Nh",
            "dGlvbhgEIAEoCzJBLmdpdGh1Yi5jb20ubWV0YXByb3YubW9kZWxkYXBpLnBr",
            "Zy5hcGlzLmRhdGEudjFhbHBoYTEuR2l0TG9jYXRpb24SWgoNaW1hZ2VMb2Nh",
            "dGlvbhgFIAEoCzJDLmdpdGh1Yi5jb20ubWV0YXByb3YubW9kZWxkYXBpLnBr",
            "Zy5hcGlzLmRhdGEudjFhbHBoYTEuSW1hZ2VMb2NhdGlvbhIPCgdsYWJOYW1l",
            "GAcgASgJEhcKD3NlcnZpbmdTaXRlTmFtZRgIIAEoCRIMCgR0YXNrGAkgASgJ",
            "EhMKC2Rlc2NyaXB0aW9uGAogASgJElgKDGRhdGFMb2NhdGlvbhgLIAEoCzJC",
            "LmdpdGh1Yi5jb20ubWV0YXByb3YubW9kZWxkYXBpLnBrZy5hcGlzLmRhdGEu",
            "djFhbHBoYTEuRGF0YUxvY2F0aW9uEhQKDG5vdGlmaWVyTmFtZRgMIAEoCRIe",
            "ChZtb2RlbFdvcmtsb2FkQ2xhc3NOYW1lGA0gASgJEh0KFWRhdGFXb3JrbG9h",
            "ZENsYXNzTmFtZRgOIAEoCRIYChByZXRyaWVzT25GYWlsdXJlGA8gASgFInMK",
            "EURhdGFQcm9kdWN0U3RhdHVzEl4KCmNvbmRpdGlvbnMYASADKAsySi5naXRo",
            "dWIuY29tLm1ldGFwcm92Lm1vZGVsZGFwaS5wa2cuYXBpcy5kYXRhLnYxYWxw",
            "aGExLkRhdGFQcm9kdWN0Q29uZGl0aW9uIpQCChJEYXRhUHJvZHVjdFZlcnNp",
            "b24SQgoIbWV0YWRhdGEYASABKAsyMC5rOHMuaW8uYXBpbWFjaGluZXJ5LnBr",
            "Zy5hcGlzLm1ldGEudjEuT2JqZWN0TWV0YRJaCgRzcGVjGAIgASgLMkwuZ2l0",
            "aHViLmNvbS5tZXRhcHJvdi5tb2RlbGRhcGkucGtnLmFwaXMuZGF0YS52MWFs",
            "cGhhMS5EYXRhUHJvZHVjdFZlcnNpb25TcGVjEl4KBnN0YXR1cxgDIAEoCzJO",
            "LmdpdGh1Yi5jb20ubWV0YXByb3YubW9kZWxkYXBpLnBrZy5hcGlzLmRhdGEu",
            "djFhbHBoYTEuRGF0YVByb2R1Y3RWZXJzaW9uU3RhdHVzIqQBChtEYXRhUHJv",
            "ZHVjdFZlcnNpb25Db25kaXRpb24SDAoEdHlwZRgBIAEoCRIOCgZzdGF0dXMY",
            "AiABKAkSRgoSbGFzdFRyYW5zaXRpb25UaW1lGAQgASgLMiouazhzLmlvLmFw",
            "aW1hY2hpbmVyeS5wa2cuYXBpcy5tZXRhLnYxLlRpbWUSDgoGcmVhc29uGAUg",
            "ASgJEg8KB21lc3NhZ2UYBiABKAkiswEKFkRhdGFQcm9kdWN0VmVyc2lvbkxp",
            "c3QSQAoIbWV0YWRhdGEYASABKAsyLi5rOHMuaW8uYXBpbWFjaGluZXJ5LnBr",
            "Zy5hcGlzLm1ldGEudjEuTGlzdE1ldGESVwoFaXRlbXMYAiADKAsySC5naXRo",
            "dWIuY29tLm1ldGFwcm92Lm1vZGVsZGFwaS5wa2cuYXBpcy5kYXRhLnYxYWxw",
            "aGExLkRhdGFQcm9kdWN0VmVyc2lvbiKgAQoWRGF0YVByb2R1Y3RWZXJzaW9u",
            "U3BlYxI3Cgpwcm9kdWN0UmVmGAEgASgLMiMuazhzLmlvLmFwaS5jb3JlLnYx",
            "Lk9iamVjdFJlZmVyZW5jZRITCgtkZXNjcmlwdGlvbhgCIAEoCRIXCg9wcmV2",
            "VmVyc2lvbk5hbWUYAyABKAkSEAoIYmFzZWxpbmUYBCABKAgSDQoFb3duZXIY",
            "BSABKAkigQEKGERhdGFQcm9kdWN0VmVyc2lvblN0YXR1cxJlCgpjb25kaXRp",
            "b25zGAEgAygLMlEuZ2l0aHViLmNvbS5tZXRhcHJvdi5tb2RlbGRhcGkucGtn",
            "LmFwaXMuZGF0YS52MWFscGhhMS5EYXRhUHJvZHVjdFZlcnNpb25Db25kaXRp",
            "b24i/AEKCkRhdGFTb3VyY2USQgoIbWV0YWRhdGEYASABKAsyMC5rOHMuaW8u",
            "YXBpbWFjaGluZXJ5LnBrZy5hcGlzLm1ldGEudjEuT2JqZWN0TWV0YRJSCgRz",
            "cGVjGAIgASgLMkQuZ2l0aHViLmNvbS5tZXRhcHJvdi5tb2RlbGRhcGkucGtn",
            "LmFwaXMuZGF0YS52MWFscGhhMS5EYXRhU291cmNlU3BlYxJWCgZzdGF0dXMY",
            "AyABKAsyRi5naXRodWIuY29tLm1ldGFwcm92Lm1vZGVsZGFwaS5wa2cuYXBp",
            "cy5kYXRhLnYxYWxwaGExLkRhdGFTb3VyY2VTdGF0dXMinAEKE0RhdGFTb3Vy",
            "Y2VDb25kaXRpb24SDAoEdHlwZRgBIAEoCRIOCgZzdGF0dXMYAiABKAkSRgoS",
            "bGFzdFRyYW5zaXRpb25UaW1lGAQgASgLMiouazhzLmlvLmFwaW1hY2hpbmVy",
            "eS5wa2cuYXBpcy5tZXRhLnYxLlRpbWUSDgoGcmVhc29uGAUgASgJEg8KB21l",
            "c3NhZ2UYBiABKAkiowEKDkRhdGFTb3VyY2VMaXN0EkAKCG1ldGFkYXRhGAEg",
            "ASgLMi4uazhzLmlvLmFwaW1hY2hpbmVyeS5wa2cuYXBpcy5tZXRhLnYxLkxp",
            "c3RNZXRhEk8KBWl0ZW1zGAIgAygLMkAuZ2l0aHViLmNvbS5tZXRhcHJvdi5t",
            "b2RlbGRhcGkucGtnLmFwaXMuZGF0YS52MWFscGhhMS5EYXRhU291cmNlItYC",
            "Cg5EYXRhU291cmNlU3BlYxIRCglvd25lck5hbWUYASABKAkSEwoLdmVyc2lv",
            "bk5hbWUYAiABKAkSEwoLZGVzY3JpcHRpb24YAyABKAkSTAoGc2NoZW1hGAQg",
            "ASgLMjwuZ2l0aHViLmNvbS5tZXRhcHJvdi5tb2RlbGRhcGkucGtnLmFwaXMu",
            "ZGF0YS52MWFscGhhMS5TY2hlbWESDAoEdHlwZRgFIAEoCRJQCgRmaWxlGAYg",
            "ASgLMkIuZ2l0aHViLmNvbS5tZXRhcHJvdi5tb2RlbGRhcGkucGtnLmFwaXMu",
            "ZGF0YS52MWFscGhhMS5GbGF0RmlsZVNwZWMSSgoFdGFibGUYByABKAsyOy5n",
            "aXRodWIuY29tLm1ldGFwcm92Lm1vZGVsZGFwaS5wa2cuYXBpcy5kYXRhLnYx",
            "YWxwaGExLlRhYmxlEg0KBW93bmVyGAggASgJInEKEERhdGFTb3VyY2VTdGF0",
            "dXMSXQoKY29uZGl0aW9ucxgCIAMoCzJJLmdpdGh1Yi5jb20ubWV0YXByb3Yu",
            "bW9kZWxkYXBpLnBrZy5hcGlzLmRhdGEudjFhbHBoYTEuRGF0YVNvdXJjZUNv",
            "bmRpdGlvbiLzAQoHRGF0YXNldBJCCghtZXRhZGF0YRgBIAEoCzIwLms4cy5p",
            "by5hcGltYWNoaW5lcnkucGtnLmFwaXMubWV0YS52MS5PYmplY3RNZXRhEk8K",
            "BHNwZWMYAiABKAsyQS5naXRodWIuY29tLm1ldGFwcm92Lm1vZGVsZGFwaS5w",
            "a2cuYXBpcy5kYXRhLnYxYWxwaGExLkRhdGFzZXRTcGVjElMKBnN0YXR1cxgD",
            "IAEoCzJDLmdpdGh1Yi5jb20ubWV0YXByb3YubW9kZWxkYXBpLnBrZy5hcGlz",
            "LmRhdGEudjFhbHBoYTEuRGF0YXNldFN0YXR1cyKZAQoQRGF0YXNldENvbmRp",
            "dGlvbhIMCgR0eXBlGAEgASgJEg4KBnN0YXR1cxgCIAEoCRJGChJsYXN0VHJh",
            "bnNpdGlvblRpbWUYBCABKAsyKi5rOHMuaW8uYXBpbWFjaGluZXJ5LnBrZy5h",
            "cGlzLm1ldGEudjEuVGltZRIOCgZyZWFzb24YBSABKAkSDwoHbWVzc2FnZRgG",
            "IAEoCSKdAQoLRGF0YXNldExpc3QSQAoIbWV0YWRhdGEYASABKAsyLi5rOHMu",
            "aW8uYXBpbWFjaGluZXJ5LnBrZy5hcGlzLm1ldGEudjEuTGlzdE1ldGESTAoF",
            "aXRlbXMYAiADKAsyPS5naXRodWIuY29tLm1ldGFwcm92Lm1vZGVsZGFwaS5w",
            "a2cuYXBpcy5kYXRhLnYxYWxwaGExLkRhdGFzZXQiuwIKC0RhdGFzZXRTcGVj",
            "Eg0KBW93bmVyGAEgASgJEhMKC3ZlcnNpb25OYW1lGAIgASgJEhYKDmRhdGFz",
            "b3VyY2VOYW1lGAMgASgJEhMKC2Rlc2NyaXB0aW9uGAQgASgJEg4KBnJlcG9y",
            "dBgHIAEoCBIQCgh2YWxpZGF0ZRgIIAEoCBIPCgdsYWJlbGVkGAogASgIElIK",
            "Bm9yaWdpbhgMIAEoCzJCLmdpdGh1Yi5jb20ubWV0YXByb3YubW9kZWxkYXBp",
            "LnBrZy5hcGlzLmRhdGEudjFhbHBoYTEuRGF0YUxvY2F0aW9uElQKCGxvY2F0",
            "aW9uGA0gASgLMkIuZ2l0aHViLmNvbS5tZXRhcHJvdi5tb2RlbGRhcGkucGtn",
            "LmFwaXMuZGF0YS52MWFscGhhMS5EYXRhTG9jYXRpb24imgEKEURhdGFzZXRT",
            "dGF0aXN0aWNzElcKB2NvbHVtbnMYASADKAsyRi5naXRodWIuY29tLm1ldGFw",
            "cm92Lm1vZGVsZGFwaS5wa2cuYXBpcy5kYXRhLnYxYWxwaGExLkNvbHVtblN0",
            "YXRpc3RpY3MSDAoEcm93cxgDIAEoBRIMCgRjb2xzGAQgASgFEhAKCGZpbGVT",
            "aXplGAUgASgFIuMCCg1EYXRhc2V0U3RhdHVzElsKCnN0YXRpc3RpY3MYASAB",
            "KAsyRy5naXRodWIuY29tLm1ldGFwcm92Lm1vZGVsZGFwaS5wa2cuYXBpcy5k",
            "YXRhLnYxYWxwaGExLkRhdGFzZXRTdGF0aXN0aWNzEg0KBXBoYXNlGAIgASgJ",
            "EhIKCnJlcG9ydE5hbWUYAyABKAkSEgoKcHJvZmlsZVVyaRgEIAEoCRISCgpp",
            "bWJhbGFuY2VkGAUgASgIEk4KBHNpZ3MYBiABKAsyQC5naXRodWIuY29tLm1l",
            "dGFwcm92Lm1vZGVsZGFwaS5wa2cuYXBpcy5kYXRhLnYxYWxwaGExLlNpZ25h",
            "dHVyZXMSWgoKY29uZGl0aW9ucxgHIAMoCzJGLmdpdGh1Yi5jb20ubWV0YXBy",
            "b3YubW9kZWxkYXBpLnBrZy5hcGlzLmRhdGEudjFhbHBoYTEuRGF0YXNldENv",
            "bmRpdGlvbiKmAQoPRGF0YXNldFRlbXBsYXRlEkIKCG1ldGFkYXRhGAEgASgL",
            "MjAuazhzLmlvLmFwaW1hY2hpbmVyeS5wa2cuYXBpcy5tZXRhLnYxLk9iamVj",
            "dE1ldGESTwoEc3BlYxgCIAEoCzJBLmdpdGh1Yi5jb20ubWV0YXByb3YubW9k",
            "ZWxkYXBpLnBrZy5hcGlzLmRhdGEudjFhbHBoYTEuRGF0YXNldFNwZWMi8AEK",
            "BkVudGl0eRJCCghtZXRhZGF0YRgBIAEoCzIwLms4cy5pby5hcGltYWNoaW5l",
            "cnkucGtnLmFwaXMubWV0YS52MS5PYmplY3RNZXRhEk4KBHNwZWMYAiABKAsy",
            "QC5naXRodWIuY29tLm1ldGFwcm92Lm1vZGVsZGFwaS5wa2cuYXBpcy5kYXRh",
            "LnYxYWxwaGExLkVudGl0eVNwZWMSUgoGc3RhdHVzGAMgASgLMkIuZ2l0aHVi",
            "LmNvbS5tZXRhcHJvdi5tb2RlbGRhcGkucGtnLmFwaXMuZGF0YS52MWFscGhh",
            "MS5FbnRpdHlTdGF0dXMimAEKD0VudGl0eUNvbmRpdGlvbhIMCgR0eXBlGAEg",
            "ASgJEg4KBnN0YXR1cxgCIAEoCRJGChJsYXN0VHJhbnNpdGlvblRpbWUYByAB",
            "KAsyKi5rOHMuaW8uYXBpbWFjaGluZXJ5LnBrZy5hcGlzLm1ldGEudjEuVGlt",
            "ZRIOCgZyZWFzb24YBCABKAkSDwoHbWVzc2FnZRgFIAEoCSKbAQoKRW50aXR5",
            "TGlzdBJACghtZXRhZGF0YRgBIAEoCzIuLms4cy5pby5hcGltYWNoaW5lcnku",
            "cGtnLmFwaXMubWV0YS52MS5MaXN0TWV0YRJLCgVpdGVtcxgCIAMoCzI8Lmdp",
            "dGh1Yi5jb20ubWV0YXByb3YubW9kZWxkYXBpLnBrZy5hcGlzLmRhdGEudjFh",
            "bHBoYTEuRW50aXR5IlMKCkVudGl0eVNwZWMSEwoLdmVyc2lvbk5hbWUYASAB",
            "KAkSEwoLZGVzY3JpcHRpb24YAiABKAkSDAoEa2V5cxgDIAMoCRINCgVvd25l",
            "chgEIAEoCSJpCgxFbnRpdHlTdGF0dXMSWQoKY29uZGl0aW9ucxgBIAMoCzJF",
            "LmdpdGh1Yi5jb20ubWV0YXByb3YubW9kZWxkYXBpLnBrZy5hcGlzLmRhdGEu",
            "djFhbHBoYTEuRW50aXR5Q29uZGl0aW9uIvMBCgdGZWF0dXJlEkIKCG1ldGFk",
            "YXRhGAEgASgLMjAuazhzLmlvLmFwaW1hY2hpbmVyeS5wa2cuYXBpcy5tZXRh",
            "LnYxLk9iamVjdE1ldGESTwoEc3BlYxgCIAEoCzJBLmdpdGh1Yi5jb20ubWV0",
            "YXByb3YubW9kZWxkYXBpLnBrZy5hcGlzLmRhdGEudjFhbHBoYTEuRmVhdHVy",
            "ZVNwZWMSUwoGc3RhdHVzGAMgASgLMkMuZ2l0aHViLmNvbS5tZXRhcHJvdi5t",
            "b2RlbGRhcGkucGtnLmFwaXMuZGF0YS52MWFscGhhMS5GZWF0dXJlU3RhdHVz",
            "IkUKD0ZlYXR1cmVBZ2dyU3BlYxIOCgZjb2x1bW4YASABKAkSEQoJZnVuY3Rp",
            "b25zGAIgAygJEg8KB3dpbmRvd3MYAyADKAkimQEKEEZlYXR1cmVDb25kaXRp",
            "b24SDAoEdHlwZRgBIAEoCRIOCgZzdGF0dXMYAiABKAkSRgoSbGFzdFRyYW5z",
            "aXRpb25UaW1lGAcgASgLMiouazhzLmlvLmFwaW1hY2hpbmVyeS5wa2cuYXBp",
            "cy5tZXRhLnYxLlRpbWUSDgoGcmVhc29uGAQgASgJEg8KB21lc3NhZ2UYBSAB",
            "KAkinQEKC0ZlYXR1cmVMaXN0EkAKCG1ldGFkYXRhGAEgASgLMi4uazhzLmlv",
            "LmFwaW1hY2hpbmVyeS5wa2cuYXBpcy5tZXRhLnYxLkxpc3RNZXRhEkwKBWl0",
            "ZW1zGAIgAygLMj0uZ2l0aHViLmNvbS5tZXRhcHJvdi5tb2RlbGRhcGkucGtn",
            "LmFwaXMuZGF0YS52MWFscGhhMS5GZWF0dXJlIosCCg9GZWF0dXJlUGlwZWxp",
            "bmUSQgoIbWV0YWRhdGEYASABKAsyMC5rOHMuaW8uYXBpbWFjaGluZXJ5LnBr",
            "Zy5hcGlzLm1ldGEudjEuT2JqZWN0TWV0YRJXCgRzcGVjGAIgASgLMkkuZ2l0",
            "aHViLmNvbS5tZXRhcHJvdi5tb2RlbGRhcGkucGtnLmFwaXMuZGF0YS52MWFs",
            "cGhhMS5GZWF0dXJlUGlwZWxpbmVTcGVjElsKBnN0YXR1cxgDIAEoCzJLLmdp",
            "dGh1Yi5jb20ubWV0YXByb3YubW9kZWxkYXBpLnBrZy5hcGlzLmRhdGEudjFh",
            "bHBoYTEuRmVhdHVyZVBpcGVsaW5lU3RhdHVzIqEBChhGZWF0dXJlUGlwZWxp",
            "bmVDb25kaXRpb24SDAoEdHlwZRgBIAEoCRIOCgZzdGF0dXMYAiABKAkSRgoS",
            "bGFzdFRyYW5zaXRpb25UaW1lGAcgASgLMiouazhzLmlvLmFwaW1hY2hpbmVy",
            "eS5wa2cuYXBpcy5tZXRhLnYxLlRpbWUSDgoGcmVhc29uGAQgASgJEg8KB21l",
            "c3NhZ2UYBSABKAkirQEKE0ZlYXR1cmVQaXBlbGluZUxpc3QSQAoIbWV0YWRh",
            "dGEYASABKAsyLi5rOHMuaW8uYXBpbWFjaGluZXJ5LnBrZy5hcGlzLm1ldGEu",
            "djEuTGlzdE1ldGESVAoFaXRlbXMYAiADKAsyRS5naXRodWIuY29tLm1ldGFw",
            "cm92Lm1vZGVsZGFwaS5wa2cuYXBpcy5kYXRhLnYxYWxwaGExLkZlYXR1cmVQ",
            "aXBlbGluZSKUAgoSRmVhdHVyZVBpcGVsaW5lUnVuEkIKCG1ldGFkYXRhGAEg",
            "ASgLMjAuazhzLmlvLmFwaW1hY2hpbmVyeS5wa2cuYXBpcy5tZXRhLnYxLk9i",
            "amVjdE1ldGESWgoEc3BlYxgCIAEoCzJMLmdpdGh1Yi5jb20ubWV0YXByb3Yu",
            "bW9kZWxkYXBpLnBrZy5hcGlzLmRhdGEudjFhbHBoYTEuRmVhdHVyZVBpcGVs",
            "aW5lUnVuU3BlYxJeCgZzdGF0dXMYAyABKAsyTi5naXRodWIuY29tLm1ldGFw",
            "cm92Lm1vZGVsZGFwaS5wa2cuYXBpcy5kYXRhLnYxYWxwaGExLkZlYXR1cmVQ",
            "aXBlbGluZVJ1blN0YXR1cyKkAQobRmVhdHVyZVBpcGVsaW5lUnVuQ29uZGl0",
            "aW9uEgwKBHR5cGUYASABKAkSDgoGc3RhdHVzGAIgASgJEkYKEmxhc3RUcmFu",
            "c2l0aW9uVGltZRgHIAEoCzIqLms4cy5pby5hcGltYWNoaW5lcnkucGtnLmFw",
            "aXMubWV0YS52MS5UaW1lEg4KBnJlYXNvbhgEIAEoCRIPCgdtZXNzYWdlGAUg",
            "ASgJIrMBChZGZWF0dXJlUGlwZWxpbmVSdW5MaXN0EkAKCG1ldGFkYXRhGAEg",
            "ASgLMi4uazhzLmlvLmFwaW1hY2hpbmVyeS5wa2cuYXBpcy5tZXRhLnYxLkxp",
            "c3RNZXRhElcKBWl0ZW1zGAIgAygLMkguZ2l0aHViLmNvbS5tZXRhcHJvdi5t",
            "b2RlbGRhcGkucGtnLmFwaXMuZGF0YS52MWFscGhhMS5GZWF0dXJlUGlwZWxp",
            "bmVSdW4iWQoWRmVhdHVyZVBpcGVsaW5lUnVuU3BlYxINCgVvd25lchgBIAEo",
            "CRITCgt2ZXJzaW9uTmFtZRgCIAEoCRIbChNmZWF0dXJlUGlwZWxpbmVOYW1l",
            "GAMgASgJIoQCChhGZWF0dXJlUGlwZWxpbmVSdW5TdGF0dXMSPQoJc3RhcnRU",
            "aW1lGAEgASgLMiouazhzLmlvLmFwaW1hY2hpbmVyeS5wa2cuYXBpcy5tZXRh",
            "LnYxLlRpbWUSQgoOY29tcGxldGlvblRpbWUYAiABKAsyKi5rOHMuaW8uYXBp",
            "bWFjaGluZXJ5LnBrZy5hcGlzLm1ldGEudjEuVGltZRJlCgpjb25kaXRpb25z",
            "GAMgAygLMlEuZ2l0aHViLmNvbS5tZXRhcHJvdi5tb2RlbGRhcGkucGtnLmFw",
            "aXMuZGF0YS52MWFscGhhMS5GZWF0dXJlUGlwZWxpbmVSdW5Db25kaXRpb24i",
            "sgIKE0ZlYXR1cmVQaXBlbGluZVNwZWMSDQoFb3duZXIYASABKAkSEwoLdmVy",
            "c2lvbk5hbWUYAiABKAkSEwoLZGVzY3JpcHRpb24YAyABKAkSWgoLYWdncmVn",
            "YXRpb24YBCABKAsyRS5naXRodWIuY29tLm1ldGFwcm92Lm1vZGVsZGFwaS5w",
            "a2cuYXBpcy5kYXRhLnYxYWxwaGExLkFnZ3JlZ2F0aW9uU3BlYxJiCg9tYXRl",
            "cmlhbGl6YXRpb24YBSABKAsySS5naXRodWIuY29tLm1ldGFwcm92Lm1vZGVs",
            "ZGFwaS5wa2cuYXBpcy5kYXRhLnYxYWxwaGExLk1hdGVyaWFsaXphdGlvblNw",
            "ZWMSDgoGZmFtaWx5GAYgASgJEhIKCmVudGl0eU5hbWUYByABKAkikAEKFUZl",
            "YXR1cmVQaXBlbGluZVN0YXR1cxITCgthdmVyYWdlQ29zdBgBIAEoARJiCgpj",
            "b25kaXRpb25zGAIgAygLMk4uZ2l0aHViLmNvbS5tZXRhcHJvdi5tb2RlbGRh",
            "cGkucGtnLmFwaXMuZGF0YS52MWFscGhhMS5GZWF0dXJlUGlwZWxpbmVDb25k",
            "aXRpb24iyAEKC0ZlYXR1cmVTcGVjEg0KBW93bmVyGAEgASgJEhMKC3ZlcnNp",
            "b25OYW1lGAIgASgJEhMKC2Rlc2NyaXB0aW9uGAMgASgJEgwKBG5hbWUYBCAB",
            "KAkSEQoJa2V5Q29sdW1uGAUgASgJEhcKD3RpbWVzdGFtcENvbHVtbhgGIAEo",
            "CRIVCg1mZWF0dXJlQ29sdW1uGAcgASgJEhIKCmVudGl0eU5hbWUYCCABKAkS",
            "GwoTZmVhdHVyZVBpcGVsaW5lTmFtZRgJIAEoCSL5AQoNRmVhdHVyZVN0YXR1",
            "cxIOCgZzaGEyNTYYAiABKAkSDAoEbmFtZRgDIAEoCRILCgNtaW4YBCABKAES",
            "CwoDbWF4GAUgASgBEgwKBG1lYW4YBiABKAESDQoFemVyb3MYByABKAUSDQoF",
            "bnVsbHMYCCABKAUSCwoDcDAxGAkgASgBEgsKA3A5ORgKIAEoARIOCgZzdGRk",
            "ZXYYCyABKAESWgoKY29uZGl0aW9ucxgNIAMoCzJGLmdpdGh1Yi5jb20ubWV0",
            "YXByb3YubW9kZWxkYXBpLnBrZy5hcGlzLmRhdGEudjFhbHBoYTEuRmVhdHVy",
            "ZUNvbmRpdGlvbiL8AQoKRmVhdHVyZXNldBJCCghtZXRhZGF0YRgBIAEoCzIw",
            "Lms4cy5pby5hcGltYWNoaW5lcnkucGtnLmFwaXMubWV0YS52MS5PYmplY3RN",
            "ZXRhElIKBHNwZWMYAiABKAsyRC5naXRodWIuY29tLm1ldGFwcm92Lm1vZGVs",
            "ZGFwaS5wa2cuYXBpcy5kYXRhLnYxYWxwaGExLkZlYXR1cmVzZXRTcGVjElYK",
            "BnN0YXR1cxgDIAEoCzJGLmdpdGh1Yi5jb20ubWV0YXByb3YubW9kZWxkYXBp",
            "LnBrZy5hcGlzLmRhdGEudjFhbHBoYTEuRmVhdHVyZXNldFN0YXR1cyKcAQoT",
            "RmVhdHVyZXNldENvbmRpdGlvbhIMCgR0eXBlGAEgASgJEg4KBnN0YXR1cxgC",
            "IAEoCRJGChJsYXN0VHJhbnNpdGlvblRpbWUYAyABKAsyKi5rOHMuaW8uYXBp",
            "bWFjaGluZXJ5LnBrZy5hcGlzLm1ldGEudjEuVGltZRIOCgZyZWFzb24YBCAB",
            "KAkSDwoHbWVzc2FnZRgFIAEoCSKjAQoORmVhdHVyZXNldExpc3QSQAoIbWV0",
            "YWRhdGEYASABKAsyLi5rOHMuaW8uYXBpbWFjaGluZXJ5LnBrZy5hcGlzLm1l",
            "dGEudjEuTGlzdE1ldGESTwoFaXRlbXMYAiADKAsyQC5naXRodWIuY29tLm1l",
            "dGFwcm92Lm1vZGVsZGFwaS5wa2cuYXBpcy5kYXRhLnYxYWxwaGExLkZlYXR1",
            "cmVzZXQiWwoORmVhdHVyZXNldFNwZWMSEwoLdmVyc2lvbk5hbWUYASABKAkS",
            "EwoLZGVzY3JpcHRpb24YAiABKAkSEAoIZmVhdHVyZXMYAyADKAkSDQoFb3du",
            "ZXIYBCABKAkicQoQRmVhdHVyZXNldFN0YXR1cxJdCgpjb25kaXRpb25zGAEg",
            "AygLMkkuZ2l0aHViLmNvbS5tZXRhcHJvdi5tb2RlbGRhcGkucGtnLmFwaXMu",
            "ZGF0YS52MWFscGhhMS5GZWF0dXJlc2V0Q29uZGl0aW9uItUBCgxGbGF0Rmls",
            "ZVNwZWMSEAoIZmlsZVR5cGUYBCABKAkSEQoJZGVsaW1pdGVyGAUgASgJEg0K",
            "BXF1b3RlGAYgASgJEhIKCmVzY2FwZUNoYXIYByABKAkSFAoMY29tbWVudENo",
            "YXJzGAggASgJEg4KBmhlYWRlchgJIAEoCBIQCghza2lwUm93cxgKIAEoBRIS",
            "CgpudWxsVmFsdWVzGAsgASgJEhAKCGVuY29kaW5nGAwgASgJEg8KB21heFJv",
            "d3MYDSABKAUSDgoGc3RyaWN0GA4gASgIIjUKC0dpdExvY2F0aW9uEhkKEWdp",
            "dENvbm5lY3Rpb25OYW1lGAEgASgJEgsKA3VybBgCIAEoCSI9Cg1JbWFnZUxv",
            "Y2F0aW9uEgwKBG5hbWUYASABKAkSHgoWcmVnaXN0cnlDb25uZWN0aW9uTmFt",
            "ZRgCIAEoCSKOAgoQTGFiZWxpbmdQaXBlbGluZRJCCghtZXRhZGF0YRgBIAEo",
            "CzIwLms4cy5pby5hcGltYWNoaW5lcnkucGtnLmFwaXMubWV0YS52MS5PYmpl",
            "Y3RNZXRhElgKBHNwZWMYAiABKAsySi5naXRodWIuY29tLm1ldGFwcm92Lm1v",
            "ZGVsZGFwaS5wa2cuYXBpcy5kYXRhLnYxYWxwaGExLkxhYmVsaW5nUGlwZWxp",
            "bmVTcGVjElwKBnN0YXR1cxgDIAEoCzJMLmdpdGh1Yi5jb20ubWV0YXByb3Yu",
            "bW9kZWxkYXBpLnBrZy5hcGlzLmRhdGEudjFhbHBoYTEuTGFiZWxpbmdQaXBl",
            "bGluZVN0YXR1cyKiAQoZTGFiZWxpbmdQaXBlbGluZUNvbmRpdGlvbhIMCgR0",
            "eXBlGAEgASgJEg4KBnN0YXR1cxgCIAEoCRJGChJsYXN0VHJhbnNpdGlvblRp",
            "bWUYAyABKAsyKi5rOHMuaW8uYXBpbWFjaGluZXJ5LnBrZy5hcGlzLm1ldGEu",
            "djEuVGltZRIOCgZyZWFzb24YBCABKAkSDwoHbWVzc2FnZRgFIAEoCSKvAQoU",
            "TGFiZWxpbmdQaXBlbGluZUxpc3QSQAoIbWV0YWRhdGEYASABKAsyLi5rOHMu",
            "aW8uYXBpbWFjaGluZXJ5LnBrZy5hcGlzLm1ldGEudjEuTGlzdE1ldGESVQoF",
            "aXRlbXMYAiADKAsyRi5naXRodWIuY29tLm1ldGFwcm92Lm1vZGVsZGFwaS5w",
            "a2cuYXBpcy5kYXRhLnYxYWxwaGExLkxhYmVsaW5nUGlwZWxpbmUilwIKE0xh",
            "YmVsaW5nUGlwZWxpbmVSdW4SQgoIbWV0YWRhdGEYASABKAsyMC5rOHMuaW8u",
            "YXBpbWFjaGluZXJ5LnBrZy5hcGlzLm1ldGEudjEuT2JqZWN0TWV0YRJbCgRz",
            "cGVjGAIgASgLMk0uZ2l0aHViLmNvbS5tZXRhcHJvdi5tb2RlbGRhcGkucGtn",
            "LmFwaXMuZGF0YS52MWFscGhhMS5MYWJlbGluZ1BpcGVsaW5lUnVuU3BlYxJf",
            "CgZzdGF0dXMYAyABKAsyTy5naXRodWIuY29tLm1ldGFwcm92Lm1vZGVsZGFw",
            "aS5wa2cuYXBpcy5kYXRhLnYxYWxwaGExLkxhYmVsaW5nUGlwZWxpbmVSdW5T",
            "dGF0dXMipQEKHExhYmVsaW5nUGlwZWxpbmVSdW5Db25kaXRpb24SDAoEdHlw",
            "ZRgBIAEoCRIOCgZzdGF0dXMYAiABKAkSRgoSbGFzdFRyYW5zaXRpb25UaW1l",
            "GAMgASgLMiouazhzLmlvLmFwaW1hY2hpbmVyeS5wa2cuYXBpcy5tZXRhLnYx",
            "LlRpbWUSDgoGcmVhc29uGAQgASgJEg8KB21lc3NhZ2UYBSABKAkitQEKF0xh",
            "YmVsaW5nUGlwZWxpbmVSdW5MaXN0EkAKCG1ldGFkYXRhGAEgASgLMi4uazhz",
            "LmlvLmFwaW1hY2hpbmVyeS5wa2cuYXBpcy5tZXRhLnYxLkxpc3RNZXRhElgK",
            "BWl0ZW1zGAIgAygLMkkuZ2l0aHViLmNvbS5tZXRhcHJvdi5tb2RlbGRhcGku",
            "cGtnLmFwaXMuZGF0YS52MWFscGhhMS5MYWJlbGluZ1BpcGVsaW5lUnVuIloK",
            "F0xhYmVsaW5nUGlwZWxpbmVSdW5TcGVjEg0KBW93bmVyGAEgASgJEhMKC3Zl",
            "cnNpb25OYW1lGAIgASgJEhsKE2ZlYXR1cmVQaXBlbGluZU5hbWUYAyABKAki",
            "hgIKGUxhYmVsaW5nUGlwZWxpbmVSdW5TdGF0dXMSPQoJc3RhcnRUaW1lGAEg",
            "ASgLMiouazhzLmlvLmFwaW1hY2hpbmVyeS5wa2cuYXBpcy5tZXRhLnYxLlRp",
            "bWUSQgoOY29tcGxldGlvblRpbWUYAiABKAsyKi5rOHMuaW8uYXBpbWFjaGlu",
            "ZXJ5LnBrZy5hcGlzLm1ldGEudjEuVGltZRJmCgpjb25kaXRpb25zGAMgAygL",
            "MlIuZ2l0aHViLmNvbS5tZXRhcHJvdi5tb2RlbGRhcGkucGtnLmFwaXMuZGF0",
            "YS52MWFscGhhMS5MYWJlbGluZ1BpcGVsaW5lUnVuQ29uZGl0aW9uIqYBChRM",
            "YWJlbGluZ1BpcGVsaW5lU3BlYxITCgt2ZXJzaW9uTmFtZRgBIAEoCRITCgtk",
            "ZXNjcmlwdGlvbhgCIAEoCRIWCg5pbnB1dExhYmVsc2V0cxgDIAMoCRITCgty",
            "ZWNpcGVOYW1lcxgEIAMoCRIWCg5vdXRwdXRMYWJlbHNldBgFIAEoCRIQCghz",
            "Y2hlZHVsZRgGIAEoCRINCgVvd25lchgHIAEoCSJ9ChZMYWJlbGluZ1BpcGVs",
            "aW5lU3RhdHVzEmMKCmNvbmRpdGlvbnMYASADKAsyTy5naXRodWIuY29tLm1l",
            "dGFwcm92Lm1vZGVsZGFwaS5wa2cuYXBpcy5kYXRhLnYxYWxwaGExLkxhYmVs",
            "aW5nUGlwZWxpbmVDb25kaXRpb24irgEKE01hdGVyaWFsaXphdGlvblNwZWMS",
            "DgoGb25saW5lGAEgASgIEg8KB29mZmxpbmUYAiABKAgSPQoJc3RhcnREYXRl",
            "GAMgASgLMiouazhzLmlvLmFwaW1hY2hpbmVyeS5wa2cuYXBpcy5tZXRhLnYx",
            "LlRpbWUSGAoQc2NoZWR1bGVJbnRlcnZhbBgEIAEoCRILCgN0dGwYBSABKAUS",
            "EAoIYmFja2ZpbGwYBiABKAUi8AEKBlJlY2lwZRJCCghtZXRhZGF0YRgBIAEo",
            "CzIwLms4cy5pby5hcGltYWNoaW5lcnkucGtnLmFwaXMubWV0YS52MS5PYmpl",
            "Y3RNZXRhEk4KBHNwZWMYAiABKAsyQC5naXRodWIuY29tLm1ldGFwcm92Lm1v",
            "ZGVsZGFwaS5wa2cuYXBpcy5kYXRhLnYxYWxwaGExLlJlY2lwZVNwZWMSUgoG",
            "c3RhdHVzGAMgASgLMkIuZ2l0aHViLmNvbS5tZXRhcHJvdi5tb2RlbGRhcGku",
            "cGtnLmFwaXMuZGF0YS52MWFscGhhMS5SZWNpcGVTdGF0dXMimAEKD1JlY2lw",
            "ZUNvbmRpdGlvbhIMCgR0eXBlGAEgASgJEg4KBnN0YXR1cxgCIAEoCRJGChJs",
            "YXN0VHJhbnNpdGlvblRpbWUYAyABKAsyKi5rOHMuaW8uYXBpbWFjaGluZXJ5",
            "LnBrZy5hcGlzLm1ldGEudjEuVGltZRIOCgZyZWFzb24YBCABKAkSDwoHbWVz",
            "c2FnZRgFIAEoCSKMAQoPUmVjaXBlSW5wdXRTcGVjEhMKC2RhdGFzZXROYW1l",
            "GAEgASgJElQKCGxvY2F0aW9uGAIgASgLMkIuZ2l0aHViLmNvbS5tZXRhcHJv",
            "di5tb2RlbGRhcGkucGtnLmFwaXMuZGF0YS52MWFscGhhMS5EYXRhTG9jYXRp",
            "b24SDgoGZm9ybWF0GAMgASgJIpsBCgpSZWNpcGVMaXN0EkAKCG1ldGFkYXRh",
            "GAEgASgLMi4uazhzLmlvLmFwaW1hY2hpbmVyeS5wa2cuYXBpcy5tZXRhLnYx",
            "Lkxpc3RNZXRhEksKBWl0ZW1zGAIgAygLMjwuZ2l0aHViLmNvbS5tZXRhcHJv",
            "di5tb2RlbGRhcGkucGtnLmFwaXMuZGF0YS52MWFscGhhMS5SZWNpcGUilAEK",
            "EFJlY2lwZU91dHB1dFNwZWMSFQoNY3JlYXRlRGF0YXNldBgBIAEoCBITCgtk",
            "YXRhc2V0TmFtZRgCIAEoCRJUCghsb2NhdGlvbhgDIAEoCzJCLmdpdGh1Yi5j",
            "b20ubWV0YXByb3YubW9kZWxkYXBpLnBrZy5hcGlzLmRhdGEudjFhbHBoYTEu",
            "RGF0YUxvY2F0aW9uIvkBCglSZWNpcGVSdW4SQgoIbWV0YWRhdGEYASABKAsy",
            "MC5rOHMuaW8uYXBpbWFjaGluZXJ5LnBrZy5hcGlzLm1ldGEudjEuT2JqZWN0",
            "TWV0YRJRCgRzcGVjGAIgASgLMkMuZ2l0aHViLmNvbS5tZXRhcHJvdi5tb2Rl",
            "bGRhcGkucGtnLmFwaXMuZGF0YS52MWFscGhhMS5SZWNpcGVSdW5TcGVjElUK",
            "BnN0YXR1cxgDIAEoCzJFLmdpdGh1Yi5jb20ubWV0YXByb3YubW9kZWxkYXBp",
            "LnBrZy5hcGlzLmRhdGEudjFhbHBoYTEuUmVjaXBlUnVuU3RhdHVzIpsBChJS",
            "ZWNpcGVSdW5Db25kaXRpb24SDAoEdHlwZRgBIAEoCRIOCgZzdGF0dXMYAiAB",
            "KAkSRgoSbGFzdFRyYW5zaXRpb25UaW1lGAMgASgLMiouazhzLmlvLmFwaW1h",
            "Y2hpbmVyeS5wa2cuYXBpcy5tZXRhLnYxLlRpbWUSDgoGcmVhc29uGAQgASgJ",
            "Eg8KB21lc3NhZ2UYBSABKAkioQEKDVJlY2lwZVJ1bkxpc3QSQAoIbWV0YWRh",
            "dGEYASABKAsyLi5rOHMuaW8uYXBpbWFjaGluZXJ5LnBrZy5hcGlzLm1ldGEu",
            "djEuTGlzdE1ldGESTgoFaXRlbXMYAiADKAsyPy5naXRodWIuY29tLm1ldGFw",
            "cm92Lm1vZGVsZGFwaS5wa2cuYXBpcy5kYXRhLnYxYWxwaGExLlJlY2lwZVJ1",
            "biKdAQoNUmVjaXBlUnVuU3BlYxITCgt2ZXJzaW9uTmFtZRgBIAEoCRISCgpy",
            "ZWNpcGVOYW1lGAIgASgJEg8KB2xhYk5hbWUYAyABKAkSUgoGb3V0cHV0GAQg",
            "ASgLMkIuZ2l0aHViLmNvbS5tZXRhcHJvdi5tb2RlbGRhcGkucGtnLmFwaXMu",
            "ZGF0YS52MWFscGhhMS5EYXRhTG9jYXRpb24i/gEKD1JlY2lwZVJ1blN0YXR1",
            "cxI9CglzdGFydFRpbWUYASABKAsyKi5rOHMuaW8uYXBpbWFjaGluZXJ5LnBr",
            "Zy5hcGlzLm1ldGEudjEuVGltZRJCCg5jb21wbGV0aW9uVGltZRgCIAEoCzIq",
            "Lms4cy5pby5hcGltYWNoaW5lcnkucGtnLmFwaXMubWV0YS52MS5UaW1lEg0K",
            "BXBoYXNlGAMgASgJElkKCmNvbmRpdGlvbnMYBCADKAsyRS5naXRodWIuY29t",
            "Lm1ldGFwcm92Lm1vZGVsZGFwaS5wa2cuYXBpcy5kYXRhLnYxYWxwaGExLlJl",
            "Y2lwZUNvbmRpdGlvbiI+ChBSZWNpcGVTYW1wbGVTcGVjEgwKBHR5cGUYASAB",
            "KAkSDAoEcm93cxgCIAEoBRIOCgZmaWx0ZXIYAyABKAkitwMKClJlY2lwZVNw",
            "ZWMSDQoFb3duZXIYASABKAkSEwoLdmVyc2lvbk5hbWUYAiABKAkSEwoLZGVz",
            "Y3JpcHRpb24YAyABKAkSVAoFaW5wdXQYBCABKAsyRS5naXRodWIuY29tLm1l",
            "dGFwcm92Lm1vZGVsZGFwaS5wa2cuYXBpcy5kYXRhLnYxYWxwaGExLlJlY2lw",
            "ZUlucHV0U3BlYxJPCgVzdGVwcxgFIAMoCzJALmdpdGh1Yi5jb20ubWV0YXBy",
            "b3YubW9kZWxkYXBpLnBrZy5hcGlzLmRhdGEudjFhbHBoYTEuUmVjaXBlU3Rl",
            "cBJWCgZvdXRwdXQYBiABKAsyRi5naXRodWIuY29tLm1ldGFwcm92Lm1vZGVs",
            "ZGFwaS5wa2cuYXBpcy5kYXRhLnYxYWxwaGExLlJlY2lwZU91dHB1dFNwZWMS",
            "VgoGc2FtcGxlGAcgASgLMkYuZ2l0aHViLmNvbS5tZXRhcHJvdi5tb2RlbGRh",
            "cGkucGtnLmFwaXMuZGF0YS52MWFscGhhMS5SZWNpcGVTYW1wbGVTcGVjEhkK",
            "EXdvcmtsb2FkQ2xhc3NOYW1lGAggASgJImkKDFJlY2lwZVN0YXR1cxJZCgpj",
            "b25kaXRpb25zGAEgAygLMkUuZ2l0aHViLmNvbS5tZXRhcHJvdi5tb2RlbGRh",
            "cGkucGtnLmFwaXMuZGF0YS52MWFscGhhMS5SZWNpcGVDb25kaXRpb24icwoK",
            "UmVjaXBlU3RlcBIKCgJvcBgBIAEoCRJZCgpwYXJhbWV0ZXJzGAIgAygLMkUu",
            "Z2l0aHViLmNvbS5tZXRhcHJvdi5tb2RlbGRhcGkucGtnLmFwaXMuZGF0YS52",
            "MWFscGhhMS5SZWNpcGVTdGVwUGFyYW0iLgoPUmVjaXBlU3RlcFBhcmFtEgwK",
            "BG5hbWUYASABKAkSDQoFdmFsdWUYAiABKAkisQEKBlNjaGVtYRJYCgh0c1Nj",
            "aGVtYRgBIAEoCzJGLmdpdGh1Yi5jb20ubWV0YXByb3YubW9kZWxkYXBpLnBr",
            "Zy5hcGlzLmRhdGEudjFhbHBoYTEuVGltZVNlcmllc1NjaGVtYRJNCgdjb2x1",
            "bW5zGAIgAygLMjwuZ2l0aHViLmNvbS5tZXRhcHJvdi5tb2RlbGRhcGkucGtn",
            "LmFwaXMuZGF0YS52MWFscGhhMS5Db2x1bW4iWwoKU2lnbmF0dXJlcxIMCgRk",
            "YXRhGAIgASgJEg4KBmxhYmVscxgDIAEoCRINCgV0cmFpbhgEIAEoCRIMCgR0",
            "ZXN0GAUgASgJEhIKCnZhbGlkYXRpb24YBiABKAkiMQoLU3Rha2VIb2xkZXIS",
            "EwoLYWNjb3VudE5hbWUYASABKAkSDQoFcm9sZXMYAiADKAkiwQEKBVRhYmxl",
            "EhMKC3ZlcnNpb25OYW1lGAEgASgJEhMKC2Rlc2NyaXB0aW9uGAIgASgJEg0K",
            "BXF1ZXJ5GAMgASgJEhIKCnNlcnZlclR5cGUYBCABKAkSGAoQY29ubmVjdGlv",
            "blN0cmluZxgFIAEoCRI6Cg1jb25uZWN0aW9uUmVmGAYgASgLMiMuazhzLmlv",
            "LmFwaS5jb3JlLnYxLk9iamVjdFJlZmVyZW5jZRIVCg1zZXJ2ZXJWZXJzaW9u",
            "GAcgASgJIjEKEFRpbWVTZXJpZXNTY2hlbWESDAoEZnJlcRgBIAEoCRIPCgdj",
            "b3VudHJ5GAIgASgJQgpaCHYxYWxwaGEx"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Catalog.V1Alpha1.GeneratedReflection.Descriptor, global::K8S.Io.Api.Core.V1.GeneratedReflection.Descriptor, global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.GeneratedReflection.Descriptor, global::K8S.Io.Apimachinery.Pkg.Runtime.GeneratedReflection.Descriptor, global::K8S.Io.Apimachinery.Pkg.Runtime.Schema.GeneratedReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.AggregationSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.AggregationSpec.Parser, new[]{ "SlidePeriod", "Aggregations" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Column), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Column.Parser, new[]{ "Name", "FeatureName", "Datatype", "Format", "Description", "Ignore", "Label", "Nullable", "Pk", "MultipleOf", "Maximum", "ExclusiveMaximum", "Minimum", "ExclusiveMinimum", "MaxLength", "MinLength", "Pattern", "Required", "Title", "Example", "ExternalDocs", "Enum", "TransformerHint", "MaxItems", "MinItems", "UniqueItems", "TimeColumn" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.ColumnStatistics), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.ColumnStatistics.Parser, new[]{ "Name", "Min", "Max", "Mean", "Stddev", "Skewness", "Kurtosis", "Zeros", "P25", "P50", "P75", "Missing", "Invalid", "Target", "Importance", "Distinc", "Ignored", "Nullable", "HighCred", "HighCorr", "Skew" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataLocation), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataLocation.Parser, new[]{ "BucketName", "Path" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataPipeline), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataPipeline.Parser, new[]{ "Metadata", "Spec", "Status" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataPipelineCondition), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataPipelineCondition.Parser, new[]{ "Type", "Status", "LastTransitionTime", "Reason", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataPipelineList), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataPipelineList.Parser, new[]{ "Metadata", "Items" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataPipelineRun), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataPipelineRun.Parser, new[]{ "Metadata", "Spec", "Status" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataPipelineRunCondition), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataPipelineRunCondition.Parser, new[]{ "Type", "Status", "LastTransitionTime", "Reason", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataPipelineRunList), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataPipelineRunList.Parser, new[]{ "Metadata", "Items" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataPipelineRunSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataPipelineRunSpec.Parser, new[]{ "VersionName", "DatapipelineName", "DataLocation", "Owner" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataPipelineRunStatus), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataPipelineRunStatus.Parser, new[]{ "Inputs", "Output", "Phase", "StartTime", "CompletionTime", "Conditions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataPipelineSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataPipelineSpec.Parser, new[]{ "VersionName", "Description", "InputDatasets", "RecipeNames", "OutputDatasetName", "Schedule", "Owner" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataPipelineStatus), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataPipelineStatus.Parser, new[]{ "Conditions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataProduct), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataProduct.Parser, new[]{ "Metadata", "Spec", "Status" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataProductCondition), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataProductCondition.Parser, new[]{ "Type", "Status", "LastTransitionTime", "Reason", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataProductList), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataProductList.Parser, new[]{ "Metadata", "Items" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataProductSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataProductSpec.Parser, new[]{ "Owner", "TenantRef", "Stakeholders", "GitLocation", "ImageLocation", "LabName", "ServingSiteName", "Task", "Description", "DataLocation", "NotifierName", "ModelWorkloadClassName", "DataWorkloadClassName", "RetriesOnFailure" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataProductStatus), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataProductStatus.Parser, new[]{ "Conditions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataProductVersion), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataProductVersion.Parser, new[]{ "Metadata", "Spec", "Status" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataProductVersionCondition), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataProductVersionCondition.Parser, new[]{ "Type", "Status", "LastTransitionTime", "Reason", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataProductVersionList), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataProductVersionList.Parser, new[]{ "Metadata", "Items" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataProductVersionSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataProductVersionSpec.Parser, new[]{ "ProductRef", "Description", "PrevVersionName", "Baseline", "Owner" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataProductVersionStatus), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataProductVersionStatus.Parser, new[]{ "Conditions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataSource), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataSource.Parser, new[]{ "Metadata", "Spec", "Status" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataSourceCondition), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataSourceCondition.Parser, new[]{ "Type", "Status", "LastTransitionTime", "Reason", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataSourceList), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataSourceList.Parser, new[]{ "Metadata", "Items" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataSourceSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataSourceSpec.Parser, new[]{ "OwnerName", "VersionName", "Description", "Schema", "Type", "File", "Table", "Owner" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataSourceStatus), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataSourceStatus.Parser, new[]{ "Conditions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Dataset), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Dataset.Parser, new[]{ "Metadata", "Spec", "Status" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DatasetCondition), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DatasetCondition.Parser, new[]{ "Type", "Status", "LastTransitionTime", "Reason", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DatasetList), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DatasetList.Parser, new[]{ "Metadata", "Items" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DatasetSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DatasetSpec.Parser, new[]{ "Owner", "VersionName", "DatasourceName", "Description", "Report", "Validate", "Labeled", "Origin", "Location" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DatasetStatistics), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DatasetStatistics.Parser, new[]{ "Columns", "Rows", "Cols", "FileSize" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DatasetStatus), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DatasetStatus.Parser, new[]{ "Statistics", "Phase", "ReportName", "ProfileUri", "Imbalanced", "Sigs", "Conditions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DatasetTemplate), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DatasetTemplate.Parser, new[]{ "Metadata", "Spec" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Entity), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Entity.Parser, new[]{ "Metadata", "Spec", "Status" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.EntityCondition), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.EntityCondition.Parser, new[]{ "Type", "Status", "LastTransitionTime", "Reason", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.EntityList), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.EntityList.Parser, new[]{ "Metadata", "Items" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.EntitySpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.EntitySpec.Parser, new[]{ "VersionName", "Description", "Keys", "Owner" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.EntityStatus), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.EntityStatus.Parser, new[]{ "Conditions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Feature), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Feature.Parser, new[]{ "Metadata", "Spec", "Status" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeatureAggrSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeatureAggrSpec.Parser, new[]{ "Column", "Functions", "Windows" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeatureCondition), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeatureCondition.Parser, new[]{ "Type", "Status", "LastTransitionTime", "Reason", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeatureList), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeatureList.Parser, new[]{ "Metadata", "Items" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturePipeline), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturePipeline.Parser, new[]{ "Metadata", "Spec", "Status" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturePipelineCondition), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturePipelineCondition.Parser, new[]{ "Type", "Status", "LastTransitionTime", "Reason", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturePipelineList), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturePipelineList.Parser, new[]{ "Metadata", "Items" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturePipelineRun), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturePipelineRun.Parser, new[]{ "Metadata", "Spec", "Status" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturePipelineRunCondition), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturePipelineRunCondition.Parser, new[]{ "Type", "Status", "LastTransitionTime", "Reason", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturePipelineRunList), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturePipelineRunList.Parser, new[]{ "Metadata", "Items" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturePipelineRunSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturePipelineRunSpec.Parser, new[]{ "Owner", "VersionName", "FeaturePipelineName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturePipelineRunStatus), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturePipelineRunStatus.Parser, new[]{ "StartTime", "CompletionTime", "Conditions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturePipelineSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturePipelineSpec.Parser, new[]{ "Owner", "VersionName", "Description", "Aggregation", "Materialization", "Family", "EntityName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturePipelineStatus), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturePipelineStatus.Parser, new[]{ "AverageCost", "Conditions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeatureSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeatureSpec.Parser, new[]{ "Owner", "VersionName", "Description", "Name", "KeyColumn", "TimestampColumn", "FeatureColumn", "EntityName", "FeaturePipelineName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeatureStatus), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeatureStatus.Parser, new[]{ "Sha256", "Name", "Min", "Max", "Mean", "Zeros", "Nulls", "P01", "P99", "Stddev", "Conditions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Featureset), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Featureset.Parser, new[]{ "Metadata", "Spec", "Status" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturesetCondition), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturesetCondition.Parser, new[]{ "Type", "Status", "LastTransitionTime", "Reason", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturesetList), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturesetList.Parser, new[]{ "Metadata", "Items" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturesetSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturesetSpec.Parser, new[]{ "VersionName", "Description", "Features", "Owner" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturesetStatus), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturesetStatus.Parser, new[]{ "Conditions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FlatFileSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FlatFileSpec.Parser, new[]{ "FileType", "Delimiter", "Quote", "EscapeChar", "CommentChars", "Header", "SkipRows", "NullValues", "Encoding", "MaxRows", "Strict" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GitLocation), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GitLocation.Parser, new[]{ "GitConnectionName", "Url" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.ImageLocation), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.ImageLocation.Parser, new[]{ "Name", "RegistryConnectionName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.LabelingPipeline), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.LabelingPipeline.Parser, new[]{ "Metadata", "Spec", "Status" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.LabelingPipelineCondition), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.LabelingPipelineCondition.Parser, new[]{ "Type", "Status", "LastTransitionTime", "Reason", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.LabelingPipelineList), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.LabelingPipelineList.Parser, new[]{ "Metadata", "Items" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.LabelingPipelineRun), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.LabelingPipelineRun.Parser, new[]{ "Metadata", "Spec", "Status" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.LabelingPipelineRunCondition), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.LabelingPipelineRunCondition.Parser, new[]{ "Type", "Status", "LastTransitionTime", "Reason", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.LabelingPipelineRunList), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.LabelingPipelineRunList.Parser, new[]{ "Metadata", "Items" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.LabelingPipelineRunSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.LabelingPipelineRunSpec.Parser, new[]{ "Owner", "VersionName", "FeaturePipelineName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.LabelingPipelineRunStatus), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.LabelingPipelineRunStatus.Parser, new[]{ "StartTime", "CompletionTime", "Conditions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.LabelingPipelineSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.LabelingPipelineSpec.Parser, new[]{ "VersionName", "Description", "InputLabelsets", "RecipeNames", "OutputLabelset", "Schedule", "Owner" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.LabelingPipelineStatus), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.LabelingPipelineStatus.Parser, new[]{ "Conditions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.MaterializationSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.MaterializationSpec.Parser, new[]{ "Online", "Offline", "StartDate", "ScheduleInterval", "Ttl", "Backfill" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Recipe), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Recipe.Parser, new[]{ "Metadata", "Spec", "Status" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeCondition), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeCondition.Parser, new[]{ "Type", "Status", "LastTransitionTime", "Reason", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeInputSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeInputSpec.Parser, new[]{ "DatasetName", "Location", "Format" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeList), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeList.Parser, new[]{ "Metadata", "Items" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeOutputSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeOutputSpec.Parser, new[]{ "CreateDataset", "DatasetName", "Location" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeRun), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeRun.Parser, new[]{ "Metadata", "Spec", "Status" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeRunCondition), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeRunCondition.Parser, new[]{ "Type", "Status", "LastTransitionTime", "Reason", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeRunList), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeRunList.Parser, new[]{ "Metadata", "Items" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeRunSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeRunSpec.Parser, new[]{ "VersionName", "RecipeName", "LabName", "Output" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeRunStatus), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeRunStatus.Parser, new[]{ "StartTime", "CompletionTime", "Phase", "Conditions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeSampleSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeSampleSpec.Parser, new[]{ "Type", "Rows", "Filter" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeSpec), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeSpec.Parser, new[]{ "Owner", "VersionName", "Description", "Input", "Steps", "Output", "Sample", "WorkloadClassName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeStatus), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeStatus.Parser, new[]{ "Conditions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeStep), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeStep.Parser, new[]{ "Op", "Parameters" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeStepParam), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeStepParam.Parser, new[]{ "Name", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Schema), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Schema.Parser, new[]{ "TsSchema", "Columns" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Signatures), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Signatures.Parser, new[]{ "Data", "Labels", "Train", "Test", "Validation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.StakeHolder), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.StakeHolder.Parser, new[]{ "AccountName", "Roles" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Table), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Table.Parser, new[]{ "VersionName", "Description", "Query", "ServerType", "ConnectionString", "ConnectionRef", "ServerVersion" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.TimeSeriesSchema), global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.TimeSeriesSchema.Parser, new[]{ "Freq", "Country" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Define the aggregation period
  /// </summary>
  public sealed partial class AggregationSpec : pb::IMessage<AggregationSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AggregationSpec> _parser = new pb::MessageParser<AggregationSpec>(() => new AggregationSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AggregationSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AggregationSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AggregationSpec(AggregationSpec other) : this() {
      slidePeriod_ = other.slidePeriod_;
      aggregations_ = other.aggregations_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AggregationSpec Clone() {
      return new AggregationSpec(this);
    }

    /// <summary>Field number for the "slidePeriod" field.</summary>
    public const int SlidePeriodFieldNumber = 1;
    private readonly static string SlidePeriodDefaultValue = "";

    private string slidePeriod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SlidePeriod {
      get { return slidePeriod_ ?? SlidePeriodDefaultValue; }
      set {
        slidePeriod_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "slidePeriod" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSlidePeriod {
      get { return slidePeriod_ != null; }
    }
    /// <summary>Clears the value of the "slidePeriod" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSlidePeriod() {
      slidePeriod_ = null;
    }

    /// <summary>Field number for the "aggregations" field.</summary>
    public const int AggregationsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeatureAggrSpec> _repeated_aggregations_codec
        = pb::FieldCodec.ForMessage(18, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeatureAggrSpec.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeatureAggrSpec> aggregations_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeatureAggrSpec>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeatureAggrSpec> Aggregations {
      get { return aggregations_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AggregationSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AggregationSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SlidePeriod != other.SlidePeriod) return false;
      if(!aggregations_.Equals(other.aggregations_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSlidePeriod) hash ^= SlidePeriod.GetHashCode();
      hash ^= aggregations_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSlidePeriod) {
        output.WriteRawTag(10);
        output.WriteString(SlidePeriod);
      }
      aggregations_.WriteTo(output, _repeated_aggregations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSlidePeriod) {
        output.WriteRawTag(10);
        output.WriteString(SlidePeriod);
      }
      aggregations_.WriteTo(ref output, _repeated_aggregations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasSlidePeriod) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SlidePeriod);
      }
      size += aggregations_.CalculateSize(_repeated_aggregations_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AggregationSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasSlidePeriod) {
        SlidePeriod = other.SlidePeriod;
      }
      aggregations_.Add(other.aggregations_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SlidePeriod = input.ReadString();
            break;
          }
          case 18: {
            aggregations_.AddEntriesFrom(input, _repeated_aggregations_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SlidePeriod = input.ReadString();
            break;
          }
          case 18: {
            aggregations_.AddEntriesFrom(ref input, _repeated_aggregations_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Column : pb::IMessage<Column>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Column> _parser = new pb::MessageParser<Column>(() => new Column());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Column> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Column() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Column(Column other) : this() {
      _hasBits0 = other._hasBits0;
      name_ = other.name_;
      featureName_ = other.featureName_;
      datatype_ = other.datatype_;
      format_ = other.format_;
      description_ = other.description_;
      ignore_ = other.ignore_;
      label_ = other.label_;
      nullable_ = other.nullable_;
      pk_ = other.pk_;
      multipleOf_ = other.multipleOf_;
      maximum_ = other.maximum_;
      exclusiveMaximum_ = other.exclusiveMaximum_;
      minimum_ = other.minimum_;
      exclusiveMinimum_ = other.exclusiveMinimum_;
      maxLength_ = other.maxLength_;
      minLength_ = other.minLength_;
      pattern_ = other.pattern_;
      required_ = other.required_;
      title_ = other.title_;
      example_ = other.example_;
      externalDocs_ = other.externalDocs_;
      enum_ = other.enum_.Clone();
      transformerHint_ = other.transformerHint_;
      maxItems_ = other.maxItems_;
      minItems_ = other.minItems_;
      uniqueItems_ = other.uniqueItems_;
      timeColumn_ = other.timeColumn_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Column Clone() {
      return new Column(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private readonly static string NameDefaultValue = "";

    private string name_;
    /// <summary>
    /// FileName specify the name of the attribute
    /// +kubebuilder:validation:MaxLength=63
    /// +kubebuilder:validation:MinLength=1
    /// required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "featureName" field.</summary>
    public const int FeatureNameFieldNumber = 2;
    private readonly static string FeatureNameDefaultValue = "";

    private string featureName_;
    /// <summary>
    /// FileName specify the name of the feature, if this attribute comes from a feature
    /// +kubebuilder:validation:MaxLength=63
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FeatureName {
      get { return featureName_ ?? FeatureNameDefaultValue; }
      set {
        featureName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "featureName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFeatureName {
      get { return featureName_ != null; }
    }
    /// <summary>Clears the value of the "featureName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFeatureName() {
      featureName_ = null;
    }

    /// <summary>Field number for the "datatype" field.</summary>
    public const int DatatypeFieldNumber = 3;
    private readonly static string DatatypeDefaultValue = "";

    private string datatype_;
    /// <summary>
    /// Type specify the data type of the attribute
    /// required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Datatype {
      get { return datatype_ ?? DatatypeDefaultValue; }
      set {
        datatype_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "datatype" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDatatype {
      get { return datatype_ != null; }
    }
    /// <summary>Clears the value of the "datatype" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDatatype() {
      datatype_ = null;
    }

    /// <summary>Field number for the "format" field.</summary>
    public const int FormatFieldNumber = 4;
    private readonly static string FormatDefaultValue = "";

    private string format_;
    /// <summary>
    /// DataFormat is the domain of the column. A domain constrain the set of values.
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Format {
      get { return format_ ?? FormatDefaultValue; }
      set {
        format_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "format" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFormat {
      get { return format_ != null; }
    }
    /// <summary>Clears the value of the "format" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFormat() {
      format_ = null;
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 5;
    private readonly static string DescriptionDefaultValue = "";

    private string description_;
    /// <summary>
    /// Description is a description of the feature
    /// +kubebuilder:default =""
    /// +kubebuilder:validation:MaxLength=63
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_ ?? DescriptionDefaultValue; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "description" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDescription {
      get { return description_ != null; }
    }
    /// <summary>Clears the value of the "description" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDescription() {
      description_ = null;
    }

    /// <summary>Field number for the "ignore" field.</summary>
    public const int IgnoreFieldNumber = 6;
    private readonly static bool IgnoreDefaultValue = false;

    private bool ignore_;
    /// <summary>
    /// Ignore specify if the attribute should be ignored when building the model
    /// default is false
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Ignore {
      get { if ((_hasBits0 & 1) != 0) { return ignore_; } else { return IgnoreDefaultValue; } }
      set {
        _hasBits0 |= 1;
        ignore_ = value;
      }
    }
    /// <summary>Gets whether the "ignore" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasIgnore {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "ignore" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIgnore() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "label" field.</summary>
    public const int LabelFieldNumber = 7;
    private readonly static bool LabelDefaultValue = false;

    private bool label_;
    /// <summary>
    /// Label should be true if this attribute is the predictable target
    /// Default is false
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Label {
      get { if ((_hasBits0 & 2) != 0) { return label_; } else { return LabelDefaultValue; } }
      set {
        _hasBits0 |= 2;
        label_ = value;
      }
    }
    /// <summary>Gets whether the "label" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLabel {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "label" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLabel() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "nullable" field.</summary>
    public const int NullableFieldNumber = 8;
    private readonly static bool NullableDefaultValue = false;

    private bool nullable_;
    /// <summary>
    /// Nullable indicates if a column can contain string
    /// Default is false
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Nullable {
      get { if ((_hasBits0 & 4) != 0) { return nullable_; } else { return NullableDefaultValue; } }
      set {
        _hasBits0 |= 4;
        nullable_ = value;
      }
    }
    /// <summary>Gets whether the "nullable" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNullable {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "nullable" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNullable() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "pk" field.</summary>
    public const int PkFieldNumber = 9;
    private readonly static bool PkDefaultValue = false;

    private bool pk_;
    /// <summary>
    /// PrimaryKey denotes if this column is part of the file key.
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Pk {
      get { if ((_hasBits0 & 8) != 0) { return pk_; } else { return PkDefaultValue; } }
      set {
        _hasBits0 |= 8;
        pk_ = value;
      }
    }
    /// <summary>Gets whether the "pk" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPk {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "pk" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPk() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "multipleOf" field.</summary>
    public const int MultipleOfFieldNumber = 10;
    private readonly static int MultipleOfDefaultValue = 0;

    private int multipleOf_;
    /// <summary>
    /// MultipleOf
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MultipleOf {
      get { if ((_hasBits0 & 16) != 0) { return multipleOf_; } else { return MultipleOfDefaultValue; } }
      set {
        _hasBits0 |= 16;
        multipleOf_ = value;
      }
    }
    /// <summary>Gets whether the "multipleOf" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMultipleOf {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "multipleOf" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMultipleOf() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "maximum" field.</summary>
    public const int MaximumFieldNumber = 11;
    private readonly static double MaximumDefaultValue = 0D;

    private double maximum_;
    /// <summary>
    /// MaximumFloat
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Maximum {
      get { if ((_hasBits0 & 32) != 0) { return maximum_; } else { return MaximumDefaultValue; } }
      set {
        _hasBits0 |= 32;
        maximum_ = value;
      }
    }
    /// <summary>Gets whether the "maximum" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMaximum {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "maximum" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMaximum() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "exclusiveMaximum" field.</summary>
    public const int ExclusiveMaximumFieldNumber = 12;
    private readonly static bool ExclusiveMaximumDefaultValue = false;

    private bool exclusiveMaximum_;
    /// <summary>
    /// ExclusiveMaximum
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ExclusiveMaximum {
      get { if ((_hasBits0 & 64) != 0) { return exclusiveMaximum_; } else { return ExclusiveMaximumDefaultValue; } }
      set {
        _hasBits0 |= 64;
        exclusiveMaximum_ = value;
      }
    }
    /// <summary>Gets whether the "exclusiveMaximum" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasExclusiveMaximum {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "exclusiveMaximum" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearExclusiveMaximum() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "minimum" field.</summary>
    public const int MinimumFieldNumber = 13;
    private readonly static double MinimumDefaultValue = 0D;

    private double minimum_;
    /// <summary>
    /// MinimumFloat
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Minimum {
      get { if ((_hasBits0 & 128) != 0) { return minimum_; } else { return MinimumDefaultValue; } }
      set {
        _hasBits0 |= 128;
        minimum_ = value;
      }
    }
    /// <summary>Gets whether the "minimum" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMinimum {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "minimum" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMinimum() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "exclusiveMinimum" field.</summary>
    public const int ExclusiveMinimumFieldNumber = 14;
    private readonly static bool ExclusiveMinimumDefaultValue = false;

    private bool exclusiveMinimum_;
    /// <summary>
    /// ExclusiveMinimum
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ExclusiveMinimum {
      get { if ((_hasBits0 & 256) != 0) { return exclusiveMinimum_; } else { return ExclusiveMinimumDefaultValue; } }
      set {
        _hasBits0 |= 256;
        exclusiveMinimum_ = value;
      }
    }
    /// <summary>Gets whether the "exclusiveMinimum" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasExclusiveMinimum {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "exclusiveMinimum" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearExclusiveMinimum() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "maxLength" field.</summary>
    public const int MaxLengthFieldNumber = 15;
    private readonly static int MaxLengthDefaultValue = 0;

    private int maxLength_;
    /// <summary>
    /// MaxLength
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxLength {
      get { if ((_hasBits0 & 512) != 0) { return maxLength_; } else { return MaxLengthDefaultValue; } }
      set {
        _hasBits0 |= 512;
        maxLength_ = value;
      }
    }
    /// <summary>Gets whether the "maxLength" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMaxLength {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "maxLength" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMaxLength() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "minLength" field.</summary>
    public const int MinLengthFieldNumber = 16;
    private readonly static int MinLengthDefaultValue = 0;

    private int minLength_;
    /// <summary>
    /// MinLength
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MinLength {
      get { if ((_hasBits0 & 1024) != 0) { return minLength_; } else { return MinLengthDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        minLength_ = value;
      }
    }
    /// <summary>Gets whether the "minLength" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMinLength {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "minLength" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMinLength() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "pattern" field.</summary>
    public const int PatternFieldNumber = 17;
    private readonly static string PatternDefaultValue = "";

    private string pattern_;
    /// <summary>
    /// Pattern
    /// Default is empty
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Pattern {
      get { return pattern_ ?? PatternDefaultValue; }
      set {
        pattern_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "pattern" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPattern {
      get { return pattern_ != null; }
    }
    /// <summary>Clears the value of the "pattern" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPattern() {
      pattern_ = null;
    }

    /// <summary>Field number for the "required" field.</summary>
    public const int RequiredFieldNumber = 18;
    private readonly static bool RequiredDefaultValue = false;

    private bool required_;
    /// <summary>
    /// Required
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Required {
      get { if ((_hasBits0 & 2048) != 0) { return required_; } else { return RequiredDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        required_ = value;
      }
    }
    /// <summary>Gets whether the "required" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRequired {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "required" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRequired() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 19;
    private readonly static string TitleDefaultValue = "";

    private string title_;
    /// <summary>
    /// Title
    /// +kubebuilder:validation:MaxLength=63
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_ ?? TitleDefaultValue; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "title" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTitle {
      get { return title_ != null; }
    }
    /// <summary>Clears the value of the "title" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTitle() {
      title_ = null;
    }

    /// <summary>Field number for the "example" field.</summary>
    public const int ExampleFieldNumber = 20;
    private readonly static string ExampleDefaultValue = "";

    private string example_;
    /// <summary>
    /// Example
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Example {
      get { return example_ ?? ExampleDefaultValue; }
      set {
        example_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "example" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasExample {
      get { return example_ != null; }
    }
    /// <summary>Clears the value of the "example" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearExample() {
      example_ = null;
    }

    /// <summary>Field number for the "externalDocs" field.</summary>
    public const int ExternalDocsFieldNumber = 21;
    private readonly static string ExternalDocsDefaultValue = "";

    private string externalDocs_;
    /// <summary>
    /// External Docs
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExternalDocs {
      get { return externalDocs_ ?? ExternalDocsDefaultValue; }
      set {
        externalDocs_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "externalDocs" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasExternalDocs {
      get { return externalDocs_ != null; }
    }
    /// <summary>Clears the value of the "externalDocs" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearExternalDocs() {
      externalDocs_ = null;
    }

    /// <summary>Field number for the "enum" field.</summary>
    public const int EnumFieldNumber = 22;
    private static readonly pb::FieldCodec<string> _repeated_enum_codec
        = pb::FieldCodec.ForString(178);
    private readonly pbc::RepeatedField<string> enum_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Enum
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Enum {
      get { return enum_; }
    }

    /// <summary>Field number for the "transformerHint" field.</summary>
    public const int TransformerHintFieldNumber = 23;
    private readonly static string TransformerHintDefaultValue = "";

    private string transformerHint_;
    /// <summary>
    /// Preprocessor hint constrain the transformer
    /// Default is empty
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TransformerHint {
      get { return transformerHint_ ?? TransformerHintDefaultValue; }
      set {
        transformerHint_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "transformerHint" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTransformerHint {
      get { return transformerHint_ != null; }
    }
    /// <summary>Clears the value of the "transformerHint" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTransformerHint() {
      transformerHint_ = null;
    }

    /// <summary>Field number for the "maxItems" field.</summary>
    public const int MaxItemsFieldNumber = 24;
    private readonly static int MaxItemsDefaultValue = 0;

    private int maxItems_;
    /// <summary>
    /// Max Items in the data in case of a list
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxItems {
      get { if ((_hasBits0 & 4096) != 0) { return maxItems_; } else { return MaxItemsDefaultValue; } }
      set {
        _hasBits0 |= 4096;
        maxItems_ = value;
      }
    }
    /// <summary>Gets whether the "maxItems" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMaxItems {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "maxItems" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMaxItems() {
      _hasBits0 &= ~4096;
    }

    /// <summary>Field number for the "minItems" field.</summary>
    public const int MinItemsFieldNumber = 25;
    private readonly static int MinItemsDefaultValue = 0;

    private int minItems_;
    /// <summary>
    /// Min Items in the data in case of a list.
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MinItems {
      get { if ((_hasBits0 & 8192) != 0) { return minItems_; } else { return MinItemsDefaultValue; } }
      set {
        _hasBits0 |= 8192;
        minItems_ = value;
      }
    }
    /// <summary>Gets whether the "minItems" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMinItems {
      get { return (_hasBits0 & 8192) != 0; }
    }
    /// <summary>Clears the value of the "minItems" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMinItems() {
      _hasBits0 &= ~8192;
    }

    /// <summary>Field number for the "uniqueItems" field.</summary>
    public const int UniqueItemsFieldNumber = 26;
    private readonly static bool UniqueItemsDefaultValue = false;

    private bool uniqueItems_;
    /// <summary>
    /// Enforce that all the items in the list are unique
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool UniqueItems {
      get { if ((_hasBits0 & 16384) != 0) { return uniqueItems_; } else { return UniqueItemsDefaultValue; } }
      set {
        _hasBits0 |= 16384;
        uniqueItems_ = value;
      }
    }
    /// <summary>Gets whether the "uniqueItems" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUniqueItems {
      get { return (_hasBits0 & 16384) != 0; }
    }
    /// <summary>Clears the value of the "uniqueItems" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUniqueItems() {
      _hasBits0 &= ~16384;
    }

    /// <summary>Field number for the "timeColumn" field.</summary>
    public const int TimeColumnFieldNumber = 27;
    private readonly static bool TimeColumnDefaultValue = false;

    private bool timeColumn_;
    /// <summary>
    /// True if this column is used as the time axis in time series foreacst
    /// Default is false.
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool TimeColumn {
      get { if ((_hasBits0 & 32768) != 0) { return timeColumn_; } else { return TimeColumnDefaultValue; } }
      set {
        _hasBits0 |= 32768;
        timeColumn_ = value;
      }
    }
    /// <summary>Gets whether the "timeColumn" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTimeColumn {
      get { return (_hasBits0 & 32768) != 0; }
    }
    /// <summary>Clears the value of the "timeColumn" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTimeColumn() {
      _hasBits0 &= ~32768;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Column);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Column other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (FeatureName != other.FeatureName) return false;
      if (Datatype != other.Datatype) return false;
      if (Format != other.Format) return false;
      if (Description != other.Description) return false;
      if (Ignore != other.Ignore) return false;
      if (Label != other.Label) return false;
      if (Nullable != other.Nullable) return false;
      if (Pk != other.Pk) return false;
      if (MultipleOf != other.MultipleOf) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Maximum, other.Maximum)) return false;
      if (ExclusiveMaximum != other.ExclusiveMaximum) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Minimum, other.Minimum)) return false;
      if (ExclusiveMinimum != other.ExclusiveMinimum) return false;
      if (MaxLength != other.MaxLength) return false;
      if (MinLength != other.MinLength) return false;
      if (Pattern != other.Pattern) return false;
      if (Required != other.Required) return false;
      if (Title != other.Title) return false;
      if (Example != other.Example) return false;
      if (ExternalDocs != other.ExternalDocs) return false;
      if(!enum_.Equals(other.enum_)) return false;
      if (TransformerHint != other.TransformerHint) return false;
      if (MaxItems != other.MaxItems) return false;
      if (MinItems != other.MinItems) return false;
      if (UniqueItems != other.UniqueItems) return false;
      if (TimeColumn != other.TimeColumn) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasName) hash ^= Name.GetHashCode();
      if (HasFeatureName) hash ^= FeatureName.GetHashCode();
      if (HasDatatype) hash ^= Datatype.GetHashCode();
      if (HasFormat) hash ^= Format.GetHashCode();
      if (HasDescription) hash ^= Description.GetHashCode();
      if (HasIgnore) hash ^= Ignore.GetHashCode();
      if (HasLabel) hash ^= Label.GetHashCode();
      if (HasNullable) hash ^= Nullable.GetHashCode();
      if (HasPk) hash ^= Pk.GetHashCode();
      if (HasMultipleOf) hash ^= MultipleOf.GetHashCode();
      if (HasMaximum) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Maximum);
      if (HasExclusiveMaximum) hash ^= ExclusiveMaximum.GetHashCode();
      if (HasMinimum) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Minimum);
      if (HasExclusiveMinimum) hash ^= ExclusiveMinimum.GetHashCode();
      if (HasMaxLength) hash ^= MaxLength.GetHashCode();
      if (HasMinLength) hash ^= MinLength.GetHashCode();
      if (HasPattern) hash ^= Pattern.GetHashCode();
      if (HasRequired) hash ^= Required.GetHashCode();
      if (HasTitle) hash ^= Title.GetHashCode();
      if (HasExample) hash ^= Example.GetHashCode();
      if (HasExternalDocs) hash ^= ExternalDocs.GetHashCode();
      hash ^= enum_.GetHashCode();
      if (HasTransformerHint) hash ^= TransformerHint.GetHashCode();
      if (HasMaxItems) hash ^= MaxItems.GetHashCode();
      if (HasMinItems) hash ^= MinItems.GetHashCode();
      if (HasUniqueItems) hash ^= UniqueItems.GetHashCode();
      if (HasTimeColumn) hash ^= TimeColumn.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasFeatureName) {
        output.WriteRawTag(18);
        output.WriteString(FeatureName);
      }
      if (HasDatatype) {
        output.WriteRawTag(26);
        output.WriteString(Datatype);
      }
      if (HasFormat) {
        output.WriteRawTag(34);
        output.WriteString(Format);
      }
      if (HasDescription) {
        output.WriteRawTag(42);
        output.WriteString(Description);
      }
      if (HasIgnore) {
        output.WriteRawTag(48);
        output.WriteBool(Ignore);
      }
      if (HasLabel) {
        output.WriteRawTag(56);
        output.WriteBool(Label);
      }
      if (HasNullable) {
        output.WriteRawTag(64);
        output.WriteBool(Nullable);
      }
      if (HasPk) {
        output.WriteRawTag(72);
        output.WriteBool(Pk);
      }
      if (HasMultipleOf) {
        output.WriteRawTag(80);
        output.WriteInt32(MultipleOf);
      }
      if (HasMaximum) {
        output.WriteRawTag(89);
        output.WriteDouble(Maximum);
      }
      if (HasExclusiveMaximum) {
        output.WriteRawTag(96);
        output.WriteBool(ExclusiveMaximum);
      }
      if (HasMinimum) {
        output.WriteRawTag(105);
        output.WriteDouble(Minimum);
      }
      if (HasExclusiveMinimum) {
        output.WriteRawTag(112);
        output.WriteBool(ExclusiveMinimum);
      }
      if (HasMaxLength) {
        output.WriteRawTag(120);
        output.WriteInt32(MaxLength);
      }
      if (HasMinLength) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(MinLength);
      }
      if (HasPattern) {
        output.WriteRawTag(138, 1);
        output.WriteString(Pattern);
      }
      if (HasRequired) {
        output.WriteRawTag(144, 1);
        output.WriteBool(Required);
      }
      if (HasTitle) {
        output.WriteRawTag(154, 1);
        output.WriteString(Title);
      }
      if (HasExample) {
        output.WriteRawTag(162, 1);
        output.WriteString(Example);
      }
      if (HasExternalDocs) {
        output.WriteRawTag(170, 1);
        output.WriteString(ExternalDocs);
      }
      enum_.WriteTo(output, _repeated_enum_codec);
      if (HasTransformerHint) {
        output.WriteRawTag(186, 1);
        output.WriteString(TransformerHint);
      }
      if (HasMaxItems) {
        output.WriteRawTag(192, 1);
        output.WriteInt32(MaxItems);
      }
      if (HasMinItems) {
        output.WriteRawTag(200, 1);
        output.WriteInt32(MinItems);
      }
      if (HasUniqueItems) {
        output.WriteRawTag(208, 1);
        output.WriteBool(UniqueItems);
      }
      if (HasTimeColumn) {
        output.WriteRawTag(216, 1);
        output.WriteBool(TimeColumn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasFeatureName) {
        output.WriteRawTag(18);
        output.WriteString(FeatureName);
      }
      if (HasDatatype) {
        output.WriteRawTag(26);
        output.WriteString(Datatype);
      }
      if (HasFormat) {
        output.WriteRawTag(34);
        output.WriteString(Format);
      }
      if (HasDescription) {
        output.WriteRawTag(42);
        output.WriteString(Description);
      }
      if (HasIgnore) {
        output.WriteRawTag(48);
        output.WriteBool(Ignore);
      }
      if (HasLabel) {
        output.WriteRawTag(56);
        output.WriteBool(Label);
      }
      if (HasNullable) {
        output.WriteRawTag(64);
        output.WriteBool(Nullable);
      }
      if (HasPk) {
        output.WriteRawTag(72);
        output.WriteBool(Pk);
      }
      if (HasMultipleOf) {
        output.WriteRawTag(80);
        output.WriteInt32(MultipleOf);
      }
      if (HasMaximum) {
        output.WriteRawTag(89);
        output.WriteDouble(Maximum);
      }
      if (HasExclusiveMaximum) {
        output.WriteRawTag(96);
        output.WriteBool(ExclusiveMaximum);
      }
      if (HasMinimum) {
        output.WriteRawTag(105);
        output.WriteDouble(Minimum);
      }
      if (HasExclusiveMinimum) {
        output.WriteRawTag(112);
        output.WriteBool(ExclusiveMinimum);
      }
      if (HasMaxLength) {
        output.WriteRawTag(120);
        output.WriteInt32(MaxLength);
      }
      if (HasMinLength) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(MinLength);
      }
      if (HasPattern) {
        output.WriteRawTag(138, 1);
        output.WriteString(Pattern);
      }
      if (HasRequired) {
        output.WriteRawTag(144, 1);
        output.WriteBool(Required);
      }
      if (HasTitle) {
        output.WriteRawTag(154, 1);
        output.WriteString(Title);
      }
      if (HasExample) {
        output.WriteRawTag(162, 1);
        output.WriteString(Example);
      }
      if (HasExternalDocs) {
        output.WriteRawTag(170, 1);
        output.WriteString(ExternalDocs);
      }
      enum_.WriteTo(ref output, _repeated_enum_codec);
      if (HasTransformerHint) {
        output.WriteRawTag(186, 1);
        output.WriteString(TransformerHint);
      }
      if (HasMaxItems) {
        output.WriteRawTag(192, 1);
        output.WriteInt32(MaxItems);
      }
      if (HasMinItems) {
        output.WriteRawTag(200, 1);
        output.WriteInt32(MinItems);
      }
      if (HasUniqueItems) {
        output.WriteRawTag(208, 1);
        output.WriteBool(UniqueItems);
      }
      if (HasTimeColumn) {
        output.WriteRawTag(216, 1);
        output.WriteBool(TimeColumn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasFeatureName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FeatureName);
      }
      if (HasDatatype) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Datatype);
      }
      if (HasFormat) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Format);
      }
      if (HasDescription) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (HasIgnore) {
        size += 1 + 1;
      }
      if (HasLabel) {
        size += 1 + 1;
      }
      if (HasNullable) {
        size += 1 + 1;
      }
      if (HasPk) {
        size += 1 + 1;
      }
      if (HasMultipleOf) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MultipleOf);
      }
      if (HasMaximum) {
        size += 1 + 8;
      }
      if (HasExclusiveMaximum) {
        size += 1 + 1;
      }
      if (HasMinimum) {
        size += 1 + 8;
      }
      if (HasExclusiveMinimum) {
        size += 1 + 1;
      }
      if (HasMaxLength) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxLength);
      }
      if (HasMinLength) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(MinLength);
      }
      if (HasPattern) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Pattern);
      }
      if (HasRequired) {
        size += 2 + 1;
      }
      if (HasTitle) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (HasExample) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Example);
      }
      if (HasExternalDocs) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ExternalDocs);
      }
      size += enum_.CalculateSize(_repeated_enum_codec);
      if (HasTransformerHint) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(TransformerHint);
      }
      if (HasMaxItems) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(MaxItems);
      }
      if (HasMinItems) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(MinItems);
      }
      if (HasUniqueItems) {
        size += 2 + 1;
      }
      if (HasTimeColumn) {
        size += 2 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Column other) {
      if (other == null) {
        return;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasFeatureName) {
        FeatureName = other.FeatureName;
      }
      if (other.HasDatatype) {
        Datatype = other.Datatype;
      }
      if (other.HasFormat) {
        Format = other.Format;
      }
      if (other.HasDescription) {
        Description = other.Description;
      }
      if (other.HasIgnore) {
        Ignore = other.Ignore;
      }
      if (other.HasLabel) {
        Label = other.Label;
      }
      if (other.HasNullable) {
        Nullable = other.Nullable;
      }
      if (other.HasPk) {
        Pk = other.Pk;
      }
      if (other.HasMultipleOf) {
        MultipleOf = other.MultipleOf;
      }
      if (other.HasMaximum) {
        Maximum = other.Maximum;
      }
      if (other.HasExclusiveMaximum) {
        ExclusiveMaximum = other.ExclusiveMaximum;
      }
      if (other.HasMinimum) {
        Minimum = other.Minimum;
      }
      if (other.HasExclusiveMinimum) {
        ExclusiveMinimum = other.ExclusiveMinimum;
      }
      if (other.HasMaxLength) {
        MaxLength = other.MaxLength;
      }
      if (other.HasMinLength) {
        MinLength = other.MinLength;
      }
      if (other.HasPattern) {
        Pattern = other.Pattern;
      }
      if (other.HasRequired) {
        Required = other.Required;
      }
      if (other.HasTitle) {
        Title = other.Title;
      }
      if (other.HasExample) {
        Example = other.Example;
      }
      if (other.HasExternalDocs) {
        ExternalDocs = other.ExternalDocs;
      }
      enum_.Add(other.enum_);
      if (other.HasTransformerHint) {
        TransformerHint = other.TransformerHint;
      }
      if (other.HasMaxItems) {
        MaxItems = other.MaxItems;
      }
      if (other.HasMinItems) {
        MinItems = other.MinItems;
      }
      if (other.HasUniqueItems) {
        UniqueItems = other.UniqueItems;
      }
      if (other.HasTimeColumn) {
        TimeColumn = other.TimeColumn;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            FeatureName = input.ReadString();
            break;
          }
          case 26: {
            Datatype = input.ReadString();
            break;
          }
          case 34: {
            Format = input.ReadString();
            break;
          }
          case 42: {
            Description = input.ReadString();
            break;
          }
          case 48: {
            Ignore = input.ReadBool();
            break;
          }
          case 56: {
            Label = input.ReadBool();
            break;
          }
          case 64: {
            Nullable = input.ReadBool();
            break;
          }
          case 72: {
            Pk = input.ReadBool();
            break;
          }
          case 80: {
            MultipleOf = input.ReadInt32();
            break;
          }
          case 89: {
            Maximum = input.ReadDouble();
            break;
          }
          case 96: {
            ExclusiveMaximum = input.ReadBool();
            break;
          }
          case 105: {
            Minimum = input.ReadDouble();
            break;
          }
          case 112: {
            ExclusiveMinimum = input.ReadBool();
            break;
          }
          case 120: {
            MaxLength = input.ReadInt32();
            break;
          }
          case 128: {
            MinLength = input.ReadInt32();
            break;
          }
          case 138: {
            Pattern = input.ReadString();
            break;
          }
          case 144: {
            Required = input.ReadBool();
            break;
          }
          case 154: {
            Title = input.ReadString();
            break;
          }
          case 162: {
            Example = input.ReadString();
            break;
          }
          case 170: {
            ExternalDocs = input.ReadString();
            break;
          }
          case 178: {
            enum_.AddEntriesFrom(input, _repeated_enum_codec);
            break;
          }
          case 186: {
            TransformerHint = input.ReadString();
            break;
          }
          case 192: {
            MaxItems = input.ReadInt32();
            break;
          }
          case 200: {
            MinItems = input.ReadInt32();
            break;
          }
          case 208: {
            UniqueItems = input.ReadBool();
            break;
          }
          case 216: {
            TimeColumn = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            FeatureName = input.ReadString();
            break;
          }
          case 26: {
            Datatype = input.ReadString();
            break;
          }
          case 34: {
            Format = input.ReadString();
            break;
          }
          case 42: {
            Description = input.ReadString();
            break;
          }
          case 48: {
            Ignore = input.ReadBool();
            break;
          }
          case 56: {
            Label = input.ReadBool();
            break;
          }
          case 64: {
            Nullable = input.ReadBool();
            break;
          }
          case 72: {
            Pk = input.ReadBool();
            break;
          }
          case 80: {
            MultipleOf = input.ReadInt32();
            break;
          }
          case 89: {
            Maximum = input.ReadDouble();
            break;
          }
          case 96: {
            ExclusiveMaximum = input.ReadBool();
            break;
          }
          case 105: {
            Minimum = input.ReadDouble();
            break;
          }
          case 112: {
            ExclusiveMinimum = input.ReadBool();
            break;
          }
          case 120: {
            MaxLength = input.ReadInt32();
            break;
          }
          case 128: {
            MinLength = input.ReadInt32();
            break;
          }
          case 138: {
            Pattern = input.ReadString();
            break;
          }
          case 144: {
            Required = input.ReadBool();
            break;
          }
          case 154: {
            Title = input.ReadString();
            break;
          }
          case 162: {
            Example = input.ReadString();
            break;
          }
          case 170: {
            ExternalDocs = input.ReadString();
            break;
          }
          case 178: {
            enum_.AddEntriesFrom(ref input, _repeated_enum_codec);
            break;
          }
          case 186: {
            TransformerHint = input.ReadString();
            break;
          }
          case 192: {
            MaxItems = input.ReadInt32();
            break;
          }
          case 200: {
            MinItems = input.ReadInt32();
            break;
          }
          case 208: {
            UniqueItems = input.ReadBool();
            break;
          }
          case 216: {
            TimeColumn = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Hold the statistical parameters about a single attribute
  /// </summary>
  public sealed partial class ColumnStatistics : pb::IMessage<ColumnStatistics>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ColumnStatistics> _parser = new pb::MessageParser<ColumnStatistics>(() => new ColumnStatistics());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ColumnStatistics> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ColumnStatistics() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ColumnStatistics(ColumnStatistics other) : this() {
      _hasBits0 = other._hasBits0;
      name_ = other.name_;
      min_ = other.min_;
      max_ = other.max_;
      mean_ = other.mean_;
      stddev_ = other.stddev_;
      skewness_ = other.skewness_;
      kurtosis_ = other.kurtosis_;
      zeros_ = other.zeros_;
      p25_ = other.p25_;
      p50_ = other.p50_;
      p75_ = other.p75_;
      missing_ = other.missing_;
      invalid_ = other.invalid_;
      target_ = other.target_;
      importance_ = other.importance_;
      distinc_ = other.distinc_;
      ignored_ = other.ignored_;
      nullable_ = other.nullable_;
      highCred_ = other.highCred_;
      highCorr_ = other.highCorr_;
      skew_ = other.skew_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ColumnStatistics Clone() {
      return new ColumnStatistics(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private readonly static string NameDefaultValue = "";

    private string name_;
    /// <summary>
    /// FileName is the name of the column
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "min" field.</summary>
    public const int MinFieldNumber = 2;
    private readonly static double MinDefaultValue = 0D;

    private double min_;
    /// <summary>
    /// Min is the minimum value of the attribute
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Min {
      get { if ((_hasBits0 & 1) != 0) { return min_; } else { return MinDefaultValue; } }
      set {
        _hasBits0 |= 1;
        min_ = value;
      }
    }
    /// <summary>Gets whether the "min" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMin {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "min" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMin() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "max" field.</summary>
    public const int MaxFieldNumber = 3;
    private readonly static double MaxDefaultValue = 0D;

    private double max_;
    /// <summary>
    /// Max is the maximum value of the attribute
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Max {
      get { if ((_hasBits0 & 2) != 0) { return max_; } else { return MaxDefaultValue; } }
      set {
        _hasBits0 |= 2;
        max_ = value;
      }
    }
    /// <summary>Gets whether the "max" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMax {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "max" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMax() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "mean" field.</summary>
    public const int MeanFieldNumber = 4;
    private readonly static double MeanDefaultValue = 0D;

    private double mean_;
    /// <summary>
    /// Mean is the mean value of the attribute
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Mean {
      get { if ((_hasBits0 & 4) != 0) { return mean_; } else { return MeanDefaultValue; } }
      set {
        _hasBits0 |= 4;
        mean_ = value;
      }
    }
    /// <summary>Gets whether the "mean" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMean {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "mean" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMean() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "stddev" field.</summary>
    public const int StddevFieldNumber = 5;
    private readonly static double StddevDefaultValue = 0D;

    private double stddev_;
    /// <summary>
    /// StdDev is the standard deviation value of the attribute
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Stddev {
      get { if ((_hasBits0 & 8) != 0) { return stddev_; } else { return StddevDefaultValue; } }
      set {
        _hasBits0 |= 8;
        stddev_ = value;
      }
    }
    /// <summary>Gets whether the "stddev" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStddev {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "stddev" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStddev() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "skewness" field.</summary>
    public const int SkewnessFieldNumber = 6;
    private readonly static double SkewnessDefaultValue = 0D;

    private double skewness_;
    /// <summary>
    /// Skewness is the standard deviation value of the attribute
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Skewness {
      get { if ((_hasBits0 & 16) != 0) { return skewness_; } else { return SkewnessDefaultValue; } }
      set {
        _hasBits0 |= 16;
        skewness_ = value;
      }
    }
    /// <summary>Gets whether the "skewness" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSkewness {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "skewness" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSkewness() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "kurtosis" field.</summary>
    public const int KurtosisFieldNumber = 7;
    private readonly static double KurtosisDefaultValue = 0D;

    private double kurtosis_;
    /// <summary>
    /// Kurtosis is the standard deviation value of the attribute
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Kurtosis {
      get { if ((_hasBits0 & 32) != 0) { return kurtosis_; } else { return KurtosisDefaultValue; } }
      set {
        _hasBits0 |= 32;
        kurtosis_ = value;
      }
    }
    /// <summary>Gets whether the "kurtosis" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasKurtosis {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "kurtosis" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearKurtosis() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "zeros" field.</summary>
    public const int ZerosFieldNumber = 8;
    private readonly static double ZerosDefaultValue = 0D;

    private double zeros_;
    /// <summary>
    /// Zeros is the numbers of zeros in the feature
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Zeros {
      get { if ((_hasBits0 & 64) != 0) { return zeros_; } else { return ZerosDefaultValue; } }
      set {
        _hasBits0 |= 64;
        zeros_ = value;
      }
    }
    /// <summary>Gets whether the "zeros" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasZeros {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "zeros" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearZeros() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "p25" field.</summary>
    public const int P25FieldNumber = 10;
    private readonly static double P25DefaultValue = 0D;

    private double p25_;
    /// <summary>
    /// Pct25 is the 25 precent point
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double P25 {
      get { if ((_hasBits0 & 128) != 0) { return p25_; } else { return P25DefaultValue; } }
      set {
        _hasBits0 |= 128;
        p25_ = value;
      }
    }
    /// <summary>Gets whether the "p25" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasP25 {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "p25" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearP25() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "p50" field.</summary>
    public const int P50FieldNumber = 11;
    private readonly static double P50DefaultValue = 0D;

    private double p50_;
    /// <summary>
    /// Pct50 is the median
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double P50 {
      get { if ((_hasBits0 & 256) != 0) { return p50_; } else { return P50DefaultValue; } }
      set {
        _hasBits0 |= 256;
        p50_ = value;
      }
    }
    /// <summary>Gets whether the "p50" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasP50 {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "p50" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearP50() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "p75" field.</summary>
    public const int P75FieldNumber = 12;
    private readonly static double P75DefaultValue = 0D;

    private double p75_;
    /// <summary>
    /// Pct75 is the 75% point
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double P75 {
      get { if ((_hasBits0 & 512) != 0) { return p75_; } else { return P75DefaultValue; } }
      set {
        _hasBits0 |= 512;
        p75_ = value;
      }
    }
    /// <summary>Gets whether the "p75" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasP75 {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "p75" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearP75() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "missing" field.</summary>
    public const int MissingFieldNumber = 14;
    private readonly static int MissingDefaultValue = 0;

    private int missing_;
    /// <summary>
    /// The number of missing values
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Missing {
      get { if ((_hasBits0 & 1024) != 0) { return missing_; } else { return MissingDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        missing_ = value;
      }
    }
    /// <summary>Gets whether the "missing" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMissing {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "missing" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMissing() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "invalid" field.</summary>
    public const int InvalidFieldNumber = 15;
    private readonly static int InvalidDefaultValue = 0;

    private int invalid_;
    /// <summary>
    /// The number of invalid values
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Invalid {
      get { if ((_hasBits0 & 2048) != 0) { return invalid_; } else { return InvalidDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        invalid_ = value;
      }
    }
    /// <summary>Gets whether the "invalid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasInvalid {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "invalid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInvalid() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "target" field.</summary>
    public const int TargetFieldNumber = 16;
    private readonly static bool TargetDefaultValue = false;

    private bool target_;
    /// <summary>
    /// Is this the target attribute, the value is derived from the schema
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Target {
      get { if ((_hasBits0 & 4096) != 0) { return target_; } else { return TargetDefaultValue; } }
      set {
        _hasBits0 |= 4096;
        target_ = value;
      }
    }
    /// <summary>Gets whether the "target" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTarget {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "target" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTarget() {
      _hasBits0 &= ~4096;
    }

    /// <summary>Field number for the "importance" field.</summary>
    public const int ImportanceFieldNumber = 17;
    private readonly static double ImportanceDefaultValue = 0D;

    private double importance_;
    /// <summary>
    /// The feature importance
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Importance {
      get { if ((_hasBits0 & 8192) != 0) { return importance_; } else { return ImportanceDefaultValue; } }
      set {
        _hasBits0 |= 8192;
        importance_ = value;
      }
    }
    /// <summary>Gets whether the "importance" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasImportance {
      get { return (_hasBits0 & 8192) != 0; }
    }
    /// <summary>Clears the value of the "importance" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearImportance() {
      _hasBits0 &= ~8192;
    }

    /// <summary>Field number for the "distinc" field.</summary>
    public const int DistincFieldNumber = 18;
    private readonly static int DistincDefaultValue = 0;

    private int distinc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Distinc {
      get { if ((_hasBits0 & 16384) != 0) { return distinc_; } else { return DistincDefaultValue; } }
      set {
        _hasBits0 |= 16384;
        distinc_ = value;
      }
    }
    /// <summary>Gets whether the "distinc" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDistinc {
      get { return (_hasBits0 & 16384) != 0; }
    }
    /// <summary>Clears the value of the "distinc" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDistinc() {
      _hasBits0 &= ~16384;
    }

    /// <summary>Field number for the "ignored" field.</summary>
    public const int IgnoredFieldNumber = 19;
    private readonly static bool IgnoredDefaultValue = false;

    private bool ignored_;
    /// <summary>
    /// Should this column be ignored, as specified by the user.
    /// This value is derived from the schema
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Ignored {
      get { if ((_hasBits0 & 32768) != 0) { return ignored_; } else { return IgnoredDefaultValue; } }
      set {
        _hasBits0 |= 32768;
        ignored_ = value;
      }
    }
    /// <summary>Gets whether the "ignored" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasIgnored {
      get { return (_hasBits0 & 32768) != 0; }
    }
    /// <summary>Clears the value of the "ignored" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIgnored() {
      _hasBits0 &= ~32768;
    }

    /// <summary>Field number for the "nullable" field.</summary>
    public const int NullableFieldNumber = 20;
    private readonly static bool NullableDefaultValue = false;

    private bool nullable_;
    /// <summary>
    /// Is this column is nullable.
    /// This value is derived from the schema.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Nullable {
      get { if ((_hasBits0 & 65536) != 0) { return nullable_; } else { return NullableDefaultValue; } }
      set {
        _hasBits0 |= 65536;
        nullable_ = value;
      }
    }
    /// <summary>Gets whether the "nullable" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNullable {
      get { return (_hasBits0 & 65536) != 0; }
    }
    /// <summary>Clears the value of the "nullable" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNullable() {
      _hasBits0 &= ~65536;
    }

    /// <summary>Field number for the "highCred" field.</summary>
    public const int HighCredFieldNumber = 21;
    private readonly static bool HighCredDefaultValue = false;

    private bool highCred_;
    /// <summary>
    /// This column has high cardinality and should be ignored.
    /// The value is set during the profile process.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HighCred {
      get { if ((_hasBits0 & 131072) != 0) { return highCred_; } else { return HighCredDefaultValue; } }
      set {
        _hasBits0 |= 131072;
        highCred_ = value;
      }
    }
    /// <summary>Gets whether the "highCred" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHighCred {
      get { return (_hasBits0 & 131072) != 0; }
    }
    /// <summary>Clears the value of the "highCred" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHighCred() {
      _hasBits0 &= ~131072;
    }

    /// <summary>Field number for the "highCorr" field.</summary>
    public const int HighCorrFieldNumber = 22;
    private readonly static bool HighCorrDefaultValue = false;

    private bool highCorr_;
    /// <summary>
    /// This column has high corrolation with another feature and should be dropped.
    /// The value is set during the profile process.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HighCorr {
      get { if ((_hasBits0 & 262144) != 0) { return highCorr_; } else { return HighCorrDefaultValue; } }
      set {
        _hasBits0 |= 262144;
        highCorr_ = value;
      }
    }
    /// <summary>Gets whether the "highCorr" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHighCorr {
      get { return (_hasBits0 & 262144) != 0; }
    }
    /// <summary>Clears the value of the "highCorr" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHighCorr() {
      _hasBits0 &= ~262144;
    }

    /// <summary>Field number for the "skew" field.</summary>
    public const int SkewFieldNumber = 23;
    private readonly static bool SkewDefaultValue = false;

    private bool skew_;
    /// <summary>
    /// Mark that this column is skewed and would require a power transform
    /// If skewness is less than -1 or greater than 1, the distribution is highly skewed.
    /// If skewness is between -1 and -0.5 or between 0.5 and 1, the distribution is moderately skewed.
    /// If skewness is between -0.5 and 0.5, the distribution is approximately symmetric
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Skew {
      get { if ((_hasBits0 & 524288) != 0) { return skew_; } else { return SkewDefaultValue; } }
      set {
        _hasBits0 |= 524288;
        skew_ = value;
      }
    }
    /// <summary>Gets whether the "skew" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSkew {
      get { return (_hasBits0 & 524288) != 0; }
    }
    /// <summary>Clears the value of the "skew" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSkew() {
      _hasBits0 &= ~524288;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ColumnStatistics);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ColumnStatistics other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Min, other.Min)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Max, other.Max)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Mean, other.Mean)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Stddev, other.Stddev)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Skewness, other.Skewness)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Kurtosis, other.Kurtosis)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Zeros, other.Zeros)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(P25, other.P25)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(P50, other.P50)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(P75, other.P75)) return false;
      if (Missing != other.Missing) return false;
      if (Invalid != other.Invalid) return false;
      if (Target != other.Target) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Importance, other.Importance)) return false;
      if (Distinc != other.Distinc) return false;
      if (Ignored != other.Ignored) return false;
      if (Nullable != other.Nullable) return false;
      if (HighCred != other.HighCred) return false;
      if (HighCorr != other.HighCorr) return false;
      if (Skew != other.Skew) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasName) hash ^= Name.GetHashCode();
      if (HasMin) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Min);
      if (HasMax) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Max);
      if (HasMean) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Mean);
      if (HasStddev) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Stddev);
      if (HasSkewness) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Skewness);
      if (HasKurtosis) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Kurtosis);
      if (HasZeros) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Zeros);
      if (HasP25) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(P25);
      if (HasP50) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(P50);
      if (HasP75) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(P75);
      if (HasMissing) hash ^= Missing.GetHashCode();
      if (HasInvalid) hash ^= Invalid.GetHashCode();
      if (HasTarget) hash ^= Target.GetHashCode();
      if (HasImportance) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Importance);
      if (HasDistinc) hash ^= Distinc.GetHashCode();
      if (HasIgnored) hash ^= Ignored.GetHashCode();
      if (HasNullable) hash ^= Nullable.GetHashCode();
      if (HasHighCred) hash ^= HighCred.GetHashCode();
      if (HasHighCorr) hash ^= HighCorr.GetHashCode();
      if (HasSkew) hash ^= Skew.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasMin) {
        output.WriteRawTag(17);
        output.WriteDouble(Min);
      }
      if (HasMax) {
        output.WriteRawTag(25);
        output.WriteDouble(Max);
      }
      if (HasMean) {
        output.WriteRawTag(33);
        output.WriteDouble(Mean);
      }
      if (HasStddev) {
        output.WriteRawTag(41);
        output.WriteDouble(Stddev);
      }
      if (HasSkewness) {
        output.WriteRawTag(49);
        output.WriteDouble(Skewness);
      }
      if (HasKurtosis) {
        output.WriteRawTag(57);
        output.WriteDouble(Kurtosis);
      }
      if (HasZeros) {
        output.WriteRawTag(65);
        output.WriteDouble(Zeros);
      }
      if (HasP25) {
        output.WriteRawTag(81);
        output.WriteDouble(P25);
      }
      if (HasP50) {
        output.WriteRawTag(89);
        output.WriteDouble(P50);
      }
      if (HasP75) {
        output.WriteRawTag(97);
        output.WriteDouble(P75);
      }
      if (HasMissing) {
        output.WriteRawTag(112);
        output.WriteInt32(Missing);
      }
      if (HasInvalid) {
        output.WriteRawTag(120);
        output.WriteInt32(Invalid);
      }
      if (HasTarget) {
        output.WriteRawTag(128, 1);
        output.WriteBool(Target);
      }
      if (HasImportance) {
        output.WriteRawTag(137, 1);
        output.WriteDouble(Importance);
      }
      if (HasDistinc) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(Distinc);
      }
      if (HasIgnored) {
        output.WriteRawTag(152, 1);
        output.WriteBool(Ignored);
      }
      if (HasNullable) {
        output.WriteRawTag(160, 1);
        output.WriteBool(Nullable);
      }
      if (HasHighCred) {
        output.WriteRawTag(168, 1);
        output.WriteBool(HighCred);
      }
      if (HasHighCorr) {
        output.WriteRawTag(176, 1);
        output.WriteBool(HighCorr);
      }
      if (HasSkew) {
        output.WriteRawTag(184, 1);
        output.WriteBool(Skew);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasMin) {
        output.WriteRawTag(17);
        output.WriteDouble(Min);
      }
      if (HasMax) {
        output.WriteRawTag(25);
        output.WriteDouble(Max);
      }
      if (HasMean) {
        output.WriteRawTag(33);
        output.WriteDouble(Mean);
      }
      if (HasStddev) {
        output.WriteRawTag(41);
        output.WriteDouble(Stddev);
      }
      if (HasSkewness) {
        output.WriteRawTag(49);
        output.WriteDouble(Skewness);
      }
      if (HasKurtosis) {
        output.WriteRawTag(57);
        output.WriteDouble(Kurtosis);
      }
      if (HasZeros) {
        output.WriteRawTag(65);
        output.WriteDouble(Zeros);
      }
      if (HasP25) {
        output.WriteRawTag(81);
        output.WriteDouble(P25);
      }
      if (HasP50) {
        output.WriteRawTag(89);
        output.WriteDouble(P50);
      }
      if (HasP75) {
        output.WriteRawTag(97);
        output.WriteDouble(P75);
      }
      if (HasMissing) {
        output.WriteRawTag(112);
        output.WriteInt32(Missing);
      }
      if (HasInvalid) {
        output.WriteRawTag(120);
        output.WriteInt32(Invalid);
      }
      if (HasTarget) {
        output.WriteRawTag(128, 1);
        output.WriteBool(Target);
      }
      if (HasImportance) {
        output.WriteRawTag(137, 1);
        output.WriteDouble(Importance);
      }
      if (HasDistinc) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(Distinc);
      }
      if (HasIgnored) {
        output.WriteRawTag(152, 1);
        output.WriteBool(Ignored);
      }
      if (HasNullable) {
        output.WriteRawTag(160, 1);
        output.WriteBool(Nullable);
      }
      if (HasHighCred) {
        output.WriteRawTag(168, 1);
        output.WriteBool(HighCred);
      }
      if (HasHighCorr) {
        output.WriteRawTag(176, 1);
        output.WriteBool(HighCorr);
      }
      if (HasSkew) {
        output.WriteRawTag(184, 1);
        output.WriteBool(Skew);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasMin) {
        size += 1 + 8;
      }
      if (HasMax) {
        size += 1 + 8;
      }
      if (HasMean) {
        size += 1 + 8;
      }
      if (HasStddev) {
        size += 1 + 8;
      }
      if (HasSkewness) {
        size += 1 + 8;
      }
      if (HasKurtosis) {
        size += 1 + 8;
      }
      if (HasZeros) {
        size += 1 + 8;
      }
      if (HasP25) {
        size += 1 + 8;
      }
      if (HasP50) {
        size += 1 + 8;
      }
      if (HasP75) {
        size += 1 + 8;
      }
      if (HasMissing) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Missing);
      }
      if (HasInvalid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Invalid);
      }
      if (HasTarget) {
        size += 2 + 1;
      }
      if (HasImportance) {
        size += 2 + 8;
      }
      if (HasDistinc) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Distinc);
      }
      if (HasIgnored) {
        size += 2 + 1;
      }
      if (HasNullable) {
        size += 2 + 1;
      }
      if (HasHighCred) {
        size += 2 + 1;
      }
      if (HasHighCorr) {
        size += 2 + 1;
      }
      if (HasSkew) {
        size += 2 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ColumnStatistics other) {
      if (other == null) {
        return;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasMin) {
        Min = other.Min;
      }
      if (other.HasMax) {
        Max = other.Max;
      }
      if (other.HasMean) {
        Mean = other.Mean;
      }
      if (other.HasStddev) {
        Stddev = other.Stddev;
      }
      if (other.HasSkewness) {
        Skewness = other.Skewness;
      }
      if (other.HasKurtosis) {
        Kurtosis = other.Kurtosis;
      }
      if (other.HasZeros) {
        Zeros = other.Zeros;
      }
      if (other.HasP25) {
        P25 = other.P25;
      }
      if (other.HasP50) {
        P50 = other.P50;
      }
      if (other.HasP75) {
        P75 = other.P75;
      }
      if (other.HasMissing) {
        Missing = other.Missing;
      }
      if (other.HasInvalid) {
        Invalid = other.Invalid;
      }
      if (other.HasTarget) {
        Target = other.Target;
      }
      if (other.HasImportance) {
        Importance = other.Importance;
      }
      if (other.HasDistinc) {
        Distinc = other.Distinc;
      }
      if (other.HasIgnored) {
        Ignored = other.Ignored;
      }
      if (other.HasNullable) {
        Nullable = other.Nullable;
      }
      if (other.HasHighCred) {
        HighCred = other.HighCred;
      }
      if (other.HasHighCorr) {
        HighCorr = other.HighCorr;
      }
      if (other.HasSkew) {
        Skew = other.Skew;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 17: {
            Min = input.ReadDouble();
            break;
          }
          case 25: {
            Max = input.ReadDouble();
            break;
          }
          case 33: {
            Mean = input.ReadDouble();
            break;
          }
          case 41: {
            Stddev = input.ReadDouble();
            break;
          }
          case 49: {
            Skewness = input.ReadDouble();
            break;
          }
          case 57: {
            Kurtosis = input.ReadDouble();
            break;
          }
          case 65: {
            Zeros = input.ReadDouble();
            break;
          }
          case 81: {
            P25 = input.ReadDouble();
            break;
          }
          case 89: {
            P50 = input.ReadDouble();
            break;
          }
          case 97: {
            P75 = input.ReadDouble();
            break;
          }
          case 112: {
            Missing = input.ReadInt32();
            break;
          }
          case 120: {
            Invalid = input.ReadInt32();
            break;
          }
          case 128: {
            Target = input.ReadBool();
            break;
          }
          case 137: {
            Importance = input.ReadDouble();
            break;
          }
          case 144: {
            Distinc = input.ReadInt32();
            break;
          }
          case 152: {
            Ignored = input.ReadBool();
            break;
          }
          case 160: {
            Nullable = input.ReadBool();
            break;
          }
          case 168: {
            HighCred = input.ReadBool();
            break;
          }
          case 176: {
            HighCorr = input.ReadBool();
            break;
          }
          case 184: {
            Skew = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 17: {
            Min = input.ReadDouble();
            break;
          }
          case 25: {
            Max = input.ReadDouble();
            break;
          }
          case 33: {
            Mean = input.ReadDouble();
            break;
          }
          case 41: {
            Stddev = input.ReadDouble();
            break;
          }
          case 49: {
            Skewness = input.ReadDouble();
            break;
          }
          case 57: {
            Kurtosis = input.ReadDouble();
            break;
          }
          case 65: {
            Zeros = input.ReadDouble();
            break;
          }
          case 81: {
            P25 = input.ReadDouble();
            break;
          }
          case 89: {
            P50 = input.ReadDouble();
            break;
          }
          case 97: {
            P75 = input.ReadDouble();
            break;
          }
          case 112: {
            Missing = input.ReadInt32();
            break;
          }
          case 120: {
            Invalid = input.ReadInt32();
            break;
          }
          case 128: {
            Target = input.ReadBool();
            break;
          }
          case 137: {
            Importance = input.ReadDouble();
            break;
          }
          case 144: {
            Distinc = input.ReadInt32();
            break;
          }
          case 152: {
            Ignored = input.ReadBool();
            break;
          }
          case 160: {
            Nullable = input.ReadBool();
            break;
          }
          case 168: {
            HighCred = input.ReadBool();
            break;
          }
          case 176: {
            HighCorr = input.ReadBool();
            break;
          }
          case 184: {
            Skew = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// data reference contain pointers to the actual data objects
  /// </summary>
  public sealed partial class DataLocation : pb::IMessage<DataLocation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DataLocation> _parser = new pb::MessageParser<DataLocation>(() => new DataLocation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataLocation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataLocation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataLocation(DataLocation other) : this() {
      bucketName_ = other.bucketName_;
      path_ = other.path_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataLocation Clone() {
      return new DataLocation(this);
    }

    /// <summary>Field number for the "bucketName" field.</summary>
    public const int BucketNameFieldNumber = 1;
    private readonly static string BucketNameDefaultValue = "";

    private string bucketName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BucketName {
      get { return bucketName_ ?? BucketNameDefaultValue; }
      set {
        bucketName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "bucketName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBucketName {
      get { return bucketName_ != null; }
    }
    /// <summary>Clears the value of the "bucketName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBucketName() {
      bucketName_ = null;
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 2;
    private readonly static string PathDefaultValue = "";

    private string path_;
    /// <summary>
    /// Path to the full data file (e.g. csv file).
    /// +required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Path {
      get { return path_ ?? PathDefaultValue; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "path" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPath {
      get { return path_ != null; }
    }
    /// <summary>Clears the value of the "path" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPath() {
      path_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataLocation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataLocation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BucketName != other.BucketName) return false;
      if (Path != other.Path) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBucketName) hash ^= BucketName.GetHashCode();
      if (HasPath) hash ^= Path.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBucketName) {
        output.WriteRawTag(10);
        output.WriteString(BucketName);
      }
      if (HasPath) {
        output.WriteRawTag(18);
        output.WriteString(Path);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBucketName) {
        output.WriteRawTag(10);
        output.WriteString(BucketName);
      }
      if (HasPath) {
        output.WriteRawTag(18);
        output.WriteString(Path);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasBucketName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BucketName);
      }
      if (HasPath) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataLocation other) {
      if (other == null) {
        return;
      }
      if (other.HasBucketName) {
        BucketName = other.BucketName;
      }
      if (other.HasPath) {
        Path = other.Path;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            BucketName = input.ReadString();
            break;
          }
          case 18: {
            Path = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            BucketName = input.ReadString();
            break;
          }
          case 18: {
            Path = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// +kubebuilder:object:root=true
  /// +kubebuilder:subresource:status
  /// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
  /// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
  /// +kubebuilder:resource:path=datapipelines,singular=datapipeline,categories={data,modela}
  /// DataPipeline represents the ETL flow from the data sources to a processed dataset, ready for training.
  /// </summary>
  public sealed partial class DataPipeline : pb::IMessage<DataPipeline>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DataPipeline> _parser = new pb::MessageParser<DataPipeline>(() => new DataPipeline());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataPipeline> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataPipeline() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataPipeline(DataPipeline other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      spec_ = other.spec_ != null ? other.spec_.Clone() : null;
      status_ = other.status_ != null ? other.status_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataPipeline Clone() {
      return new DataPipeline(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "spec" field.</summary>
    public const int SpecFieldNumber = 2;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataPipelineSpec spec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataPipelineSpec Spec {
      get { return spec_; }
      set {
        spec_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 3;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataPipelineStatus status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataPipelineStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataPipeline);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataPipeline other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if (!object.Equals(Spec, other.Spec)) return false;
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      if (spec_ != null) hash ^= Spec.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      if (spec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Spec);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataPipeline other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      if (other.spec_ != null) {
        if (spec_ == null) {
          Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataPipelineSpec();
        }
        Spec.MergeFrom(other.Spec);
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataPipelineStatus();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataPipelineSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataPipelineStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataPipelineSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataPipelineStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// DataPipelineCondition describes the state of a wrangler at a certain point.
  /// </summary>
  public sealed partial class DataPipelineCondition : pb::IMessage<DataPipelineCondition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DataPipelineCondition> _parser = new pb::MessageParser<DataPipelineCondition>(() => new DataPipelineCondition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataPipelineCondition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataPipelineCondition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataPipelineCondition(DataPipelineCondition other) : this() {
      type_ = other.type_;
      status_ = other.status_;
      lastTransitionTime_ = other.lastTransitionTime_ != null ? other.lastTransitionTime_.Clone() : null;
      reason_ = other.reason_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataPipelineCondition Clone() {
      return new DataPipelineCondition(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static string TypeDefaultValue = "";

    private string type_;
    /// <summary>
    /// Type of account condition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_ ?? TypeDefaultValue; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return type_ != null; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      type_ = null;
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private readonly static string StatusDefaultValue = "";

    private string status_;
    /// <summary>
    /// Status of the condition, one of True, False, Unknown.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Status {
      get { return status_ ?? StatusDefaultValue; }
      set {
        status_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStatus {
      get { return status_ != null; }
    }
    /// <summary>Clears the value of the "status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStatus() {
      status_ = null;
    }

    /// <summary>Field number for the "lastTransitionTime" field.</summary>
    public const int LastTransitionTimeFieldNumber = 4;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time lastTransitionTime_;
    /// <summary>
    /// Last time the condition transitioned from one status to another.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time LastTransitionTime {
      get { return lastTransitionTime_; }
      set {
        lastTransitionTime_ = value;
      }
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 5;
    private readonly static string ReasonDefaultValue = "";

    private string reason_;
    /// <summary>
    /// The reason for the condition's last transition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Reason {
      get { return reason_ ?? ReasonDefaultValue; }
      set {
        reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "reason" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasReason {
      get { return reason_ != null; }
    }
    /// <summary>Clears the value of the "reason" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReason() {
      reason_ = null;
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 6;
    private readonly static string MessageDefaultValue = "";

    private string message_;
    /// <summary>
    /// A human readable message indicating details about the transition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_ ?? MessageDefaultValue; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMessage {
      get { return message_ != null; }
    }
    /// <summary>Clears the value of the "message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessage() {
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataPipelineCondition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataPipelineCondition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Status != other.Status) return false;
      if (!object.Equals(LastTransitionTime, other.LastTransitionTime)) return false;
      if (Reason != other.Reason) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasStatus) hash ^= Status.GetHashCode();
      if (lastTransitionTime_ != null) hash ^= LastTransitionTime.GetHashCode();
      if (HasReason) hash ^= Reason.GetHashCode();
      if (HasMessage) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasStatus) {
        output.WriteRawTag(18);
        output.WriteString(Status);
      }
      if (lastTransitionTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LastTransitionTime);
      }
      if (HasReason) {
        output.WriteRawTag(42);
        output.WriteString(Reason);
      }
      if (HasMessage) {
        output.WriteRawTag(50);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasStatus) {
        output.WriteRawTag(18);
        output.WriteString(Status);
      }
      if (lastTransitionTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LastTransitionTime);
      }
      if (HasReason) {
        output.WriteRawTag(42);
        output.WriteString(Reason);
      }
      if (HasMessage) {
        output.WriteRawTag(50);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (HasStatus) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Status);
      }
      if (lastTransitionTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastTransitionTime);
      }
      if (HasReason) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
      }
      if (HasMessage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataPipelineCondition other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasStatus) {
        Status = other.Status;
      }
      if (other.lastTransitionTime_ != null) {
        if (lastTransitionTime_ == null) {
          LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
        }
        LastTransitionTime.MergeFrom(other.LastTransitionTime);
      }
      if (other.HasReason) {
        Reason = other.Reason;
      }
      if (other.HasMessage) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Status = input.ReadString();
            break;
          }
          case 34: {
            if (lastTransitionTime_ == null) {
              LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(LastTransitionTime);
            break;
          }
          case 42: {
            Reason = input.ReadString();
            break;
          }
          case 50: {
            Message = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Status = input.ReadString();
            break;
          }
          case 34: {
            if (lastTransitionTime_ == null) {
              LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(LastTransitionTime);
            break;
          }
          case 42: {
            Reason = input.ReadString();
            break;
          }
          case 50: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// +kubebuilder:object:root=true
  /// DataPipelineList contain the list of DataPipeline
  /// </summary>
  public sealed partial class DataPipelineList : pb::IMessage<DataPipelineList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DataPipelineList> _parser = new pb::MessageParser<DataPipelineList>(() => new DataPipelineList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataPipelineList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataPipelineList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataPipelineList(DataPipelineList other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataPipelineList Clone() {
      return new DataPipelineList(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataPipeline> _repeated_items_codec
        = pb::FieldCodec.ForMessage(18, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataPipeline.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataPipeline> items_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataPipeline>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataPipeline> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataPipelineList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataPipelineList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(ref output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataPipelineList other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// +kubebuilder:object:root=true
  /// +kubebuilder:subresource:status
  /// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status"
  /// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp"
  /// +kubebuilder:resource:path=datapipelineruns,singular=datapipelinerun,categories={data,modela,all}
  /// DataPipelineRun represent one execution of the data pipeline
  /// </summary>
  public sealed partial class DataPipelineRun : pb::IMessage<DataPipelineRun>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DataPipelineRun> _parser = new pb::MessageParser<DataPipelineRun>(() => new DataPipelineRun());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataPipelineRun> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataPipelineRun() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataPipelineRun(DataPipelineRun other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      spec_ = other.spec_ != null ? other.spec_.Clone() : null;
      status_ = other.status_ != null ? other.status_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataPipelineRun Clone() {
      return new DataPipelineRun(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "spec" field.</summary>
    public const int SpecFieldNumber = 2;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataPipelineRunSpec spec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataPipelineRunSpec Spec {
      get { return spec_; }
      set {
        spec_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 3;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataPipelineRunStatus status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataPipelineRunStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataPipelineRun);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataPipelineRun other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if (!object.Equals(Spec, other.Spec)) return false;
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      if (spec_ != null) hash ^= Spec.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      if (spec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Spec);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataPipelineRun other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      if (other.spec_ != null) {
        if (spec_ == null) {
          Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataPipelineRunSpec();
        }
        Spec.MergeFrom(other.Spec);
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataPipelineRunStatus();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataPipelineRunSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataPipelineRunStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataPipelineRunSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataPipelineRunStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// DataPipelineRunCondition describes the state of a data processor run at a certain point.
  /// </summary>
  public sealed partial class DataPipelineRunCondition : pb::IMessage<DataPipelineRunCondition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DataPipelineRunCondition> _parser = new pb::MessageParser<DataPipelineRunCondition>(() => new DataPipelineRunCondition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataPipelineRunCondition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataPipelineRunCondition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataPipelineRunCondition(DataPipelineRunCondition other) : this() {
      type_ = other.type_;
      status_ = other.status_;
      lastTransitionTime_ = other.lastTransitionTime_ != null ? other.lastTransitionTime_.Clone() : null;
      reason_ = other.reason_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataPipelineRunCondition Clone() {
      return new DataPipelineRunCondition(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static string TypeDefaultValue = "";

    private string type_;
    /// <summary>
    /// Type of account condition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_ ?? TypeDefaultValue; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return type_ != null; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      type_ = null;
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private readonly static string StatusDefaultValue = "";

    private string status_;
    /// <summary>
    /// Status of the condition, one of True, False, Unknown.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Status {
      get { return status_ ?? StatusDefaultValue; }
      set {
        status_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStatus {
      get { return status_ != null; }
    }
    /// <summary>Clears the value of the "status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStatus() {
      status_ = null;
    }

    /// <summary>Field number for the "lastTransitionTime" field.</summary>
    public const int LastTransitionTimeFieldNumber = 4;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time lastTransitionTime_;
    /// <summary>
    /// Last time the condition transitioned from one status to another.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time LastTransitionTime {
      get { return lastTransitionTime_; }
      set {
        lastTransitionTime_ = value;
      }
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 5;
    private readonly static string ReasonDefaultValue = "";

    private string reason_;
    /// <summary>
    /// The reason for the condition's last transition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Reason {
      get { return reason_ ?? ReasonDefaultValue; }
      set {
        reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "reason" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasReason {
      get { return reason_ != null; }
    }
    /// <summary>Clears the value of the "reason" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReason() {
      reason_ = null;
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 6;
    private readonly static string MessageDefaultValue = "";

    private string message_;
    /// <summary>
    /// A human readable message indicating details about the transition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_ ?? MessageDefaultValue; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMessage {
      get { return message_ != null; }
    }
    /// <summary>Clears the value of the "message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessage() {
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataPipelineRunCondition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataPipelineRunCondition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Status != other.Status) return false;
      if (!object.Equals(LastTransitionTime, other.LastTransitionTime)) return false;
      if (Reason != other.Reason) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasStatus) hash ^= Status.GetHashCode();
      if (lastTransitionTime_ != null) hash ^= LastTransitionTime.GetHashCode();
      if (HasReason) hash ^= Reason.GetHashCode();
      if (HasMessage) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasStatus) {
        output.WriteRawTag(18);
        output.WriteString(Status);
      }
      if (lastTransitionTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LastTransitionTime);
      }
      if (HasReason) {
        output.WriteRawTag(42);
        output.WriteString(Reason);
      }
      if (HasMessage) {
        output.WriteRawTag(50);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasStatus) {
        output.WriteRawTag(18);
        output.WriteString(Status);
      }
      if (lastTransitionTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LastTransitionTime);
      }
      if (HasReason) {
        output.WriteRawTag(42);
        output.WriteString(Reason);
      }
      if (HasMessage) {
        output.WriteRawTag(50);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (HasStatus) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Status);
      }
      if (lastTransitionTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastTransitionTime);
      }
      if (HasReason) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
      }
      if (HasMessage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataPipelineRunCondition other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasStatus) {
        Status = other.Status;
      }
      if (other.lastTransitionTime_ != null) {
        if (lastTransitionTime_ == null) {
          LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
        }
        LastTransitionTime.MergeFrom(other.LastTransitionTime);
      }
      if (other.HasReason) {
        Reason = other.Reason;
      }
      if (other.HasMessage) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Status = input.ReadString();
            break;
          }
          case 34: {
            if (lastTransitionTime_ == null) {
              LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(LastTransitionTime);
            break;
          }
          case 42: {
            Reason = input.ReadString();
            break;
          }
          case 50: {
            Message = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Status = input.ReadString();
            break;
          }
          case 34: {
            if (lastTransitionTime_ == null) {
              LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(LastTransitionTime);
            break;
          }
          case 42: {
            Reason = input.ReadString();
            break;
          }
          case 50: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// +kubebuilder:object:root=true
  /// DataPipelineRunList contains a list of DataPipelineRun
  /// </summary>
  public sealed partial class DataPipelineRunList : pb::IMessage<DataPipelineRunList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DataPipelineRunList> _parser = new pb::MessageParser<DataPipelineRunList>(() => new DataPipelineRunList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataPipelineRunList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataPipelineRunList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataPipelineRunList(DataPipelineRunList other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataPipelineRunList Clone() {
      return new DataPipelineRunList(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataPipelineRun> _repeated_items_codec
        = pb::FieldCodec.ForMessage(18, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataPipelineRun.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataPipelineRun> items_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataPipelineRun>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataPipelineRun> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataPipelineRunList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataPipelineRunList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(ref output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataPipelineRunList other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// DataPipelineRunSpec defines the desired state of a schema
  /// </summary>
  public sealed partial class DataPipelineRunSpec : pb::IMessage<DataPipelineRunSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DataPipelineRunSpec> _parser = new pb::MessageParser<DataPipelineRunSpec>(() => new DataPipelineRunSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataPipelineRunSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataPipelineRunSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataPipelineRunSpec(DataPipelineRunSpec other) : this() {
      versionName_ = other.versionName_;
      datapipelineName_ = other.datapipelineName_;
      dataLocation_ = other.dataLocation_ != null ? other.dataLocation_.Clone() : null;
      owner_ = other.owner_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataPipelineRunSpec Clone() {
      return new DataPipelineRunSpec(this);
    }

    /// <summary>Field number for the "versionName" field.</summary>
    public const int VersionNameFieldNumber = 1;
    private readonly static string VersionNameDefaultValue = "";

    private string versionName_;
    /// <summary>
    /// The data product version of the run
    /// +kubebuilder:default =""
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VersionName {
      get { return versionName_ ?? VersionNameDefaultValue; }
      set {
        versionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "versionName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasVersionName {
      get { return versionName_ != null; }
    }
    /// <summary>Clears the value of the "versionName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearVersionName() {
      versionName_ = null;
    }

    /// <summary>Field number for the "datapipelineName" field.</summary>
    public const int DatapipelineNameFieldNumber = 2;
    private readonly static string DatapipelineNameDefaultValue = "";

    private string datapipelineName_;
    /// <summary>
    /// The data product
    /// +kubebuilder:default =""
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DatapipelineName {
      get { return datapipelineName_ ?? DatapipelineNameDefaultValue; }
      set {
        datapipelineName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "datapipelineName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDatapipelineName {
      get { return datapipelineName_ != null; }
    }
    /// <summary>Clears the value of the "datapipelineName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDatapipelineName() {
      datapipelineName_ = null;
    }

    /// <summary>Field number for the "dataLocation" field.</summary>
    public const int DataLocationFieldNumber = 3;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataLocation dataLocation_;
    /// <summary>
    /// The location of data artifacts that are generated during the run
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataLocation DataLocation {
      get { return dataLocation_; }
      set {
        dataLocation_ = value;
      }
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 4;
    private readonly static string OwnerDefaultValue = "";

    private string owner_;
    /// <summary>
    /// The owner of the run, set to the owner of the pipeline
    /// +kubebuilder:default:="no-one"
    /// +kubebuilder:validation:Pattern="[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*"
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owner {
      get { return owner_ ?? OwnerDefaultValue; }
      set {
        owner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "owner" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOwner {
      get { return owner_ != null; }
    }
    /// <summary>Clears the value of the "owner" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOwner() {
      owner_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataPipelineRunSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataPipelineRunSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (VersionName != other.VersionName) return false;
      if (DatapipelineName != other.DatapipelineName) return false;
      if (!object.Equals(DataLocation, other.DataLocation)) return false;
      if (Owner != other.Owner) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasVersionName) hash ^= VersionName.GetHashCode();
      if (HasDatapipelineName) hash ^= DatapipelineName.GetHashCode();
      if (dataLocation_ != null) hash ^= DataLocation.GetHashCode();
      if (HasOwner) hash ^= Owner.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasVersionName) {
        output.WriteRawTag(10);
        output.WriteString(VersionName);
      }
      if (HasDatapipelineName) {
        output.WriteRawTag(18);
        output.WriteString(DatapipelineName);
      }
      if (dataLocation_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(DataLocation);
      }
      if (HasOwner) {
        output.WriteRawTag(34);
        output.WriteString(Owner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasVersionName) {
        output.WriteRawTag(10);
        output.WriteString(VersionName);
      }
      if (HasDatapipelineName) {
        output.WriteRawTag(18);
        output.WriteString(DatapipelineName);
      }
      if (dataLocation_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(DataLocation);
      }
      if (HasOwner) {
        output.WriteRawTag(34);
        output.WriteString(Owner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasVersionName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VersionName);
      }
      if (HasDatapipelineName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DatapipelineName);
      }
      if (dataLocation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DataLocation);
      }
      if (HasOwner) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owner);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataPipelineRunSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasVersionName) {
        VersionName = other.VersionName;
      }
      if (other.HasDatapipelineName) {
        DatapipelineName = other.DatapipelineName;
      }
      if (other.dataLocation_ != null) {
        if (dataLocation_ == null) {
          DataLocation = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataLocation();
        }
        DataLocation.MergeFrom(other.DataLocation);
      }
      if (other.HasOwner) {
        Owner = other.Owner;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            VersionName = input.ReadString();
            break;
          }
          case 18: {
            DatapipelineName = input.ReadString();
            break;
          }
          case 26: {
            if (dataLocation_ == null) {
              DataLocation = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataLocation();
            }
            input.ReadMessage(DataLocation);
            break;
          }
          case 34: {
            Owner = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            VersionName = input.ReadString();
            break;
          }
          case 18: {
            DatapipelineName = input.ReadString();
            break;
          }
          case 26: {
            if (dataLocation_ == null) {
              DataLocation = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataLocation();
            }
            input.ReadMessage(DataLocation);
            break;
          }
          case 34: {
            Owner = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// DataPipelineRunStatus defines the observed state of DataPipelineRun
  /// </summary>
  public sealed partial class DataPipelineRunStatus : pb::IMessage<DataPipelineRunStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DataPipelineRunStatus> _parser = new pb::MessageParser<DataPipelineRunStatus>(() => new DataPipelineRunStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataPipelineRunStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataPipelineRunStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataPipelineRunStatus(DataPipelineRunStatus other) : this() {
      inputs_ = other.inputs_.Clone();
      output_ = other.output_;
      phase_ = other.phase_;
      startTime_ = other.startTime_ != null ? other.startTime_.Clone() : null;
      completionTime_ = other.completionTime_ != null ? other.completionTime_.Clone() : null;
      conditions_ = other.conditions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataPipelineRunStatus Clone() {
      return new DataPipelineRunStatus(this);
    }

    /// <summary>Field number for the "inputs" field.</summary>
    public const int InputsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_inputs_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> inputs_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Pointers to the done datasets
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Inputs {
      get { return inputs_; }
    }

    /// <summary>Field number for the "output" field.</summary>
    public const int OutputFieldNumber = 2;
    private readonly static string OutputDefaultValue = "";

    private string output_;
    /// <summary>
    /// the resulting dataset from the flow
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Output {
      get { return output_ ?? OutputDefaultValue; }
      set {
        output_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "output" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOutput {
      get { return output_ != null; }
    }
    /// <summary>Clears the value of the "output" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOutput() {
      output_ = null;
    }

    /// <summary>Field number for the "phase" field.</summary>
    public const int PhaseFieldNumber = 3;
    private readonly static string PhaseDefaultValue = "";

    private string phase_;
    /// <summary>
    /// the phase of the run
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Phase {
      get { return phase_ ?? PhaseDefaultValue; }
      set {
        phase_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "phase" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPhase {
      get { return phase_ != null; }
    }
    /// <summary>Clears the value of the "phase" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPhase() {
      phase_ = null;
    }

    /// <summary>Field number for the "startTime" field.</summary>
    public const int StartTimeFieldNumber = 4;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time startTime_;
    /// <summary>
    /// StartTime is the times that this data pipeline started
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "completionTime" field.</summary>
    public const int CompletionTimeFieldNumber = 5;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time completionTime_;
    /// <summary>
    /// CompletionTime is the time that this pipeline finishes
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time CompletionTime {
      get { return completionTime_; }
      set {
        completionTime_ = value;
      }
    }

    /// <summary>Field number for the "conditions" field.</summary>
    public const int ConditionsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataPipelineRunCondition> _repeated_conditions_codec
        = pb::FieldCodec.ForMessage(50, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataPipelineRunCondition.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataPipelineRunCondition> conditions_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataPipelineRunCondition>();
    /// <summary>
    /// +optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataPipelineRunCondition> Conditions {
      get { return conditions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataPipelineRunStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataPipelineRunStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!inputs_.Equals(other.inputs_)) return false;
      if (Output != other.Output) return false;
      if (Phase != other.Phase) return false;
      if (!object.Equals(StartTime, other.StartTime)) return false;
      if (!object.Equals(CompletionTime, other.CompletionTime)) return false;
      if(!conditions_.Equals(other.conditions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= inputs_.GetHashCode();
      if (HasOutput) hash ^= Output.GetHashCode();
      if (HasPhase) hash ^= Phase.GetHashCode();
      if (startTime_ != null) hash ^= StartTime.GetHashCode();
      if (completionTime_ != null) hash ^= CompletionTime.GetHashCode();
      hash ^= conditions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      inputs_.WriteTo(output, _repeated_inputs_codec);
      if (HasOutput) {
        output.WriteRawTag(18);
        output.WriteString(Output);
      }
      if (HasPhase) {
        output.WriteRawTag(26);
        output.WriteString(Phase);
      }
      if (startTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(StartTime);
      }
      if (completionTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(CompletionTime);
      }
      conditions_.WriteTo(output, _repeated_conditions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      inputs_.WriteTo(ref output, _repeated_inputs_codec);
      if (HasOutput) {
        output.WriteRawTag(18);
        output.WriteString(Output);
      }
      if (HasPhase) {
        output.WriteRawTag(26);
        output.WriteString(Phase);
      }
      if (startTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(StartTime);
      }
      if (completionTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(CompletionTime);
      }
      conditions_.WriteTo(ref output, _repeated_conditions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += inputs_.CalculateSize(_repeated_inputs_codec);
      if (HasOutput) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Output);
      }
      if (HasPhase) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Phase);
      }
      if (startTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
      }
      if (completionTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CompletionTime);
      }
      size += conditions_.CalculateSize(_repeated_conditions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataPipelineRunStatus other) {
      if (other == null) {
        return;
      }
      inputs_.Add(other.inputs_);
      if (other.HasOutput) {
        Output = other.Output;
      }
      if (other.HasPhase) {
        Phase = other.Phase;
      }
      if (other.startTime_ != null) {
        if (startTime_ == null) {
          StartTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
        }
        StartTime.MergeFrom(other.StartTime);
      }
      if (other.completionTime_ != null) {
        if (completionTime_ == null) {
          CompletionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
        }
        CompletionTime.MergeFrom(other.CompletionTime);
      }
      conditions_.Add(other.conditions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            inputs_.AddEntriesFrom(input, _repeated_inputs_codec);
            break;
          }
          case 18: {
            Output = input.ReadString();
            break;
          }
          case 26: {
            Phase = input.ReadString();
            break;
          }
          case 34: {
            if (startTime_ == null) {
              StartTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 42: {
            if (completionTime_ == null) {
              CompletionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(CompletionTime);
            break;
          }
          case 50: {
            conditions_.AddEntriesFrom(input, _repeated_conditions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            inputs_.AddEntriesFrom(ref input, _repeated_inputs_codec);
            break;
          }
          case 18: {
            Output = input.ReadString();
            break;
          }
          case 26: {
            Phase = input.ReadString();
            break;
          }
          case 34: {
            if (startTime_ == null) {
              StartTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 42: {
            if (completionTime_ == null) {
              CompletionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(CompletionTime);
            break;
          }
          case 50: {
            conditions_.AddEntriesFrom(ref input, _repeated_conditions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// DataPipelineSpec defines the desired state of a DataPipeline
  /// </summary>
  public sealed partial class DataPipelineSpec : pb::IMessage<DataPipelineSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DataPipelineSpec> _parser = new pb::MessageParser<DataPipelineSpec>(() => new DataPipelineSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataPipelineSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataPipelineSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataPipelineSpec(DataPipelineSpec other) : this() {
      versionName_ = other.versionName_;
      description_ = other.description_;
      inputDatasets_ = other.inputDatasets_.Clone();
      recipeNames_ = other.recipeNames_.Clone();
      outputDatasetName_ = other.outputDatasetName_;
      schedule_ = other.schedule_;
      owner_ = other.owner_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataPipelineSpec Clone() {
      return new DataPipelineSpec(this);
    }

    /// <summary>Field number for the "versionName" field.</summary>
    public const int VersionNameFieldNumber = 1;
    private readonly static string VersionNameDefaultValue = "";

    private string versionName_;
    /// <summary>
    /// VersionName is the data product version of the data pipeline
    /// +kubebuilder:default =""
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VersionName {
      get { return versionName_ ?? VersionNameDefaultValue; }
      set {
        versionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "versionName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasVersionName {
      get { return versionName_ != null; }
    }
    /// <summary>Clears the value of the "versionName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearVersionName() {
      versionName_ = null;
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private readonly static string DescriptionDefaultValue = "";

    private string description_;
    /// <summary>
    /// Description of the data pipeline
    /// +kubebuilder:default =""
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_ ?? DescriptionDefaultValue; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "description" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDescription {
      get { return description_ != null; }
    }
    /// <summary>Clears the value of the "description" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDescription() {
      description_ = null;
    }

    /// <summary>Field number for the "inputDatasets" field.</summary>
    public const int InputDatasetsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_inputDatasets_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> inputDatasets_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// InputDatasets is the collection of input dataset names to the data pipelines
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> InputDatasets {
      get { return inputDatasets_; }
    }

    /// <summary>Field number for the "recipeNames" field.</summary>
    public const int RecipeNamesFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_recipeNames_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> recipeNames_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// RecipeNames is the recipe for this pipeline.
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> RecipeNames {
      get { return recipeNames_; }
    }

    /// <summary>Field number for the "outputDatasetName" field.</summary>
    public const int OutputDatasetNameFieldNumber = 5;
    private readonly static string OutputDatasetNameDefaultValue = "";

    private string outputDatasetName_;
    /// <summary>
    /// +kubebuilder:default =""
    /// The output file of the pipeline
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OutputDatasetName {
      get { return outputDatasetName_ ?? OutputDatasetNameDefaultValue; }
      set {
        outputDatasetName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "outputDatasetName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOutputDatasetName {
      get { return outputDatasetName_ != null; }
    }
    /// <summary>Clears the value of the "outputDatasetName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOutputDatasetName() {
      outputDatasetName_ = null;
    }

    /// <summary>Field number for the "schedule" field.</summary>
    public const int ScheduleFieldNumber = 6;
    private readonly static string ScheduleDefaultValue = "";

    private string schedule_;
    /// <summary>
    /// Schedule is a cron field to schedule the data pipeline.
    /// +kubebuilder:default =""
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Schedule {
      get { return schedule_ ?? ScheduleDefaultValue; }
      set {
        schedule_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "schedule" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSchedule {
      get { return schedule_ != null; }
    }
    /// <summary>Clears the value of the "schedule" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSchedule() {
      schedule_ = null;
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 7;
    private readonly static string OwnerDefaultValue = "";

    private string owner_;
    /// <summary>
    /// Owner of this data pipeline
    /// +kubebuilder:default:="no-one"
    /// +kubebuilder:validation:Pattern="[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*"
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owner {
      get { return owner_ ?? OwnerDefaultValue; }
      set {
        owner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "owner" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOwner {
      get { return owner_ != null; }
    }
    /// <summary>Clears the value of the "owner" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOwner() {
      owner_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataPipelineSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataPipelineSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (VersionName != other.VersionName) return false;
      if (Description != other.Description) return false;
      if(!inputDatasets_.Equals(other.inputDatasets_)) return false;
      if(!recipeNames_.Equals(other.recipeNames_)) return false;
      if (OutputDatasetName != other.OutputDatasetName) return false;
      if (Schedule != other.Schedule) return false;
      if (Owner != other.Owner) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasVersionName) hash ^= VersionName.GetHashCode();
      if (HasDescription) hash ^= Description.GetHashCode();
      hash ^= inputDatasets_.GetHashCode();
      hash ^= recipeNames_.GetHashCode();
      if (HasOutputDatasetName) hash ^= OutputDatasetName.GetHashCode();
      if (HasSchedule) hash ^= Schedule.GetHashCode();
      if (HasOwner) hash ^= Owner.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasVersionName) {
        output.WriteRawTag(10);
        output.WriteString(VersionName);
      }
      if (HasDescription) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      inputDatasets_.WriteTo(output, _repeated_inputDatasets_codec);
      recipeNames_.WriteTo(output, _repeated_recipeNames_codec);
      if (HasOutputDatasetName) {
        output.WriteRawTag(42);
        output.WriteString(OutputDatasetName);
      }
      if (HasSchedule) {
        output.WriteRawTag(50);
        output.WriteString(Schedule);
      }
      if (HasOwner) {
        output.WriteRawTag(58);
        output.WriteString(Owner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasVersionName) {
        output.WriteRawTag(10);
        output.WriteString(VersionName);
      }
      if (HasDescription) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      inputDatasets_.WriteTo(ref output, _repeated_inputDatasets_codec);
      recipeNames_.WriteTo(ref output, _repeated_recipeNames_codec);
      if (HasOutputDatasetName) {
        output.WriteRawTag(42);
        output.WriteString(OutputDatasetName);
      }
      if (HasSchedule) {
        output.WriteRawTag(50);
        output.WriteString(Schedule);
      }
      if (HasOwner) {
        output.WriteRawTag(58);
        output.WriteString(Owner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasVersionName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VersionName);
      }
      if (HasDescription) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      size += inputDatasets_.CalculateSize(_repeated_inputDatasets_codec);
      size += recipeNames_.CalculateSize(_repeated_recipeNames_codec);
      if (HasOutputDatasetName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OutputDatasetName);
      }
      if (HasSchedule) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Schedule);
      }
      if (HasOwner) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owner);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataPipelineSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasVersionName) {
        VersionName = other.VersionName;
      }
      if (other.HasDescription) {
        Description = other.Description;
      }
      inputDatasets_.Add(other.inputDatasets_);
      recipeNames_.Add(other.recipeNames_);
      if (other.HasOutputDatasetName) {
        OutputDatasetName = other.OutputDatasetName;
      }
      if (other.HasSchedule) {
        Schedule = other.Schedule;
      }
      if (other.HasOwner) {
        Owner = other.Owner;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            VersionName = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            inputDatasets_.AddEntriesFrom(input, _repeated_inputDatasets_codec);
            break;
          }
          case 34: {
            recipeNames_.AddEntriesFrom(input, _repeated_recipeNames_codec);
            break;
          }
          case 42: {
            OutputDatasetName = input.ReadString();
            break;
          }
          case 50: {
            Schedule = input.ReadString();
            break;
          }
          case 58: {
            Owner = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            VersionName = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            inputDatasets_.AddEntriesFrom(ref input, _repeated_inputDatasets_codec);
            break;
          }
          case 34: {
            recipeNames_.AddEntriesFrom(ref input, _repeated_recipeNames_codec);
            break;
          }
          case 42: {
            OutputDatasetName = input.ReadString();
            break;
          }
          case 50: {
            Schedule = input.ReadString();
            break;
          }
          case 58: {
            Owner = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// DataPipelineStatus is the observed state of the DataPipeline object.
  /// </summary>
  public sealed partial class DataPipelineStatus : pb::IMessage<DataPipelineStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DataPipelineStatus> _parser = new pb::MessageParser<DataPipelineStatus>(() => new DataPipelineStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataPipelineStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataPipelineStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataPipelineStatus(DataPipelineStatus other) : this() {
      conditions_ = other.conditions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataPipelineStatus Clone() {
      return new DataPipelineStatus(this);
    }

    /// <summary>Field number for the "conditions" field.</summary>
    public const int ConditionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataPipelineCondition> _repeated_conditions_codec
        = pb::FieldCodec.ForMessage(10, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataPipelineCondition.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataPipelineCondition> conditions_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataPipelineCondition>();
    /// <summary>
    /// +optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataPipelineCondition> Conditions {
      get { return conditions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataPipelineStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataPipelineStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!conditions_.Equals(other.conditions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= conditions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      conditions_.WriteTo(output, _repeated_conditions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      conditions_.WriteTo(ref output, _repeated_conditions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += conditions_.CalculateSize(_repeated_conditions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataPipelineStatus other) {
      if (other == null) {
        return;
      }
      conditions_.Add(other.conditions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            conditions_.AddEntriesFrom(input, _repeated_conditions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            conditions_.AddEntriesFrom(ref input, _repeated_conditions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// DataProduct represent a single data product in the system
  /// +kubebuilder:object:root=true
  /// +kubebuilder:subresource:status
  /// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status"
  /// +kubebuilder:printcolumn:name="Bucket",type="string",JSONPath=".spec.dataLocation.bucketName"
  /// +kubebuilder:printcolumn:name="Image Repo",type="string",JSONPath=".spec.imageLocation.url"
  /// +kubebuilder:printcolumn:name="Task",type="string",JSONPath=".spec.task"
  /// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
  /// +kubebuilder:resource:path=dataproducts,shortName=dp,singular=dataproduct,categories={data,modela,all}
  /// </summary>
  public sealed partial class DataProduct : pb::IMessage<DataProduct>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DataProduct> _parser = new pb::MessageParser<DataProduct>(() => new DataProduct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataProduct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataProduct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataProduct(DataProduct other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      spec_ = other.spec_ != null ? other.spec_.Clone() : null;
      status_ = other.status_ != null ? other.status_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataProduct Clone() {
      return new DataProduct(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "spec" field.</summary>
    public const int SpecFieldNumber = 2;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataProductSpec spec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataProductSpec Spec {
      get { return spec_; }
      set {
        spec_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 3;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataProductStatus status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataProductStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataProduct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataProduct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if (!object.Equals(Spec, other.Spec)) return false;
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      if (spec_ != null) hash ^= Spec.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      if (spec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Spec);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataProduct other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      if (other.spec_ != null) {
        if (spec_ == null) {
          Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataProductSpec();
        }
        Spec.MergeFrom(other.Spec);
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataProductStatus();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataProductSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataProductStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataProductSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataProductStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// DeploymentCondition describes the state of a deployment at a certain point.
  /// </summary>
  public sealed partial class DataProductCondition : pb::IMessage<DataProductCondition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DataProductCondition> _parser = new pb::MessageParser<DataProductCondition>(() => new DataProductCondition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataProductCondition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataProductCondition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataProductCondition(DataProductCondition other) : this() {
      type_ = other.type_;
      status_ = other.status_;
      lastTransitionTime_ = other.lastTransitionTime_ != null ? other.lastTransitionTime_.Clone() : null;
      reason_ = other.reason_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataProductCondition Clone() {
      return new DataProductCondition(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static string TypeDefaultValue = "";

    private string type_;
    /// <summary>
    /// Type of condition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_ ?? TypeDefaultValue; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return type_ != null; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      type_ = null;
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private readonly static string StatusDefaultValue = "";

    private string status_;
    /// <summary>
    /// Status of the condition, one of True, False, AutoScaler.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Status {
      get { return status_ ?? StatusDefaultValue; }
      set {
        status_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStatus {
      get { return status_ != null; }
    }
    /// <summary>Clears the value of the "status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStatus() {
      status_ = null;
    }

    /// <summary>Field number for the "lastTransitionTime" field.</summary>
    public const int LastTransitionTimeFieldNumber = 4;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time lastTransitionTime_;
    /// <summary>
    /// Last time the condition transitioned from one status to another.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time LastTransitionTime {
      get { return lastTransitionTime_; }
      set {
        lastTransitionTime_ = value;
      }
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 5;
    private readonly static string ReasonDefaultValue = "";

    private string reason_;
    /// <summary>
    /// The reason for the condition's last transition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Reason {
      get { return reason_ ?? ReasonDefaultValue; }
      set {
        reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "reason" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasReason {
      get { return reason_ != null; }
    }
    /// <summary>Clears the value of the "reason" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReason() {
      reason_ = null;
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 6;
    private readonly static string MessageDefaultValue = "";

    private string message_;
    /// <summary>
    /// A human readable message indicating details about the transition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_ ?? MessageDefaultValue; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMessage {
      get { return message_ != null; }
    }
    /// <summary>Clears the value of the "message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessage() {
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataProductCondition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataProductCondition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Status != other.Status) return false;
      if (!object.Equals(LastTransitionTime, other.LastTransitionTime)) return false;
      if (Reason != other.Reason) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasStatus) hash ^= Status.GetHashCode();
      if (lastTransitionTime_ != null) hash ^= LastTransitionTime.GetHashCode();
      if (HasReason) hash ^= Reason.GetHashCode();
      if (HasMessage) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasStatus) {
        output.WriteRawTag(18);
        output.WriteString(Status);
      }
      if (lastTransitionTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LastTransitionTime);
      }
      if (HasReason) {
        output.WriteRawTag(42);
        output.WriteString(Reason);
      }
      if (HasMessage) {
        output.WriteRawTag(50);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasStatus) {
        output.WriteRawTag(18);
        output.WriteString(Status);
      }
      if (lastTransitionTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LastTransitionTime);
      }
      if (HasReason) {
        output.WriteRawTag(42);
        output.WriteString(Reason);
      }
      if (HasMessage) {
        output.WriteRawTag(50);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (HasStatus) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Status);
      }
      if (lastTransitionTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastTransitionTime);
      }
      if (HasReason) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
      }
      if (HasMessage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataProductCondition other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasStatus) {
        Status = other.Status;
      }
      if (other.lastTransitionTime_ != null) {
        if (lastTransitionTime_ == null) {
          LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
        }
        LastTransitionTime.MergeFrom(other.LastTransitionTime);
      }
      if (other.HasReason) {
        Reason = other.Reason;
      }
      if (other.HasMessage) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Status = input.ReadString();
            break;
          }
          case 34: {
            if (lastTransitionTime_ == null) {
              LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(LastTransitionTime);
            break;
          }
          case 42: {
            Reason = input.ReadString();
            break;
          }
          case 50: {
            Message = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Status = input.ReadString();
            break;
          }
          case 34: {
            if (lastTransitionTime_ == null) {
              LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(LastTransitionTime);
            break;
          }
          case 42: {
            Reason = input.ReadString();
            break;
          }
          case 50: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// +kubebuilder:object:root=true
  /// DataProductList contains a list of DataProducts
  /// </summary>
  public sealed partial class DataProductList : pb::IMessage<DataProductList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DataProductList> _parser = new pb::MessageParser<DataProductList>(() => new DataProductList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataProductList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataProductList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataProductList(DataProductList other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataProductList Clone() {
      return new DataProductList(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataProduct> _repeated_items_codec
        = pb::FieldCodec.ForMessage(18, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataProduct.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataProduct> items_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataProduct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataProduct> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataProductList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataProductList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(ref output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataProductList other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// DataProductSpec defines the desired state of a data product
  /// </summary>
  public sealed partial class DataProductSpec : pb::IMessage<DataProductSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DataProductSpec> _parser = new pb::MessageParser<DataProductSpec>(() => new DataProductSpec());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataProductSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataProductSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataProductSpec(DataProductSpec other) : this() {
      _hasBits0 = other._hasBits0;
      owner_ = other.owner_;
      tenantRef_ = other.tenantRef_ != null ? other.tenantRef_.Clone() : null;
      stakeholders_ = other.stakeholders_.Clone();
      gitLocation_ = other.gitLocation_ != null ? other.gitLocation_.Clone() : null;
      imageLocation_ = other.imageLocation_ != null ? other.imageLocation_.Clone() : null;
      labName_ = other.labName_;
      servingSiteName_ = other.servingSiteName_;
      task_ = other.task_;
      description_ = other.description_;
      dataLocation_ = other.dataLocation_ != null ? other.dataLocation_.Clone() : null;
      notifierName_ = other.notifierName_;
      modelWorkloadClassName_ = other.modelWorkloadClassName_;
      dataWorkloadClassName_ = other.dataWorkloadClassName_;
      retriesOnFailure_ = other.retriesOnFailure_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataProductSpec Clone() {
      return new DataProductSpec(this);
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 1;
    private readonly static string OwnerDefaultValue = "";

    private string owner_;
    /// <summary>
    /// The data product owner
    /// +kubebuilder:default ="no-one"
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owner {
      get { return owner_ ?? OwnerDefaultValue; }
      set {
        owner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "owner" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOwner {
      get { return owner_ != null; }
    }
    /// <summary>Clears the value of the "owner" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOwner() {
      owner_ = null;
    }

    /// <summary>Field number for the "tenantRef" field.</summary>
    public const int TenantRefFieldNumber = 2;
    private global::K8S.Io.Api.Core.V1.ObjectReference tenantRef_;
    /// <summary>
    /// The tenant that own the data product.
    /// Default to default tenant.
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Api.Core.V1.ObjectReference TenantRef {
      get { return tenantRef_; }
      set {
        tenantRef_ = value;
      }
    }

    /// <summary>Field number for the "stakeholders" field.</summary>
    public const int StakeholdersFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.StakeHolder> _repeated_stakeholders_codec
        = pb::FieldCodec.ForMessage(26, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.StakeHolder.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.StakeHolder> stakeholders_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.StakeHolder>();
    /// <summary>
    /// Stake holders refer to a list of stackholders, which have interest in the product.
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.StakeHolder> Stakeholders {
      get { return stakeholders_; }
    }

    /// <summary>Field number for the "gitLocation" field.</summary>
    public const int GitLocationFieldNumber = 4;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GitLocation gitLocation_;
    /// <summary>
    /// GitLocation is the github repository for all the artifacts for this product
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GitLocation GitLocation {
      get { return gitLocation_; }
      set {
        gitLocation_ = value;
      }
    }

    /// <summary>Field number for the "imageLocation" field.</summary>
    public const int ImageLocationFieldNumber = 5;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.ImageLocation imageLocation_;
    /// <summary>
    /// ImageLocation is the image repository that stores the models images for the product versions
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.ImageLocation ImageLocation {
      get { return imageLocation_; }
      set {
        imageLocation_ = value;
      }
    }

    /// <summary>Field number for the "labName" field.</summary>
    public const int LabNameFieldNumber = 7;
    private readonly static string LabNameDefaultValue = "";

    private string labName_;
    /// <summary>
    /// LabName is the Lab where models of this products are trained
    /// +kubebuilder:validation:Pattern="[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*"
    /// +kubebuilder:default =""
    /// +kubebuilder:validation:MaxLength=63
    /// +kubebuilder:validation:MinLength=1
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LabName {
      get { return labName_ ?? LabNameDefaultValue; }
      set {
        labName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "labName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLabName {
      get { return labName_ != null; }
    }
    /// <summary>Clears the value of the "labName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLabName() {
      labName_ = null;
    }

    /// <summary>Field number for the "servingSiteName" field.</summary>
    public const int ServingSiteNameFieldNumber = 8;
    private readonly static string ServingSiteNameDefaultValue = "";

    private string servingSiteName_;
    /// <summary>
    /// ServingSiteName is the serving site where predictors of this product are deployed
    /// +kubebuilder:default =""
    /// +kubebuilder:validation:MaxLength=63
    /// +kubebuilder:validation:MinLength=1
    /// +kubebuilder:validation:Pattern="[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*"
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServingSiteName {
      get { return servingSiteName_ ?? ServingSiteNameDefaultValue; }
      set {
        servingSiteName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "servingSiteName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasServingSiteName {
      get { return servingSiteName_ != null; }
    }
    /// <summary>Clears the value of the "servingSiteName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearServingSiteName() {
      servingSiteName_ = null;
    }

    /// <summary>Field number for the "task" field.</summary>
    public const int TaskFieldNumber = 9;
    private readonly static string TaskDefaultValue = "";

    private string task_;
    /// <summary>
    /// Task denote the machine learning task of the product (classification/regression,etc.)
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Task {
      get { return task_ ?? TaskDefaultValue; }
      set {
        task_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "task" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTask {
      get { return task_ != null; }
    }
    /// <summary>Clears the value of the "task" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTask() {
      task_ = null;
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 10;
    private readonly static string DescriptionDefaultValue = "";

    private string description_;
    /// <summary>
    /// User provided description
    /// +kubebuilder:default =""
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:validation:MaxLength=512
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_ ?? DescriptionDefaultValue; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "description" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDescription {
      get { return description_ != null; }
    }
    /// <summary>Clears the value of the "description" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDescription() {
      description_ = null;
    }

    /// <summary>Field number for the "dataLocation" field.</summary>
    public const int DataLocationFieldNumber = 11;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataLocation dataLocation_;
    /// <summary>
    /// This folder contain the root location for all the artifacts from the product.
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataLocation DataLocation {
      get { return dataLocation_; }
      set {
        dataLocation_ = value;
      }
    }

    /// <summary>Field number for the "notifierName" field.</summary>
    public const int NotifierNameFieldNumber = 12;
    private readonly static string NotifierNameDefaultValue = "";

    private string notifierName_;
    /// <summary>
    /// the notifier selector select the notifier for events that occur in the product life cycle.
    /// +kubebuilder:default:=""
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NotifierName {
      get { return notifierName_ ?? NotifierNameDefaultValue; }
      set {
        notifierName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "notifierName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNotifierName {
      get { return notifierName_ != null; }
    }
    /// <summary>Clears the value of the "notifierName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNotifierName() {
      notifierName_ = null;
    }

    /// <summary>Field number for the "modelWorkloadClassName" field.</summary>
    public const int ModelWorkloadClassNameFieldNumber = 13;
    private readonly static string ModelWorkloadClassNameDefaultValue = "";

    private string modelWorkloadClassName_;
    /// <summary>
    /// A reference to the workload class used when training or testing the model
    /// +kubebuilder:default:=""
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModelWorkloadClassName {
      get { return modelWorkloadClassName_ ?? ModelWorkloadClassNameDefaultValue; }
      set {
        modelWorkloadClassName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "modelWorkloadClassName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasModelWorkloadClassName {
      get { return modelWorkloadClassName_ != null; }
    }
    /// <summary>Clears the value of the "modelWorkloadClassName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearModelWorkloadClassName() {
      modelWorkloadClassName_ = null;
    }

    /// <summary>Field number for the "dataWorkloadClassName" field.</summary>
    public const int DataWorkloadClassNameFieldNumber = 14;
    private readonly static string DataWorkloadClassNameDefaultValue = "";

    private string dataWorkloadClassName_;
    /// <summary>
    /// A reference to the workload class used when running tasks on the dataset, for example profiling or reports.
    /// +kubebuilder:default:=""
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DataWorkloadClassName {
      get { return dataWorkloadClassName_ ?? DataWorkloadClassNameDefaultValue; }
      set {
        dataWorkloadClassName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "dataWorkloadClassName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDataWorkloadClassName {
      get { return dataWorkloadClassName_ != null; }
    }
    /// <summary>Clears the value of the "dataWorkloadClassName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDataWorkloadClassName() {
      dataWorkloadClassName_ = null;
    }

    /// <summary>Field number for the "retriesOnFailure" field.</summary>
    public const int RetriesOnFailureFieldNumber = 15;
    private readonly static int RetriesOnFailureDefaultValue = 0;

    private int retriesOnFailure_;
    /// <summary>
    /// Denote how many time a job is retry after failure
    /// +kubebuilder:default:=3
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RetriesOnFailure {
      get { if ((_hasBits0 & 1) != 0) { return retriesOnFailure_; } else { return RetriesOnFailureDefaultValue; } }
      set {
        _hasBits0 |= 1;
        retriesOnFailure_ = value;
      }
    }
    /// <summary>Gets whether the "retriesOnFailure" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRetriesOnFailure {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "retriesOnFailure" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRetriesOnFailure() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataProductSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataProductSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Owner != other.Owner) return false;
      if (!object.Equals(TenantRef, other.TenantRef)) return false;
      if(!stakeholders_.Equals(other.stakeholders_)) return false;
      if (!object.Equals(GitLocation, other.GitLocation)) return false;
      if (!object.Equals(ImageLocation, other.ImageLocation)) return false;
      if (LabName != other.LabName) return false;
      if (ServingSiteName != other.ServingSiteName) return false;
      if (Task != other.Task) return false;
      if (Description != other.Description) return false;
      if (!object.Equals(DataLocation, other.DataLocation)) return false;
      if (NotifierName != other.NotifierName) return false;
      if (ModelWorkloadClassName != other.ModelWorkloadClassName) return false;
      if (DataWorkloadClassName != other.DataWorkloadClassName) return false;
      if (RetriesOnFailure != other.RetriesOnFailure) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasOwner) hash ^= Owner.GetHashCode();
      if (tenantRef_ != null) hash ^= TenantRef.GetHashCode();
      hash ^= stakeholders_.GetHashCode();
      if (gitLocation_ != null) hash ^= GitLocation.GetHashCode();
      if (imageLocation_ != null) hash ^= ImageLocation.GetHashCode();
      if (HasLabName) hash ^= LabName.GetHashCode();
      if (HasServingSiteName) hash ^= ServingSiteName.GetHashCode();
      if (HasTask) hash ^= Task.GetHashCode();
      if (HasDescription) hash ^= Description.GetHashCode();
      if (dataLocation_ != null) hash ^= DataLocation.GetHashCode();
      if (HasNotifierName) hash ^= NotifierName.GetHashCode();
      if (HasModelWorkloadClassName) hash ^= ModelWorkloadClassName.GetHashCode();
      if (HasDataWorkloadClassName) hash ^= DataWorkloadClassName.GetHashCode();
      if (HasRetriesOnFailure) hash ^= RetriesOnFailure.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasOwner) {
        output.WriteRawTag(10);
        output.WriteString(Owner);
      }
      if (tenantRef_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TenantRef);
      }
      stakeholders_.WriteTo(output, _repeated_stakeholders_codec);
      if (gitLocation_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(GitLocation);
      }
      if (imageLocation_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ImageLocation);
      }
      if (HasLabName) {
        output.WriteRawTag(58);
        output.WriteString(LabName);
      }
      if (HasServingSiteName) {
        output.WriteRawTag(66);
        output.WriteString(ServingSiteName);
      }
      if (HasTask) {
        output.WriteRawTag(74);
        output.WriteString(Task);
      }
      if (HasDescription) {
        output.WriteRawTag(82);
        output.WriteString(Description);
      }
      if (dataLocation_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(DataLocation);
      }
      if (HasNotifierName) {
        output.WriteRawTag(98);
        output.WriteString(NotifierName);
      }
      if (HasModelWorkloadClassName) {
        output.WriteRawTag(106);
        output.WriteString(ModelWorkloadClassName);
      }
      if (HasDataWorkloadClassName) {
        output.WriteRawTag(114);
        output.WriteString(DataWorkloadClassName);
      }
      if (HasRetriesOnFailure) {
        output.WriteRawTag(120);
        output.WriteInt32(RetriesOnFailure);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasOwner) {
        output.WriteRawTag(10);
        output.WriteString(Owner);
      }
      if (tenantRef_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TenantRef);
      }
      stakeholders_.WriteTo(ref output, _repeated_stakeholders_codec);
      if (gitLocation_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(GitLocation);
      }
      if (imageLocation_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ImageLocation);
      }
      if (HasLabName) {
        output.WriteRawTag(58);
        output.WriteString(LabName);
      }
      if (HasServingSiteName) {
        output.WriteRawTag(66);
        output.WriteString(ServingSiteName);
      }
      if (HasTask) {
        output.WriteRawTag(74);
        output.WriteString(Task);
      }
      if (HasDescription) {
        output.WriteRawTag(82);
        output.WriteString(Description);
      }
      if (dataLocation_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(DataLocation);
      }
      if (HasNotifierName) {
        output.WriteRawTag(98);
        output.WriteString(NotifierName);
      }
      if (HasModelWorkloadClassName) {
        output.WriteRawTag(106);
        output.WriteString(ModelWorkloadClassName);
      }
      if (HasDataWorkloadClassName) {
        output.WriteRawTag(114);
        output.WriteString(DataWorkloadClassName);
      }
      if (HasRetriesOnFailure) {
        output.WriteRawTag(120);
        output.WriteInt32(RetriesOnFailure);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasOwner) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owner);
      }
      if (tenantRef_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TenantRef);
      }
      size += stakeholders_.CalculateSize(_repeated_stakeholders_codec);
      if (gitLocation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GitLocation);
      }
      if (imageLocation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ImageLocation);
      }
      if (HasLabName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LabName);
      }
      if (HasServingSiteName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServingSiteName);
      }
      if (HasTask) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Task);
      }
      if (HasDescription) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (dataLocation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DataLocation);
      }
      if (HasNotifierName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NotifierName);
      }
      if (HasModelWorkloadClassName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelWorkloadClassName);
      }
      if (HasDataWorkloadClassName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DataWorkloadClassName);
      }
      if (HasRetriesOnFailure) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RetriesOnFailure);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataProductSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasOwner) {
        Owner = other.Owner;
      }
      if (other.tenantRef_ != null) {
        if (tenantRef_ == null) {
          TenantRef = new global::K8S.Io.Api.Core.V1.ObjectReference();
        }
        TenantRef.MergeFrom(other.TenantRef);
      }
      stakeholders_.Add(other.stakeholders_);
      if (other.gitLocation_ != null) {
        if (gitLocation_ == null) {
          GitLocation = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GitLocation();
        }
        GitLocation.MergeFrom(other.GitLocation);
      }
      if (other.imageLocation_ != null) {
        if (imageLocation_ == null) {
          ImageLocation = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.ImageLocation();
        }
        ImageLocation.MergeFrom(other.ImageLocation);
      }
      if (other.HasLabName) {
        LabName = other.LabName;
      }
      if (other.HasServingSiteName) {
        ServingSiteName = other.ServingSiteName;
      }
      if (other.HasTask) {
        Task = other.Task;
      }
      if (other.HasDescription) {
        Description = other.Description;
      }
      if (other.dataLocation_ != null) {
        if (dataLocation_ == null) {
          DataLocation = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataLocation();
        }
        DataLocation.MergeFrom(other.DataLocation);
      }
      if (other.HasNotifierName) {
        NotifierName = other.NotifierName;
      }
      if (other.HasModelWorkloadClassName) {
        ModelWorkloadClassName = other.ModelWorkloadClassName;
      }
      if (other.HasDataWorkloadClassName) {
        DataWorkloadClassName = other.DataWorkloadClassName;
      }
      if (other.HasRetriesOnFailure) {
        RetriesOnFailure = other.RetriesOnFailure;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Owner = input.ReadString();
            break;
          }
          case 18: {
            if (tenantRef_ == null) {
              TenantRef = new global::K8S.Io.Api.Core.V1.ObjectReference();
            }
            input.ReadMessage(TenantRef);
            break;
          }
          case 26: {
            stakeholders_.AddEntriesFrom(input, _repeated_stakeholders_codec);
            break;
          }
          case 34: {
            if (gitLocation_ == null) {
              GitLocation = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GitLocation();
            }
            input.ReadMessage(GitLocation);
            break;
          }
          case 42: {
            if (imageLocation_ == null) {
              ImageLocation = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.ImageLocation();
            }
            input.ReadMessage(ImageLocation);
            break;
          }
          case 58: {
            LabName = input.ReadString();
            break;
          }
          case 66: {
            ServingSiteName = input.ReadString();
            break;
          }
          case 74: {
            Task = input.ReadString();
            break;
          }
          case 82: {
            Description = input.ReadString();
            break;
          }
          case 90: {
            if (dataLocation_ == null) {
              DataLocation = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataLocation();
            }
            input.ReadMessage(DataLocation);
            break;
          }
          case 98: {
            NotifierName = input.ReadString();
            break;
          }
          case 106: {
            ModelWorkloadClassName = input.ReadString();
            break;
          }
          case 114: {
            DataWorkloadClassName = input.ReadString();
            break;
          }
          case 120: {
            RetriesOnFailure = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Owner = input.ReadString();
            break;
          }
          case 18: {
            if (tenantRef_ == null) {
              TenantRef = new global::K8S.Io.Api.Core.V1.ObjectReference();
            }
            input.ReadMessage(TenantRef);
            break;
          }
          case 26: {
            stakeholders_.AddEntriesFrom(ref input, _repeated_stakeholders_codec);
            break;
          }
          case 34: {
            if (gitLocation_ == null) {
              GitLocation = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GitLocation();
            }
            input.ReadMessage(GitLocation);
            break;
          }
          case 42: {
            if (imageLocation_ == null) {
              ImageLocation = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.ImageLocation();
            }
            input.ReadMessage(ImageLocation);
            break;
          }
          case 58: {
            LabName = input.ReadString();
            break;
          }
          case 66: {
            ServingSiteName = input.ReadString();
            break;
          }
          case 74: {
            Task = input.ReadString();
            break;
          }
          case 82: {
            Description = input.ReadString();
            break;
          }
          case 90: {
            if (dataLocation_ == null) {
              DataLocation = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataLocation();
            }
            input.ReadMessage(DataLocation);
            break;
          }
          case 98: {
            NotifierName = input.ReadString();
            break;
          }
          case 106: {
            ModelWorkloadClassName = input.ReadString();
            break;
          }
          case 114: {
            DataWorkloadClassName = input.ReadString();
            break;
          }
          case 120: {
            RetriesOnFailure = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// DataProductStatus defines the observed state of DataProduct
  /// </summary>
  public sealed partial class DataProductStatus : pb::IMessage<DataProductStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DataProductStatus> _parser = new pb::MessageParser<DataProductStatus>(() => new DataProductStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataProductStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataProductStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataProductStatus(DataProductStatus other) : this() {
      conditions_ = other.conditions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataProductStatus Clone() {
      return new DataProductStatus(this);
    }

    /// <summary>Field number for the "conditions" field.</summary>
    public const int ConditionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataProductCondition> _repeated_conditions_codec
        = pb::FieldCodec.ForMessage(10, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataProductCondition.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataProductCondition> conditions_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataProductCondition>();
    /// <summary>
    /// The conditions of the product.
    /// +optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataProductCondition> Conditions {
      get { return conditions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataProductStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataProductStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!conditions_.Equals(other.conditions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= conditions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      conditions_.WriteTo(output, _repeated_conditions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      conditions_.WriteTo(ref output, _repeated_conditions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += conditions_.CalculateSize(_repeated_conditions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataProductStatus other) {
      if (other == null) {
        return;
      }
      conditions_.Add(other.conditions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            conditions_.AddEntriesFrom(input, _repeated_conditions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            conditions_.AddEntriesFrom(ref input, _repeated_conditions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// +kubebuilder:object:root=true
  /// +kubebuilder:subresource:status
  /// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
  /// +kubebuilder:printcolumn:name="Entity",type="string",JSONPath=".spec.productRef.name",description=""
  /// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
  /// +kubebuilder:resource:path=dataproductversions,shortName=dpv,singular=dataproductversion,categories={data,modela,all}
  /// DataProductVersion represent a version of the data product. A version is usually created when a new
  /// data was gathered for the same product.
  /// </summary>
  public sealed partial class DataProductVersion : pb::IMessage<DataProductVersion>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DataProductVersion> _parser = new pb::MessageParser<DataProductVersion>(() => new DataProductVersion());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataProductVersion> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataProductVersion() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataProductVersion(DataProductVersion other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      spec_ = other.spec_ != null ? other.spec_.Clone() : null;
      status_ = other.status_ != null ? other.status_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataProductVersion Clone() {
      return new DataProductVersion(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "spec" field.</summary>
    public const int SpecFieldNumber = 2;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataProductVersionSpec spec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataProductVersionSpec Spec {
      get { return spec_; }
      set {
        spec_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 3;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataProductVersionStatus status_;
    /// <summary>
    /// +optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataProductVersionStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataProductVersion);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataProductVersion other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if (!object.Equals(Spec, other.Spec)) return false;
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      if (spec_ != null) hash ^= Spec.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      if (spec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Spec);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataProductVersion other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      if (other.spec_ != null) {
        if (spec_ == null) {
          Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataProductVersionSpec();
        }
        Spec.MergeFrom(other.Spec);
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataProductVersionStatus();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataProductVersionSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataProductVersionStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataProductVersionSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataProductVersionStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// DataProductVersionCondition describes the state of a DataProductVersion at a certain point.
  /// </summary>
  public sealed partial class DataProductVersionCondition : pb::IMessage<DataProductVersionCondition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DataProductVersionCondition> _parser = new pb::MessageParser<DataProductVersionCondition>(() => new DataProductVersionCondition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataProductVersionCondition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataProductVersionCondition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataProductVersionCondition(DataProductVersionCondition other) : this() {
      type_ = other.type_;
      status_ = other.status_;
      lastTransitionTime_ = other.lastTransitionTime_ != null ? other.lastTransitionTime_.Clone() : null;
      reason_ = other.reason_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataProductVersionCondition Clone() {
      return new DataProductVersionCondition(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static string TypeDefaultValue = "";

    private string type_;
    /// <summary>
    /// Type of condition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_ ?? TypeDefaultValue; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return type_ != null; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      type_ = null;
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private readonly static string StatusDefaultValue = "";

    private string status_;
    /// <summary>
    /// Status of the condition, one of True, False, Unknown.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Status {
      get { return status_ ?? StatusDefaultValue; }
      set {
        status_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStatus {
      get { return status_ != null; }
    }
    /// <summary>Clears the value of the "status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStatus() {
      status_ = null;
    }

    /// <summary>Field number for the "lastTransitionTime" field.</summary>
    public const int LastTransitionTimeFieldNumber = 4;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time lastTransitionTime_;
    /// <summary>
    /// Last time the condition transitioned from one status to another.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time LastTransitionTime {
      get { return lastTransitionTime_; }
      set {
        lastTransitionTime_ = value;
      }
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 5;
    private readonly static string ReasonDefaultValue = "";

    private string reason_;
    /// <summary>
    /// The reason for the condition's last transition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Reason {
      get { return reason_ ?? ReasonDefaultValue; }
      set {
        reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "reason" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasReason {
      get { return reason_ != null; }
    }
    /// <summary>Clears the value of the "reason" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReason() {
      reason_ = null;
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 6;
    private readonly static string MessageDefaultValue = "";

    private string message_;
    /// <summary>
    /// A human readable message indicating details about the transition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_ ?? MessageDefaultValue; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMessage {
      get { return message_ != null; }
    }
    /// <summary>Clears the value of the "message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessage() {
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataProductVersionCondition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataProductVersionCondition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Status != other.Status) return false;
      if (!object.Equals(LastTransitionTime, other.LastTransitionTime)) return false;
      if (Reason != other.Reason) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasStatus) hash ^= Status.GetHashCode();
      if (lastTransitionTime_ != null) hash ^= LastTransitionTime.GetHashCode();
      if (HasReason) hash ^= Reason.GetHashCode();
      if (HasMessage) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasStatus) {
        output.WriteRawTag(18);
        output.WriteString(Status);
      }
      if (lastTransitionTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LastTransitionTime);
      }
      if (HasReason) {
        output.WriteRawTag(42);
        output.WriteString(Reason);
      }
      if (HasMessage) {
        output.WriteRawTag(50);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasStatus) {
        output.WriteRawTag(18);
        output.WriteString(Status);
      }
      if (lastTransitionTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LastTransitionTime);
      }
      if (HasReason) {
        output.WriteRawTag(42);
        output.WriteString(Reason);
      }
      if (HasMessage) {
        output.WriteRawTag(50);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (HasStatus) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Status);
      }
      if (lastTransitionTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastTransitionTime);
      }
      if (HasReason) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
      }
      if (HasMessage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataProductVersionCondition other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasStatus) {
        Status = other.Status;
      }
      if (other.lastTransitionTime_ != null) {
        if (lastTransitionTime_ == null) {
          LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
        }
        LastTransitionTime.MergeFrom(other.LastTransitionTime);
      }
      if (other.HasReason) {
        Reason = other.Reason;
      }
      if (other.HasMessage) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Status = input.ReadString();
            break;
          }
          case 34: {
            if (lastTransitionTime_ == null) {
              LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(LastTransitionTime);
            break;
          }
          case 42: {
            Reason = input.ReadString();
            break;
          }
          case 50: {
            Message = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Status = input.ReadString();
            break;
          }
          case 34: {
            if (lastTransitionTime_ == null) {
              LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(LastTransitionTime);
            break;
          }
          case 42: {
            Reason = input.ReadString();
            break;
          }
          case 50: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// +kubebuilder:object:root=true
  /// DataProductVersionList contains a list of DataProductVersion
  /// </summary>
  public sealed partial class DataProductVersionList : pb::IMessage<DataProductVersionList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DataProductVersionList> _parser = new pb::MessageParser<DataProductVersionList>(() => new DataProductVersionList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataProductVersionList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataProductVersionList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataProductVersionList(DataProductVersionList other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataProductVersionList Clone() {
      return new DataProductVersionList(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataProductVersion> _repeated_items_codec
        = pb::FieldCodec.ForMessage(18, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataProductVersion.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataProductVersion> items_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataProductVersion>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataProductVersion> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataProductVersionList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataProductVersionList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(ref output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataProductVersionList other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// DataProductVersionSpec defines the desired state of a data product version
  /// </summary>
  public sealed partial class DataProductVersionSpec : pb::IMessage<DataProductVersionSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DataProductVersionSpec> _parser = new pb::MessageParser<DataProductVersionSpec>(() => new DataProductVersionSpec());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataProductVersionSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataProductVersionSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataProductVersionSpec(DataProductVersionSpec other) : this() {
      _hasBits0 = other._hasBits0;
      productRef_ = other.productRef_ != null ? other.productRef_.Clone() : null;
      description_ = other.description_;
      prevVersionName_ = other.prevVersionName_;
      baseline_ = other.baseline_;
      owner_ = other.owner_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataProductVersionSpec Clone() {
      return new DataProductVersionSpec(this);
    }

    /// <summary>Field number for the "productRef" field.</summary>
    public const int ProductRefFieldNumber = 1;
    private global::K8S.Io.Api.Core.V1.ObjectReference productRef_;
    /// <summary>
    /// Reference to the product reference
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Api.Core.V1.ObjectReference ProductRef {
      get { return productRef_; }
      set {
        productRef_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private readonly static string DescriptionDefaultValue = "";

    private string description_;
    /// <summary>
    /// Description is user provided description
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:default:=""
    /// +kubebuilder:validation:MaxLength=512
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_ ?? DescriptionDefaultValue; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "description" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDescription {
      get { return description_ != null; }
    }
    /// <summary>Clears the value of the "description" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDescription() {
      description_ = null;
    }

    /// <summary>Field number for the "prevVersionName" field.</summary>
    public const int PrevVersionNameFieldNumber = 3;
    private readonly static string PrevVersionNameDefaultValue = "";

    private string prevVersionName_;
    /// <summary>
    /// PrevVersionName is a pointer to the version that we derived from
    /// +kubebuilder:validation:MaxLength=63
    /// +kubebuilder:default:=""
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PrevVersionName {
      get { return prevVersionName_ ?? PrevVersionNameDefaultValue; }
      set {
        prevVersionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "prevVersionName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPrevVersionName {
      get { return prevVersionName_ != null; }
    }
    /// <summary>Clears the value of the "prevVersionName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPrevVersionName() {
      prevVersionName_ = null;
    }

    /// <summary>Field number for the "baseline" field.</summary>
    public const int BaselineFieldNumber = 4;
    private readonly static bool BaselineDefaultValue = false;

    private bool baseline_;
    /// <summary>
    /// Baseline denote if this product version a baseline. If a product version is a baseline, we can garbage
    /// collect all the parents' product versions
    /// +kubebuilder:default:=false
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Baseline {
      get { if ((_hasBits0 & 1) != 0) { return baseline_; } else { return BaselineDefaultValue; } }
      set {
        _hasBits0 |= 1;
        baseline_ = value;
      }
    }
    /// <summary>Gets whether the "baseline" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBaseline {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "baseline" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBaseline() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 5;
    private readonly static string OwnerDefaultValue = "";

    private string owner_;
    /// <summary>
    /// The owner account name
    /// +kubebuilder:default:="no-one"
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owner {
      get { return owner_ ?? OwnerDefaultValue; }
      set {
        owner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "owner" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOwner {
      get { return owner_ != null; }
    }
    /// <summary>Clears the value of the "owner" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOwner() {
      owner_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataProductVersionSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataProductVersionSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ProductRef, other.ProductRef)) return false;
      if (Description != other.Description) return false;
      if (PrevVersionName != other.PrevVersionName) return false;
      if (Baseline != other.Baseline) return false;
      if (Owner != other.Owner) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (productRef_ != null) hash ^= ProductRef.GetHashCode();
      if (HasDescription) hash ^= Description.GetHashCode();
      if (HasPrevVersionName) hash ^= PrevVersionName.GetHashCode();
      if (HasBaseline) hash ^= Baseline.GetHashCode();
      if (HasOwner) hash ^= Owner.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (productRef_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ProductRef);
      }
      if (HasDescription) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (HasPrevVersionName) {
        output.WriteRawTag(26);
        output.WriteString(PrevVersionName);
      }
      if (HasBaseline) {
        output.WriteRawTag(32);
        output.WriteBool(Baseline);
      }
      if (HasOwner) {
        output.WriteRawTag(42);
        output.WriteString(Owner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (productRef_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ProductRef);
      }
      if (HasDescription) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (HasPrevVersionName) {
        output.WriteRawTag(26);
        output.WriteString(PrevVersionName);
      }
      if (HasBaseline) {
        output.WriteRawTag(32);
        output.WriteBool(Baseline);
      }
      if (HasOwner) {
        output.WriteRawTag(42);
        output.WriteString(Owner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (productRef_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProductRef);
      }
      if (HasDescription) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (HasPrevVersionName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PrevVersionName);
      }
      if (HasBaseline) {
        size += 1 + 1;
      }
      if (HasOwner) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owner);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataProductVersionSpec other) {
      if (other == null) {
        return;
      }
      if (other.productRef_ != null) {
        if (productRef_ == null) {
          ProductRef = new global::K8S.Io.Api.Core.V1.ObjectReference();
        }
        ProductRef.MergeFrom(other.ProductRef);
      }
      if (other.HasDescription) {
        Description = other.Description;
      }
      if (other.HasPrevVersionName) {
        PrevVersionName = other.PrevVersionName;
      }
      if (other.HasBaseline) {
        Baseline = other.Baseline;
      }
      if (other.HasOwner) {
        Owner = other.Owner;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (productRef_ == null) {
              ProductRef = new global::K8S.Io.Api.Core.V1.ObjectReference();
            }
            input.ReadMessage(ProductRef);
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            PrevVersionName = input.ReadString();
            break;
          }
          case 32: {
            Baseline = input.ReadBool();
            break;
          }
          case 42: {
            Owner = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (productRef_ == null) {
              ProductRef = new global::K8S.Io.Api.Core.V1.ObjectReference();
            }
            input.ReadMessage(ProductRef);
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            PrevVersionName = input.ReadString();
            break;
          }
          case 32: {
            Baseline = input.ReadBool();
            break;
          }
          case 42: {
            Owner = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// DataProductVersionStatus defines the observed state of DataProductVersion
  /// </summary>
  public sealed partial class DataProductVersionStatus : pb::IMessage<DataProductVersionStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DataProductVersionStatus> _parser = new pb::MessageParser<DataProductVersionStatus>(() => new DataProductVersionStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataProductVersionStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataProductVersionStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataProductVersionStatus(DataProductVersionStatus other) : this() {
      conditions_ = other.conditions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataProductVersionStatus Clone() {
      return new DataProductVersionStatus(this);
    }

    /// <summary>Field number for the "conditions" field.</summary>
    public const int ConditionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataProductVersionCondition> _repeated_conditions_codec
        = pb::FieldCodec.ForMessage(10, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataProductVersionCondition.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataProductVersionCondition> conditions_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataProductVersionCondition>();
    /// <summary>
    /// Represents the latest available observations of a dataset state.
    /// +optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataProductVersionCondition> Conditions {
      get { return conditions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataProductVersionStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataProductVersionStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!conditions_.Equals(other.conditions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= conditions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      conditions_.WriteTo(output, _repeated_conditions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      conditions_.WriteTo(ref output, _repeated_conditions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += conditions_.CalculateSize(_repeated_conditions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataProductVersionStatus other) {
      if (other == null) {
        return;
      }
      conditions_.Add(other.conditions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            conditions_.AddEntriesFrom(input, _repeated_conditions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            conditions_.AddEntriesFrom(ref input, _repeated_conditions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// DataSource represent source of the data in the system. The spec consist of schema
  /// +kubebuilder:object:root=true
  /// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
  /// +kubebuilder:printcolumn:name="Version",type="string",JSONPath=".spec.versionName"
  /// +kubebuilder:printcolumn:name="Type",type="string",JSONPath=".spec.type"
  /// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp"
  /// +kubebuilder:subresource:status
  /// +kubebuilder:resource:path=datasources,singular=datasource,categories={data,modela,all}
  /// </summary>
  public sealed partial class DataSource : pb::IMessage<DataSource>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DataSource> _parser = new pb::MessageParser<DataSource>(() => new DataSource());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataSource> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataSource() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataSource(DataSource other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      spec_ = other.spec_ != null ? other.spec_.Clone() : null;
      status_ = other.status_ != null ? other.status_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataSource Clone() {
      return new DataSource(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "spec" field.</summary>
    public const int SpecFieldNumber = 2;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataSourceSpec spec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataSourceSpec Spec {
      get { return spec_; }
      set {
        spec_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 3;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataSourceStatus status_;
    /// <summary>
    /// +optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataSourceStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataSource);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataSource other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if (!object.Equals(Spec, other.Spec)) return false;
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      if (spec_ != null) hash ^= Spec.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      if (spec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Spec);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataSource other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      if (other.spec_ != null) {
        if (spec_ == null) {
          Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataSourceSpec();
        }
        Spec.MergeFrom(other.Spec);
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataSourceStatus();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataSourceSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataSourceStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataSourceSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataSourceStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// DataSourceCondition describes the state of a datasource at a certain point.
  /// </summary>
  public sealed partial class DataSourceCondition : pb::IMessage<DataSourceCondition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DataSourceCondition> _parser = new pb::MessageParser<DataSourceCondition>(() => new DataSourceCondition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataSourceCondition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataSourceCondition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataSourceCondition(DataSourceCondition other) : this() {
      type_ = other.type_;
      status_ = other.status_;
      lastTransitionTime_ = other.lastTransitionTime_ != null ? other.lastTransitionTime_.Clone() : null;
      reason_ = other.reason_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataSourceCondition Clone() {
      return new DataSourceCondition(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static string TypeDefaultValue = "";

    private string type_;
    /// <summary>
    /// Type of condition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_ ?? TypeDefaultValue; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return type_ != null; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      type_ = null;
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private readonly static string StatusDefaultValue = "";

    private string status_;
    /// <summary>
    /// Status of the condition, one of True, False, Unknown.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Status {
      get { return status_ ?? StatusDefaultValue; }
      set {
        status_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStatus {
      get { return status_ != null; }
    }
    /// <summary>Clears the value of the "status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStatus() {
      status_ = null;
    }

    /// <summary>Field number for the "lastTransitionTime" field.</summary>
    public const int LastTransitionTimeFieldNumber = 4;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time lastTransitionTime_;
    /// <summary>
    /// Last time the condition transitioned from one status to another.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time LastTransitionTime {
      get { return lastTransitionTime_; }
      set {
        lastTransitionTime_ = value;
      }
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 5;
    private readonly static string ReasonDefaultValue = "";

    private string reason_;
    /// <summary>
    /// The reason for the condition's last transition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Reason {
      get { return reason_ ?? ReasonDefaultValue; }
      set {
        reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "reason" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasReason {
      get { return reason_ != null; }
    }
    /// <summary>Clears the value of the "reason" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReason() {
      reason_ = null;
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 6;
    private readonly static string MessageDefaultValue = "";

    private string message_;
    /// <summary>
    /// A human readable message indicating details about the transition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_ ?? MessageDefaultValue; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMessage {
      get { return message_ != null; }
    }
    /// <summary>Clears the value of the "message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessage() {
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataSourceCondition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataSourceCondition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Status != other.Status) return false;
      if (!object.Equals(LastTransitionTime, other.LastTransitionTime)) return false;
      if (Reason != other.Reason) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasStatus) hash ^= Status.GetHashCode();
      if (lastTransitionTime_ != null) hash ^= LastTransitionTime.GetHashCode();
      if (HasReason) hash ^= Reason.GetHashCode();
      if (HasMessage) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasStatus) {
        output.WriteRawTag(18);
        output.WriteString(Status);
      }
      if (lastTransitionTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LastTransitionTime);
      }
      if (HasReason) {
        output.WriteRawTag(42);
        output.WriteString(Reason);
      }
      if (HasMessage) {
        output.WriteRawTag(50);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasStatus) {
        output.WriteRawTag(18);
        output.WriteString(Status);
      }
      if (lastTransitionTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LastTransitionTime);
      }
      if (HasReason) {
        output.WriteRawTag(42);
        output.WriteString(Reason);
      }
      if (HasMessage) {
        output.WriteRawTag(50);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (HasStatus) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Status);
      }
      if (lastTransitionTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastTransitionTime);
      }
      if (HasReason) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
      }
      if (HasMessage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataSourceCondition other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasStatus) {
        Status = other.Status;
      }
      if (other.lastTransitionTime_ != null) {
        if (lastTransitionTime_ == null) {
          LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
        }
        LastTransitionTime.MergeFrom(other.LastTransitionTime);
      }
      if (other.HasReason) {
        Reason = other.Reason;
      }
      if (other.HasMessage) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Status = input.ReadString();
            break;
          }
          case 34: {
            if (lastTransitionTime_ == null) {
              LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(LastTransitionTime);
            break;
          }
          case 42: {
            Reason = input.ReadString();
            break;
          }
          case 50: {
            Message = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Status = input.ReadString();
            break;
          }
          case 34: {
            if (lastTransitionTime_ == null) {
              LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(LastTransitionTime);
            break;
          }
          case 42: {
            Reason = input.ReadString();
            break;
          }
          case 50: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// +kubebuilder:object:root=true
  /// DataSourceList contain a list of DataSource objects
  /// </summary>
  public sealed partial class DataSourceList : pb::IMessage<DataSourceList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DataSourceList> _parser = new pb::MessageParser<DataSourceList>(() => new DataSourceList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataSourceList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataSourceList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataSourceList(DataSourceList other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataSourceList Clone() {
      return new DataSourceList(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataSource> _repeated_items_codec
        = pb::FieldCodec.ForMessage(18, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataSource.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataSource> items_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataSource>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataSource> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataSourceList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataSourceList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(ref output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataSourceList other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DataSourceSpec : pb::IMessage<DataSourceSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DataSourceSpec> _parser = new pb::MessageParser<DataSourceSpec>(() => new DataSourceSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataSourceSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataSourceSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataSourceSpec(DataSourceSpec other) : this() {
      ownerName_ = other.ownerName_;
      versionName_ = other.versionName_;
      description_ = other.description_;
      schema_ = other.schema_ != null ? other.schema_.Clone() : null;
      type_ = other.type_;
      file_ = other.file_ != null ? other.file_.Clone() : null;
      table_ = other.table_ != null ? other.table_.Clone() : null;
      owner_ = other.owner_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataSourceSpec Clone() {
      return new DataSourceSpec(this);
    }

    /// <summary>Field number for the "ownerName" field.</summary>
    public const int OwnerNameFieldNumber = 1;
    private readonly static string OwnerNameDefaultValue = "";

    private string ownerName_;
    /// <summary>
    /// The account name of the owner of this dataset
    /// +kubebuilder:default:="no-one"
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OwnerName {
      get { return ownerName_ ?? OwnerNameDefaultValue; }
      set {
        ownerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "ownerName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOwnerName {
      get { return ownerName_ != null; }
    }
    /// <summary>Clears the value of the "ownerName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOwnerName() {
      ownerName_ = null;
    }

    /// <summary>Field number for the "versionName" field.</summary>
    public const int VersionNameFieldNumber = 2;
    private readonly static string VersionNameDefaultValue = "";

    private string versionName_;
    /// <summary>
    /// The version of the flat file.
    /// +kubebuilder:validation:MaxLength=63
    /// +kubebuilder:default:=""
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VersionName {
      get { return versionName_ ?? VersionNameDefaultValue; }
      set {
        versionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "versionName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasVersionName {
      get { return versionName_ != null; }
    }
    /// <summary>Clears the value of the "versionName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearVersionName() {
      versionName_ = null;
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private readonly static string DescriptionDefaultValue = "";

    private string description_;
    /// <summary>
    /// User provided description of the data source
    /// +kubebuilder:default =""
    /// +kubebuilder:validation:MaxLength=512
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_ ?? DescriptionDefaultValue; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "description" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDescription {
      get { return description_ != null; }
    }
    /// <summary>Clears the value of the "description" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDescription() {
      description_ = null;
    }

    /// <summary>Field number for the "schema" field.</summary>
    public const int SchemaFieldNumber = 4;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Schema schema_;
    /// <summary>
    /// The data source schema
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Schema Schema {
      get { return schema_; }
      set {
        schema_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 5;
    private readonly static string TypeDefaultValue = "";

    private string type_;
    /// <summary>
    /// The data source type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_ ?? TypeDefaultValue; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return type_ != null; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      type_ = null;
    }

    /// <summary>Field number for the "file" field.</summary>
    public const int FileFieldNumber = 6;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FlatFileSpec file_;
    /// <summary>
    /// FlatFile access specification
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FlatFileSpec File {
      get { return file_; }
      set {
        file_ = value;
      }
    }

    /// <summary>Field number for the "table" field.</summary>
    public const int TableFieldNumber = 7;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Table table_;
    /// <summary>
    /// Table access specification if the data source is a table
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Table Table {
      get { return table_; }
      set {
        table_ = value;
      }
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 8;
    private readonly static string OwnerDefaultValue = "";

    private string owner_;
    /// <summary>
    /// The owner account name
    /// +kubebuilder:default:="no-one"
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owner {
      get { return owner_ ?? OwnerDefaultValue; }
      set {
        owner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "owner" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOwner {
      get { return owner_ != null; }
    }
    /// <summary>Clears the value of the "owner" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOwner() {
      owner_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataSourceSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataSourceSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OwnerName != other.OwnerName) return false;
      if (VersionName != other.VersionName) return false;
      if (Description != other.Description) return false;
      if (!object.Equals(Schema, other.Schema)) return false;
      if (Type != other.Type) return false;
      if (!object.Equals(File, other.File)) return false;
      if (!object.Equals(Table, other.Table)) return false;
      if (Owner != other.Owner) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasOwnerName) hash ^= OwnerName.GetHashCode();
      if (HasVersionName) hash ^= VersionName.GetHashCode();
      if (HasDescription) hash ^= Description.GetHashCode();
      if (schema_ != null) hash ^= Schema.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (file_ != null) hash ^= File.GetHashCode();
      if (table_ != null) hash ^= Table.GetHashCode();
      if (HasOwner) hash ^= Owner.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasOwnerName) {
        output.WriteRawTag(10);
        output.WriteString(OwnerName);
      }
      if (HasVersionName) {
        output.WriteRawTag(18);
        output.WriteString(VersionName);
      }
      if (HasDescription) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (schema_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Schema);
      }
      if (HasType) {
        output.WriteRawTag(42);
        output.WriteString(Type);
      }
      if (file_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(File);
      }
      if (table_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Table);
      }
      if (HasOwner) {
        output.WriteRawTag(66);
        output.WriteString(Owner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasOwnerName) {
        output.WriteRawTag(10);
        output.WriteString(OwnerName);
      }
      if (HasVersionName) {
        output.WriteRawTag(18);
        output.WriteString(VersionName);
      }
      if (HasDescription) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (schema_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Schema);
      }
      if (HasType) {
        output.WriteRawTag(42);
        output.WriteString(Type);
      }
      if (file_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(File);
      }
      if (table_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Table);
      }
      if (HasOwner) {
        output.WriteRawTag(66);
        output.WriteString(Owner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasOwnerName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnerName);
      }
      if (HasVersionName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VersionName);
      }
      if (HasDescription) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (schema_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Schema);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (file_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(File);
      }
      if (table_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Table);
      }
      if (HasOwner) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owner);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataSourceSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasOwnerName) {
        OwnerName = other.OwnerName;
      }
      if (other.HasVersionName) {
        VersionName = other.VersionName;
      }
      if (other.HasDescription) {
        Description = other.Description;
      }
      if (other.schema_ != null) {
        if (schema_ == null) {
          Schema = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Schema();
        }
        Schema.MergeFrom(other.Schema);
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.file_ != null) {
        if (file_ == null) {
          File = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FlatFileSpec();
        }
        File.MergeFrom(other.File);
      }
      if (other.table_ != null) {
        if (table_ == null) {
          Table = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Table();
        }
        Table.MergeFrom(other.Table);
      }
      if (other.HasOwner) {
        Owner = other.Owner;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OwnerName = input.ReadString();
            break;
          }
          case 18: {
            VersionName = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            if (schema_ == null) {
              Schema = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Schema();
            }
            input.ReadMessage(Schema);
            break;
          }
          case 42: {
            Type = input.ReadString();
            break;
          }
          case 50: {
            if (file_ == null) {
              File = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FlatFileSpec();
            }
            input.ReadMessage(File);
            break;
          }
          case 58: {
            if (table_ == null) {
              Table = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Table();
            }
            input.ReadMessage(Table);
            break;
          }
          case 66: {
            Owner = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            OwnerName = input.ReadString();
            break;
          }
          case 18: {
            VersionName = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            if (schema_ == null) {
              Schema = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Schema();
            }
            input.ReadMessage(Schema);
            break;
          }
          case 42: {
            Type = input.ReadString();
            break;
          }
          case 50: {
            if (file_ == null) {
              File = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FlatFileSpec();
            }
            input.ReadMessage(File);
            break;
          }
          case 58: {
            if (table_ == null) {
              Table = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Table();
            }
            input.ReadMessage(Table);
            break;
          }
          case 66: {
            Owner = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// FlatFileStatus defines the observed state of FlatFileSpec
  /// </summary>
  public sealed partial class DataSourceStatus : pb::IMessage<DataSourceStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DataSourceStatus> _parser = new pb::MessageParser<DataSourceStatus>(() => new DataSourceStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataSourceStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataSourceStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataSourceStatus(DataSourceStatus other) : this() {
      conditions_ = other.conditions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataSourceStatus Clone() {
      return new DataSourceStatus(this);
    }

    /// <summary>Field number for the "conditions" field.</summary>
    public const int ConditionsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataSourceCondition> _repeated_conditions_codec
        = pb::FieldCodec.ForMessage(18, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataSourceCondition.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataSourceCondition> conditions_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataSourceCondition>();
    /// <summary>
    /// +optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataSourceCondition> Conditions {
      get { return conditions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataSourceStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataSourceStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!conditions_.Equals(other.conditions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= conditions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      conditions_.WriteTo(output, _repeated_conditions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      conditions_.WriteTo(ref output, _repeated_conditions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += conditions_.CalculateSize(_repeated_conditions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataSourceStatus other) {
      if (other == null) {
        return;
      }
      conditions_.Add(other.conditions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            conditions_.AddEntriesFrom(input, _repeated_conditions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            conditions_.AddEntriesFrom(ref input, _repeated_conditions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// +kubebuilder:object:root=true
  /// +kubebuilder:subresource:status
  /// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status"
  /// +kubebuilder:printcolumn:name="Version",type="string",JSONPath=".spec.versionName"
  /// +kubebuilder:printcolumn:name="Location Origin",type="string",JSONPath=".spec.datasourceName"
  /// +kubebuilder:printcolumn:name="Status",type="string",JSONPath=".status.phase"
  /// +kubebuilder:printcolumn:name="Rows",type="integer",JSONPath=".status.statistics.rows"
  /// +kubebuilder:printcolumn:name="Columns",type="integer",JSONPath=".status.statistics.cols"
  /// +kubebuilder:printcolumn:name="Size",type="integer",JSONPath=".status.statistics.fileSize"
  /// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
  /// +kubebuilder:resource:path=datasets,shortName=ds,singular=dataset,categories={data,modela,all}
  /// Dataset represents a single batch of data
  /// </summary>
  public sealed partial class Dataset : pb::IMessage<Dataset>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Dataset> _parser = new pb::MessageParser<Dataset>(() => new Dataset());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Dataset> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dataset() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dataset(Dataset other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      spec_ = other.spec_ != null ? other.spec_.Clone() : null;
      status_ = other.status_ != null ? other.status_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dataset Clone() {
      return new Dataset(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "spec" field.</summary>
    public const int SpecFieldNumber = 2;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DatasetSpec spec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DatasetSpec Spec {
      get { return spec_; }
      set {
        spec_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 3;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DatasetStatus status_;
    /// <summary>
    /// +optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DatasetStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Dataset);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Dataset other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if (!object.Equals(Spec, other.Spec)) return false;
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      if (spec_ != null) hash ^= Spec.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      if (spec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Spec);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Dataset other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      if (other.spec_ != null) {
        if (spec_ == null) {
          Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DatasetSpec();
        }
        Spec.MergeFrom(other.Spec);
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DatasetStatus();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DatasetSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DatasetStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DatasetSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DatasetStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// DatasetCondition describes the state of a dataset at a certain point.
  /// </summary>
  public sealed partial class DatasetCondition : pb::IMessage<DatasetCondition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DatasetCondition> _parser = new pb::MessageParser<DatasetCondition>(() => new DatasetCondition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetCondition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetCondition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetCondition(DatasetCondition other) : this() {
      type_ = other.type_;
      status_ = other.status_;
      lastTransitionTime_ = other.lastTransitionTime_ != null ? other.lastTransitionTime_.Clone() : null;
      reason_ = other.reason_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetCondition Clone() {
      return new DatasetCondition(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static string TypeDefaultValue = "";

    private string type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_ ?? TypeDefaultValue; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return type_ != null; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      type_ = null;
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private readonly static string StatusDefaultValue = "";

    private string status_;
    /// <summary>
    /// Status of the condition, one of True, False, AutoScaler.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Status {
      get { return status_ ?? StatusDefaultValue; }
      set {
        status_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStatus {
      get { return status_ != null; }
    }
    /// <summary>Clears the value of the "status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStatus() {
      status_ = null;
    }

    /// <summary>Field number for the "lastTransitionTime" field.</summary>
    public const int LastTransitionTimeFieldNumber = 4;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time lastTransitionTime_;
    /// <summary>
    /// Last time the condition transitioned from one status to another.
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time LastTransitionTime {
      get { return lastTransitionTime_; }
      set {
        lastTransitionTime_ = value;
      }
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 5;
    private readonly static string ReasonDefaultValue = "";

    private string reason_;
    /// <summary>
    /// The reason for the condition's last transition.
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Reason {
      get { return reason_ ?? ReasonDefaultValue; }
      set {
        reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "reason" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasReason {
      get { return reason_ != null; }
    }
    /// <summary>Clears the value of the "reason" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReason() {
      reason_ = null;
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 6;
    private readonly static string MessageDefaultValue = "";

    private string message_;
    /// <summary>
    /// A human readable message indicating details about the transition.
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_ ?? MessageDefaultValue; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMessage {
      get { return message_ != null; }
    }
    /// <summary>Clears the value of the "message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessage() {
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetCondition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetCondition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Status != other.Status) return false;
      if (!object.Equals(LastTransitionTime, other.LastTransitionTime)) return false;
      if (Reason != other.Reason) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasStatus) hash ^= Status.GetHashCode();
      if (lastTransitionTime_ != null) hash ^= LastTransitionTime.GetHashCode();
      if (HasReason) hash ^= Reason.GetHashCode();
      if (HasMessage) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasStatus) {
        output.WriteRawTag(18);
        output.WriteString(Status);
      }
      if (lastTransitionTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LastTransitionTime);
      }
      if (HasReason) {
        output.WriteRawTag(42);
        output.WriteString(Reason);
      }
      if (HasMessage) {
        output.WriteRawTag(50);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasStatus) {
        output.WriteRawTag(18);
        output.WriteString(Status);
      }
      if (lastTransitionTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LastTransitionTime);
      }
      if (HasReason) {
        output.WriteRawTag(42);
        output.WriteString(Reason);
      }
      if (HasMessage) {
        output.WriteRawTag(50);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (HasStatus) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Status);
      }
      if (lastTransitionTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastTransitionTime);
      }
      if (HasReason) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
      }
      if (HasMessage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetCondition other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasStatus) {
        Status = other.Status;
      }
      if (other.lastTransitionTime_ != null) {
        if (lastTransitionTime_ == null) {
          LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
        }
        LastTransitionTime.MergeFrom(other.LastTransitionTime);
      }
      if (other.HasReason) {
        Reason = other.Reason;
      }
      if (other.HasMessage) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Status = input.ReadString();
            break;
          }
          case 34: {
            if (lastTransitionTime_ == null) {
              LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(LastTransitionTime);
            break;
          }
          case 42: {
            Reason = input.ReadString();
            break;
          }
          case 50: {
            Message = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Status = input.ReadString();
            break;
          }
          case 34: {
            if (lastTransitionTime_ == null) {
              LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(LastTransitionTime);
            break;
          }
          case 42: {
            Reason = input.ReadString();
            break;
          }
          case 50: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// +kubebuilder:object:root=true
  /// DatasetList contains a list of Datasets
  /// </summary>
  public sealed partial class DatasetList : pb::IMessage<DatasetList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DatasetList> _parser = new pb::MessageParser<DatasetList>(() => new DatasetList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetList(DatasetList other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetList Clone() {
      return new DatasetList(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Dataset> _repeated_items_codec
        = pb::FieldCodec.ForMessage(18, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Dataset.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Dataset> items_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Dataset>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Dataset> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(ref output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetList other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// DatasetSpec defines the desired state of a dataset
  /// </summary>
  public sealed partial class DatasetSpec : pb::IMessage<DatasetSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DatasetSpec> _parser = new pb::MessageParser<DatasetSpec>(() => new DatasetSpec());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetSpec(DatasetSpec other) : this() {
      _hasBits0 = other._hasBits0;
      owner_ = other.owner_;
      versionName_ = other.versionName_;
      datasourceName_ = other.datasourceName_;
      description_ = other.description_;
      report_ = other.report_;
      validate_ = other.validate_;
      labeled_ = other.labeled_;
      origin_ = other.origin_ != null ? other.origin_.Clone() : null;
      location_ = other.location_ != null ? other.location_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetSpec Clone() {
      return new DatasetSpec(this);
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 1;
    private readonly static string OwnerDefaultValue = "";

    private string owner_;
    /// <summary>
    /// The account name of the owner of this dataset
    /// +kubebuilder:default ="no-one"
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owner {
      get { return owner_ ?? OwnerDefaultValue; }
      set {
        owner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "owner" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOwner {
      get { return owner_ != null; }
    }
    /// <summary>Clears the value of the "owner" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOwner() {
      owner_ = null;
    }

    /// <summary>Field number for the "versionName" field.</summary>
    public const int VersionNameFieldNumber = 2;
    private readonly static string VersionNameDefaultValue = "";

    private string versionName_;
    /// <summary>
    /// VersionName is the data product version of the dataset
    /// +kubebuilder:validation:MaxLength=63
    /// required.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VersionName {
      get { return versionName_ ?? VersionNameDefaultValue; }
      set {
        versionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "versionName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasVersionName {
      get { return versionName_ != null; }
    }
    /// <summary>Clears the value of the "versionName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearVersionName() {
      versionName_ = null;
    }

    /// <summary>Field number for the "datasourceName" field.</summary>
    public const int DatasourceNameFieldNumber = 3;
    private readonly static string DatasourceNameDefaultValue = "";

    private string datasourceName_;
    /// <summary>
    /// DataSourceName is the name of the data source which created this dataset. For example flat file
    /// +kubebuilder:validation:Required
    /// +kubebuilder:validation:MaxLength=63
    /// +kubebuilder:validation:MinLength=1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DatasourceName {
      get { return datasourceName_ ?? DatasourceNameDefaultValue; }
      set {
        datasourceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "datasourceName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDatasourceName {
      get { return datasourceName_ != null; }
    }
    /// <summary>Clears the value of the "datasourceName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDatasourceName() {
      datasourceName_ = null;
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 4;
    private readonly static string DescriptionDefaultValue = "";

    private string description_;
    /// <summary>
    /// User provided description
    /// +kubebuilder:validation:MaxLength=512
    /// +kubebuilder:default =""
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_ ?? DescriptionDefaultValue; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "description" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDescription {
      get { return description_ != null; }
    }
    /// <summary>Clears the value of the "description" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDescription() {
      description_ = null;
    }

    /// <summary>Field number for the "report" field.</summary>
    public const int ReportFieldNumber = 7;
    private readonly static bool ReportDefaultValue = false;

    private bool report_;
    /// <summary>
    /// If true, a dataset report should be generated for this dataset.
    /// +kubebuilder:default:=true
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Report {
      get { if ((_hasBits0 & 1) != 0) { return report_; } else { return ReportDefaultValue; } }
      set {
        _hasBits0 |= 1;
        report_ = value;
      }
    }
    /// <summary>Gets whether the "report" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasReport {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "report" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReport() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "validate" field.</summary>
    public const int ValidateFieldNumber = 8;
    private readonly static bool ValidateDefaultValue = false;

    private bool validate_;
    /// <summary>
    /// If true, we should validate the dataset
    /// +kubebuilder:default:=true
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Validate {
      get { if ((_hasBits0 & 2) != 0) { return validate_; } else { return ValidateDefaultValue; } }
      set {
        _hasBits0 |= 2;
        validate_ = value;
      }
    }
    /// <summary>Gets whether the "validate" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasValidate {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "validate" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearValidate() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "labeled" field.</summary>
    public const int LabeledFieldNumber = 10;
    private readonly static bool LabeledDefaultValue = false;

    private bool labeled_;
    /// <summary>
    /// Labeled indicates if this dataset is labeled or not.
    /// +kubebuilder:default:=true
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Labeled {
      get { if ((_hasBits0 & 4) != 0) { return labeled_; } else { return LabeledDefaultValue; } }
      set {
        _hasBits0 |= 4;
        labeled_ = value;
      }
    }
    /// <summary>Gets whether the "labeled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLabeled {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "labeled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLabeled() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "origin" field.</summary>
    public const int OriginFieldNumber = 12;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataLocation origin_;
    /// <summary>
    /// Define the data location. The operator will copy the data from this location into the live location.
    /// The datafiles are initially uploaded to this location.
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataLocation Origin {
      get { return origin_; }
      set {
        origin_ = value;
      }
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 13;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataLocation location_;
    /// <summary>
    /// Folder of the actual data resides.
    /// +required.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataLocation Location {
      get { return location_; }
      set {
        location_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Owner != other.Owner) return false;
      if (VersionName != other.VersionName) return false;
      if (DatasourceName != other.DatasourceName) return false;
      if (Description != other.Description) return false;
      if (Report != other.Report) return false;
      if (Validate != other.Validate) return false;
      if (Labeled != other.Labeled) return false;
      if (!object.Equals(Origin, other.Origin)) return false;
      if (!object.Equals(Location, other.Location)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasOwner) hash ^= Owner.GetHashCode();
      if (HasVersionName) hash ^= VersionName.GetHashCode();
      if (HasDatasourceName) hash ^= DatasourceName.GetHashCode();
      if (HasDescription) hash ^= Description.GetHashCode();
      if (HasReport) hash ^= Report.GetHashCode();
      if (HasValidate) hash ^= Validate.GetHashCode();
      if (HasLabeled) hash ^= Labeled.GetHashCode();
      if (origin_ != null) hash ^= Origin.GetHashCode();
      if (location_ != null) hash ^= Location.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasOwner) {
        output.WriteRawTag(10);
        output.WriteString(Owner);
      }
      if (HasVersionName) {
        output.WriteRawTag(18);
        output.WriteString(VersionName);
      }
      if (HasDatasourceName) {
        output.WriteRawTag(26);
        output.WriteString(DatasourceName);
      }
      if (HasDescription) {
        output.WriteRawTag(34);
        output.WriteString(Description);
      }
      if (HasReport) {
        output.WriteRawTag(56);
        output.WriteBool(Report);
      }
      if (HasValidate) {
        output.WriteRawTag(64);
        output.WriteBool(Validate);
      }
      if (HasLabeled) {
        output.WriteRawTag(80);
        output.WriteBool(Labeled);
      }
      if (origin_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Origin);
      }
      if (location_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Location);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasOwner) {
        output.WriteRawTag(10);
        output.WriteString(Owner);
      }
      if (HasVersionName) {
        output.WriteRawTag(18);
        output.WriteString(VersionName);
      }
      if (HasDatasourceName) {
        output.WriteRawTag(26);
        output.WriteString(DatasourceName);
      }
      if (HasDescription) {
        output.WriteRawTag(34);
        output.WriteString(Description);
      }
      if (HasReport) {
        output.WriteRawTag(56);
        output.WriteBool(Report);
      }
      if (HasValidate) {
        output.WriteRawTag(64);
        output.WriteBool(Validate);
      }
      if (HasLabeled) {
        output.WriteRawTag(80);
        output.WriteBool(Labeled);
      }
      if (origin_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Origin);
      }
      if (location_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Location);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasOwner) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owner);
      }
      if (HasVersionName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VersionName);
      }
      if (HasDatasourceName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DatasourceName);
      }
      if (HasDescription) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (HasReport) {
        size += 1 + 1;
      }
      if (HasValidate) {
        size += 1 + 1;
      }
      if (HasLabeled) {
        size += 1 + 1;
      }
      if (origin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Origin);
      }
      if (location_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasOwner) {
        Owner = other.Owner;
      }
      if (other.HasVersionName) {
        VersionName = other.VersionName;
      }
      if (other.HasDatasourceName) {
        DatasourceName = other.DatasourceName;
      }
      if (other.HasDescription) {
        Description = other.Description;
      }
      if (other.HasReport) {
        Report = other.Report;
      }
      if (other.HasValidate) {
        Validate = other.Validate;
      }
      if (other.HasLabeled) {
        Labeled = other.Labeled;
      }
      if (other.origin_ != null) {
        if (origin_ == null) {
          Origin = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataLocation();
        }
        Origin.MergeFrom(other.Origin);
      }
      if (other.location_ != null) {
        if (location_ == null) {
          Location = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataLocation();
        }
        Location.MergeFrom(other.Location);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Owner = input.ReadString();
            break;
          }
          case 18: {
            VersionName = input.ReadString();
            break;
          }
          case 26: {
            DatasourceName = input.ReadString();
            break;
          }
          case 34: {
            Description = input.ReadString();
            break;
          }
          case 56: {
            Report = input.ReadBool();
            break;
          }
          case 64: {
            Validate = input.ReadBool();
            break;
          }
          case 80: {
            Labeled = input.ReadBool();
            break;
          }
          case 98: {
            if (origin_ == null) {
              Origin = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataLocation();
            }
            input.ReadMessage(Origin);
            break;
          }
          case 106: {
            if (location_ == null) {
              Location = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataLocation();
            }
            input.ReadMessage(Location);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Owner = input.ReadString();
            break;
          }
          case 18: {
            VersionName = input.ReadString();
            break;
          }
          case 26: {
            DatasourceName = input.ReadString();
            break;
          }
          case 34: {
            Description = input.ReadString();
            break;
          }
          case 56: {
            Report = input.ReadBool();
            break;
          }
          case 64: {
            Validate = input.ReadBool();
            break;
          }
          case 80: {
            Labeled = input.ReadBool();
            break;
          }
          case 98: {
            if (origin_ == null) {
              Origin = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataLocation();
            }
            input.ReadMessage(Origin);
            break;
          }
          case 106: {
            if (location_ == null) {
              Location = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataLocation();
            }
            input.ReadMessage(Location);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// DatasetStatistics contains statistics about attributes and correltation between attributes
  /// </summary>
  public sealed partial class DatasetStatistics : pb::IMessage<DatasetStatistics>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DatasetStatistics> _parser = new pb::MessageParser<DatasetStatistics>(() => new DatasetStatistics());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetStatistics> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetStatistics() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetStatistics(DatasetStatistics other) : this() {
      _hasBits0 = other._hasBits0;
      columns_ = other.columns_.Clone();
      rows_ = other.rows_;
      cols_ = other.cols_;
      fileSize_ = other.fileSize_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetStatistics Clone() {
      return new DatasetStatistics(this);
    }

    /// <summary>Field number for the "columns" field.</summary>
    public const int ColumnsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.ColumnStatistics> _repeated_columns_codec
        = pb::FieldCodec.ForMessage(10, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.ColumnStatistics.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.ColumnStatistics> columns_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.ColumnStatistics>();
    /// <summary>
    /// Columns contain the collection of statistics for each attribute
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.ColumnStatistics> Columns {
      get { return columns_; }
    }

    /// <summary>Field number for the "rows" field.</summary>
    public const int RowsFieldNumber = 3;
    private readonly static int RowsDefaultValue = 0;

    private int rows_;
    /// <summary>
    /// number of rows in the dataset
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Rows {
      get { if ((_hasBits0 & 1) != 0) { return rows_; } else { return RowsDefaultValue; } }
      set {
        _hasBits0 |= 1;
        rows_ = value;
      }
    }
    /// <summary>Gets whether the "rows" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRows {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "rows" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRows() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "cols" field.</summary>
    public const int ColsFieldNumber = 4;
    private readonly static int ColsDefaultValue = 0;

    private int cols_;
    /// <summary>
    /// number of columns, used mainly to show the columns in the kubectl
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Cols {
      get { if ((_hasBits0 & 2) != 0) { return cols_; } else { return ColsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        cols_ = value;
      }
    }
    /// <summary>Gets whether the "cols" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCols {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "cols" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCols() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "fileSize" field.</summary>
    public const int FileSizeFieldNumber = 5;
    private readonly static int FileSizeDefaultValue = 0;

    private int fileSize_;
    /// <summary>
    /// file size in bytes
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FileSize {
      get { if ((_hasBits0 & 4) != 0) { return fileSize_; } else { return FileSizeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        fileSize_ = value;
      }
    }
    /// <summary>Gets whether the "fileSize" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFileSize {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "fileSize" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFileSize() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetStatistics);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetStatistics other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!columns_.Equals(other.columns_)) return false;
      if (Rows != other.Rows) return false;
      if (Cols != other.Cols) return false;
      if (FileSize != other.FileSize) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= columns_.GetHashCode();
      if (HasRows) hash ^= Rows.GetHashCode();
      if (HasCols) hash ^= Cols.GetHashCode();
      if (HasFileSize) hash ^= FileSize.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      columns_.WriteTo(output, _repeated_columns_codec);
      if (HasRows) {
        output.WriteRawTag(24);
        output.WriteInt32(Rows);
      }
      if (HasCols) {
        output.WriteRawTag(32);
        output.WriteInt32(Cols);
      }
      if (HasFileSize) {
        output.WriteRawTag(40);
        output.WriteInt32(FileSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      columns_.WriteTo(ref output, _repeated_columns_codec);
      if (HasRows) {
        output.WriteRawTag(24);
        output.WriteInt32(Rows);
      }
      if (HasCols) {
        output.WriteRawTag(32);
        output.WriteInt32(Cols);
      }
      if (HasFileSize) {
        output.WriteRawTag(40);
        output.WriteInt32(FileSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += columns_.CalculateSize(_repeated_columns_codec);
      if (HasRows) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rows);
      }
      if (HasCols) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cols);
      }
      if (HasFileSize) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FileSize);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetStatistics other) {
      if (other == null) {
        return;
      }
      columns_.Add(other.columns_);
      if (other.HasRows) {
        Rows = other.Rows;
      }
      if (other.HasCols) {
        Cols = other.Cols;
      }
      if (other.HasFileSize) {
        FileSize = other.FileSize;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            columns_.AddEntriesFrom(input, _repeated_columns_codec);
            break;
          }
          case 24: {
            Rows = input.ReadInt32();
            break;
          }
          case 32: {
            Cols = input.ReadInt32();
            break;
          }
          case 40: {
            FileSize = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            columns_.AddEntriesFrom(ref input, _repeated_columns_codec);
            break;
          }
          case 24: {
            Rows = input.ReadInt32();
            break;
          }
          case 32: {
            Cols = input.ReadInt32();
            break;
          }
          case 40: {
            FileSize = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// DatasetStatus defines the observed state of Dataset
  /// </summary>
  public sealed partial class DatasetStatus : pb::IMessage<DatasetStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DatasetStatus> _parser = new pb::MessageParser<DatasetStatus>(() => new DatasetStatus());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetStatus(DatasetStatus other) : this() {
      _hasBits0 = other._hasBits0;
      statistics_ = other.statistics_ != null ? other.statistics_.Clone() : null;
      phase_ = other.phase_;
      reportName_ = other.reportName_;
      profileUri_ = other.profileUri_;
      imbalanced_ = other.imbalanced_;
      sigs_ = other.sigs_ != null ? other.sigs_.Clone() : null;
      conditions_ = other.conditions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetStatus Clone() {
      return new DatasetStatus(this);
    }

    /// <summary>Field number for the "statistics" field.</summary>
    public const int StatisticsFieldNumber = 1;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DatasetStatistics statistics_;
    /// <summary>
    /// Statistics for the dataset. The statistics contain information about each column.
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DatasetStatistics Statistics {
      get { return statistics_; }
      set {
        statistics_ = value;
      }
    }

    /// <summary>Field number for the "phase" field.</summary>
    public const int PhaseFieldNumber = 2;
    private readonly static string PhaseDefaultValue = "";

    private string phase_;
    /// <summary>
    /// The phase of the dataset processing
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Phase {
      get { return phase_ ?? PhaseDefaultValue; }
      set {
        phase_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "phase" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPhase {
      get { return phase_ != null; }
    }
    /// <summary>Clears the value of the "phase" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPhase() {
      phase_ = null;
    }

    /// <summary>Field number for the "reportName" field.</summary>
    public const int ReportNameFieldNumber = 3;
    private readonly static string ReportNameDefaultValue = "";

    private string reportName_;
    /// <summary>
    /// Reference to the report object that was generated for the dataset
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReportName {
      get { return reportName_ ?? ReportNameDefaultValue; }
      set {
        reportName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "reportName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasReportName {
      get { return reportName_ != null; }
    }
    /// <summary>Clears the value of the "reportName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReportName() {
      reportName_ = null;
    }

    /// <summary>Field number for the "profileUri" field.</summary>
    public const int ProfileUriFieldNumber = 4;
    private readonly static string ProfileUriDefaultValue = "";

    private string profileUri_;
    /// <summary>
    /// A reference to the visualization uri which were produce during processing
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProfileUri {
      get { return profileUri_ ?? ProfileUriDefaultValue; }
      set {
        profileUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "profileUri" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasProfileUri {
      get { return profileUri_ != null; }
    }
    /// <summary>Clears the value of the "profileUri" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearProfileUri() {
      profileUri_ = null;
    }

    /// <summary>Field number for the "imbalanced" field.</summary>
    public const int ImbalancedFieldNumber = 5;
    private readonly static bool ImbalancedDefaultValue = false;

    private bool imbalanced_;
    /// <summary>
    /// Based on the actual data, treat this dataset as imbalanced.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Imbalanced {
      get { if ((_hasBits0 & 1) != 0) { return imbalanced_; } else { return ImbalancedDefaultValue; } }
      set {
        _hasBits0 |= 1;
        imbalanced_ = value;
      }
    }
    /// <summary>Gets whether the "imbalanced" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasImbalanced {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "imbalanced" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearImbalanced() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "sigs" field.</summary>
    public const int SigsFieldNumber = 6;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Signatures sigs_;
    /// <summary>
    /// Sha256 sig of the files
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Signatures Sigs {
      get { return sigs_; }
      set {
        sigs_ = value;
      }
    }

    /// <summary>Field number for the "conditions" field.</summary>
    public const int ConditionsFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DatasetCondition> _repeated_conditions_codec
        = pb::FieldCodec.ForMessage(58, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DatasetCondition.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DatasetCondition> conditions_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DatasetCondition>();
    /// <summary>
    /// Represents the latest available observations of a dataset state.
    /// +optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DatasetCondition> Conditions {
      get { return conditions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Statistics, other.Statistics)) return false;
      if (Phase != other.Phase) return false;
      if (ReportName != other.ReportName) return false;
      if (ProfileUri != other.ProfileUri) return false;
      if (Imbalanced != other.Imbalanced) return false;
      if (!object.Equals(Sigs, other.Sigs)) return false;
      if(!conditions_.Equals(other.conditions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (statistics_ != null) hash ^= Statistics.GetHashCode();
      if (HasPhase) hash ^= Phase.GetHashCode();
      if (HasReportName) hash ^= ReportName.GetHashCode();
      if (HasProfileUri) hash ^= ProfileUri.GetHashCode();
      if (HasImbalanced) hash ^= Imbalanced.GetHashCode();
      if (sigs_ != null) hash ^= Sigs.GetHashCode();
      hash ^= conditions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (statistics_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Statistics);
      }
      if (HasPhase) {
        output.WriteRawTag(18);
        output.WriteString(Phase);
      }
      if (HasReportName) {
        output.WriteRawTag(26);
        output.WriteString(ReportName);
      }
      if (HasProfileUri) {
        output.WriteRawTag(34);
        output.WriteString(ProfileUri);
      }
      if (HasImbalanced) {
        output.WriteRawTag(40);
        output.WriteBool(Imbalanced);
      }
      if (sigs_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Sigs);
      }
      conditions_.WriteTo(output, _repeated_conditions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (statistics_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Statistics);
      }
      if (HasPhase) {
        output.WriteRawTag(18);
        output.WriteString(Phase);
      }
      if (HasReportName) {
        output.WriteRawTag(26);
        output.WriteString(ReportName);
      }
      if (HasProfileUri) {
        output.WriteRawTag(34);
        output.WriteString(ProfileUri);
      }
      if (HasImbalanced) {
        output.WriteRawTag(40);
        output.WriteBool(Imbalanced);
      }
      if (sigs_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Sigs);
      }
      conditions_.WriteTo(ref output, _repeated_conditions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (statistics_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Statistics);
      }
      if (HasPhase) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Phase);
      }
      if (HasReportName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReportName);
      }
      if (HasProfileUri) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProfileUri);
      }
      if (HasImbalanced) {
        size += 1 + 1;
      }
      if (sigs_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Sigs);
      }
      size += conditions_.CalculateSize(_repeated_conditions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetStatus other) {
      if (other == null) {
        return;
      }
      if (other.statistics_ != null) {
        if (statistics_ == null) {
          Statistics = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DatasetStatistics();
        }
        Statistics.MergeFrom(other.Statistics);
      }
      if (other.HasPhase) {
        Phase = other.Phase;
      }
      if (other.HasReportName) {
        ReportName = other.ReportName;
      }
      if (other.HasProfileUri) {
        ProfileUri = other.ProfileUri;
      }
      if (other.HasImbalanced) {
        Imbalanced = other.Imbalanced;
      }
      if (other.sigs_ != null) {
        if (sigs_ == null) {
          Sigs = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Signatures();
        }
        Sigs.MergeFrom(other.Sigs);
      }
      conditions_.Add(other.conditions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (statistics_ == null) {
              Statistics = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DatasetStatistics();
            }
            input.ReadMessage(Statistics);
            break;
          }
          case 18: {
            Phase = input.ReadString();
            break;
          }
          case 26: {
            ReportName = input.ReadString();
            break;
          }
          case 34: {
            ProfileUri = input.ReadString();
            break;
          }
          case 40: {
            Imbalanced = input.ReadBool();
            break;
          }
          case 50: {
            if (sigs_ == null) {
              Sigs = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Signatures();
            }
            input.ReadMessage(Sigs);
            break;
          }
          case 58: {
            conditions_.AddEntriesFrom(input, _repeated_conditions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (statistics_ == null) {
              Statistics = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DatasetStatistics();
            }
            input.ReadMessage(Statistics);
            break;
          }
          case 18: {
            Phase = input.ReadString();
            break;
          }
          case 26: {
            ReportName = input.ReadString();
            break;
          }
          case 34: {
            ProfileUri = input.ReadString();
            break;
          }
          case 40: {
            Imbalanced = input.ReadBool();
            break;
          }
          case 50: {
            if (sigs_ == null) {
              Sigs = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Signatures();
            }
            input.ReadMessage(Sigs);
            break;
          }
          case 58: {
            conditions_.AddEntriesFrom(ref input, _repeated_conditions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// DatasetTemplate is  used to generate new datasets
  /// </summary>
  public sealed partial class DatasetTemplate : pb::IMessage<DatasetTemplate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DatasetTemplate> _parser = new pb::MessageParser<DatasetTemplate>(() => new DatasetTemplate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetTemplate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetTemplate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetTemplate(DatasetTemplate other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      spec_ = other.spec_ != null ? other.spec_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetTemplate Clone() {
      return new DatasetTemplate(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta metadata_;
    /// <summary>
    /// Standard object's metadata.
    /// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "spec" field.</summary>
    public const int SpecFieldNumber = 2;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DatasetSpec spec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DatasetSpec Spec {
      get { return spec_; }
      set {
        spec_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetTemplate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetTemplate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if (!object.Equals(Spec, other.Spec)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      if (spec_ != null) hash ^= Spec.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      if (spec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Spec);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetTemplate other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      if (other.spec_ != null) {
        if (spec_ == null) {
          Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DatasetSpec();
        }
        Spec.MergeFrom(other.Spec);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DatasetSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DatasetSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Entity : pb::IMessage<Entity>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Entity> _parser = new pb::MessageParser<Entity>(() => new Entity());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Entity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Entity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Entity(Entity other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      spec_ = other.spec_ != null ? other.spec_.Clone() : null;
      status_ = other.status_ != null ? other.status_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Entity Clone() {
      return new Entity(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "spec" field.</summary>
    public const int SpecFieldNumber = 2;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.EntitySpec spec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.EntitySpec Spec {
      get { return spec_; }
      set {
        spec_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 3;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.EntityStatus status_;
    /// <summary>
    /// +optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.EntityStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Entity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Entity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if (!object.Equals(Spec, other.Spec)) return false;
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      if (spec_ != null) hash ^= Spec.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      if (spec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Spec);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Entity other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      if (other.spec_ != null) {
        if (spec_ == null) {
          Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.EntitySpec();
        }
        Spec.MergeFrom(other.Spec);
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.EntityStatus();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.EntitySpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.EntityStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.EntitySpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.EntityStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// EntityCondition describes the state of a deployment at a certain point.
  /// </summary>
  public sealed partial class EntityCondition : pb::IMessage<EntityCondition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EntityCondition> _parser = new pb::MessageParser<EntityCondition>(() => new EntityCondition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EntityCondition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityCondition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityCondition(EntityCondition other) : this() {
      type_ = other.type_;
      status_ = other.status_;
      lastTransitionTime_ = other.lastTransitionTime_ != null ? other.lastTransitionTime_.Clone() : null;
      reason_ = other.reason_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityCondition Clone() {
      return new EntityCondition(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static string TypeDefaultValue = "";

    private string type_;
    /// <summary>
    /// Type of account condition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_ ?? TypeDefaultValue; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return type_ != null; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      type_ = null;
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private readonly static string StatusDefaultValue = "";

    private string status_;
    /// <summary>
    /// Status of the condition, one of True, False, Unknown.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Status {
      get { return status_ ?? StatusDefaultValue; }
      set {
        status_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStatus {
      get { return status_ != null; }
    }
    /// <summary>Clears the value of the "status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStatus() {
      status_ = null;
    }

    /// <summary>Field number for the "lastTransitionTime" field.</summary>
    public const int LastTransitionTimeFieldNumber = 7;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time lastTransitionTime_;
    /// <summary>
    /// Last time the condition transitioned from one status to another.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time LastTransitionTime {
      get { return lastTransitionTime_; }
      set {
        lastTransitionTime_ = value;
      }
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 4;
    private readonly static string ReasonDefaultValue = "";

    private string reason_;
    /// <summary>
    /// The reason for the condition's last transition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Reason {
      get { return reason_ ?? ReasonDefaultValue; }
      set {
        reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "reason" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasReason {
      get { return reason_ != null; }
    }
    /// <summary>Clears the value of the "reason" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReason() {
      reason_ = null;
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 5;
    private readonly static string MessageDefaultValue = "";

    private string message_;
    /// <summary>
    /// A human readable message indicating details about the transition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_ ?? MessageDefaultValue; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMessage {
      get { return message_ != null; }
    }
    /// <summary>Clears the value of the "message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessage() {
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EntityCondition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EntityCondition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Status != other.Status) return false;
      if (!object.Equals(LastTransitionTime, other.LastTransitionTime)) return false;
      if (Reason != other.Reason) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasStatus) hash ^= Status.GetHashCode();
      if (lastTransitionTime_ != null) hash ^= LastTransitionTime.GetHashCode();
      if (HasReason) hash ^= Reason.GetHashCode();
      if (HasMessage) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasStatus) {
        output.WriteRawTag(18);
        output.WriteString(Status);
      }
      if (HasReason) {
        output.WriteRawTag(34);
        output.WriteString(Reason);
      }
      if (HasMessage) {
        output.WriteRawTag(42);
        output.WriteString(Message);
      }
      if (lastTransitionTime_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(LastTransitionTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasStatus) {
        output.WriteRawTag(18);
        output.WriteString(Status);
      }
      if (HasReason) {
        output.WriteRawTag(34);
        output.WriteString(Reason);
      }
      if (HasMessage) {
        output.WriteRawTag(42);
        output.WriteString(Message);
      }
      if (lastTransitionTime_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(LastTransitionTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (HasStatus) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Status);
      }
      if (lastTransitionTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastTransitionTime);
      }
      if (HasReason) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
      }
      if (HasMessage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EntityCondition other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasStatus) {
        Status = other.Status;
      }
      if (other.lastTransitionTime_ != null) {
        if (lastTransitionTime_ == null) {
          LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
        }
        LastTransitionTime.MergeFrom(other.LastTransitionTime);
      }
      if (other.HasReason) {
        Reason = other.Reason;
      }
      if (other.HasMessage) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Status = input.ReadString();
            break;
          }
          case 34: {
            Reason = input.ReadString();
            break;
          }
          case 42: {
            Message = input.ReadString();
            break;
          }
          case 58: {
            if (lastTransitionTime_ == null) {
              LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(LastTransitionTime);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Status = input.ReadString();
            break;
          }
          case 34: {
            Reason = input.ReadString();
            break;
          }
          case 42: {
            Message = input.ReadString();
            break;
          }
          case 58: {
            if (lastTransitionTime_ == null) {
              LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(LastTransitionTime);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// +kubebuilder:object:root=true
  /// EntityList contains a list of Entity
  /// </summary>
  public sealed partial class EntityList : pb::IMessage<EntityList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EntityList> _parser = new pb::MessageParser<EntityList>(() => new EntityList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EntityList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityList(EntityList other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityList Clone() {
      return new EntityList(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Entity> _repeated_items_codec
        = pb::FieldCodec.ForMessage(18, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Entity.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Entity> items_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Entity>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Entity> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EntityList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EntityList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(ref output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EntityList other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// EntitySpec contain the desired state of a Entity.
  /// </summary>
  public sealed partial class EntitySpec : pb::IMessage<EntitySpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EntitySpec> _parser = new pb::MessageParser<EntitySpec>(() => new EntitySpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EntitySpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntitySpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntitySpec(EntitySpec other) : this() {
      versionName_ = other.versionName_;
      description_ = other.description_;
      keys_ = other.keys_.Clone();
      owner_ = other.owner_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntitySpec Clone() {
      return new EntitySpec(this);
    }

    /// <summary>Field number for the "versionName" field.</summary>
    public const int VersionNameFieldNumber = 1;
    private readonly static string VersionNameDefaultValue = "";

    private string versionName_;
    /// <summary>
    /// The product version of the entity
    /// +kubebuilder:default =""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VersionName {
      get { return versionName_ ?? VersionNameDefaultValue; }
      set {
        versionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "versionName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasVersionName {
      get { return versionName_ != null; }
    }
    /// <summary>Clears the value of the "versionName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearVersionName() {
      versionName_ = null;
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private readonly static string DescriptionDefaultValue = "";

    private string description_;
    /// <summary>
    /// Description of the entity
    /// +kubebuilder:default =""
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:validation:MaxLength=512
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_ ?? DescriptionDefaultValue; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "description" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDescription {
      get { return description_ != null; }
    }
    /// <summary>Clears the value of the "description" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDescription() {
      description_ = null;
    }

    /// <summary>Field number for the "keys" field.</summary>
    public const int KeysFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_keys_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> keys_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Keys are the features that create a unique key to the entity.
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Keys {
      get { return keys_; }
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 4;
    private readonly static string OwnerDefaultValue = "";

    private string owner_;
    /// <summary>
    /// Owner of this Entity
    /// +kubebuilder:default:="no-one"
    /// +kubebuilder:validation:Pattern="[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*"
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owner {
      get { return owner_ ?? OwnerDefaultValue; }
      set {
        owner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "owner" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOwner {
      get { return owner_ != null; }
    }
    /// <summary>Clears the value of the "owner" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOwner() {
      owner_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EntitySpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EntitySpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (VersionName != other.VersionName) return false;
      if (Description != other.Description) return false;
      if(!keys_.Equals(other.keys_)) return false;
      if (Owner != other.Owner) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasVersionName) hash ^= VersionName.GetHashCode();
      if (HasDescription) hash ^= Description.GetHashCode();
      hash ^= keys_.GetHashCode();
      if (HasOwner) hash ^= Owner.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasVersionName) {
        output.WriteRawTag(10);
        output.WriteString(VersionName);
      }
      if (HasDescription) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      keys_.WriteTo(output, _repeated_keys_codec);
      if (HasOwner) {
        output.WriteRawTag(34);
        output.WriteString(Owner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasVersionName) {
        output.WriteRawTag(10);
        output.WriteString(VersionName);
      }
      if (HasDescription) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      keys_.WriteTo(ref output, _repeated_keys_codec);
      if (HasOwner) {
        output.WriteRawTag(34);
        output.WriteString(Owner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasVersionName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VersionName);
      }
      if (HasDescription) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      size += keys_.CalculateSize(_repeated_keys_codec);
      if (HasOwner) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owner);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EntitySpec other) {
      if (other == null) {
        return;
      }
      if (other.HasVersionName) {
        VersionName = other.VersionName;
      }
      if (other.HasDescription) {
        Description = other.Description;
      }
      keys_.Add(other.keys_);
      if (other.HasOwner) {
        Owner = other.Owner;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            VersionName = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            keys_.AddEntriesFrom(input, _repeated_keys_codec);
            break;
          }
          case 34: {
            Owner = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            VersionName = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            keys_.AddEntriesFrom(ref input, _repeated_keys_codec);
            break;
          }
          case 34: {
            Owner = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// EntityStatus defines the observed state of Entity
  /// </summary>
  public sealed partial class EntityStatus : pb::IMessage<EntityStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EntityStatus> _parser = new pb::MessageParser<EntityStatus>(() => new EntityStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EntityStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityStatus(EntityStatus other) : this() {
      conditions_ = other.conditions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityStatus Clone() {
      return new EntityStatus(this);
    }

    /// <summary>Field number for the "conditions" field.</summary>
    public const int ConditionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.EntityCondition> _repeated_conditions_codec
        = pb::FieldCodec.ForMessage(10, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.EntityCondition.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.EntityCondition> conditions_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.EntityCondition>();
    /// <summary>
    /// +optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.EntityCondition> Conditions {
      get { return conditions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EntityStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EntityStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!conditions_.Equals(other.conditions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= conditions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      conditions_.WriteTo(output, _repeated_conditions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      conditions_.WriteTo(ref output, _repeated_conditions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += conditions_.CalculateSize(_repeated_conditions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EntityStatus other) {
      if (other == null) {
        return;
      }
      conditions_.Add(other.conditions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            conditions_.AddEntriesFrom(input, _repeated_conditions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            conditions_.AddEntriesFrom(ref input, _repeated_conditions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Feature represent a single feature in the feature store.
  /// +kubebuilder:object:root=true
  /// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
  /// +kubebuilder:printcolumn:name="Version",type="string",JSONPath=".spec.versionName"
  /// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
  /// +kubebuilder:resource:path=features,singular=feature,categories={data,modela}
  /// +kubebuilder:subresource:status
  /// </summary>
  public sealed partial class Feature : pb::IMessage<Feature>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Feature> _parser = new pb::MessageParser<Feature>(() => new Feature());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Feature> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Feature() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Feature(Feature other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      spec_ = other.spec_ != null ? other.spec_.Clone() : null;
      status_ = other.status_ != null ? other.status_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Feature Clone() {
      return new Feature(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "spec" field.</summary>
    public const int SpecFieldNumber = 2;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeatureSpec spec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeatureSpec Spec {
      get { return spec_; }
      set {
        spec_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 3;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeatureStatus status_;
    /// <summary>
    /// +optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeatureStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Feature);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Feature other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if (!object.Equals(Spec, other.Spec)) return false;
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      if (spec_ != null) hash ^= Spec.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      if (spec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Spec);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Feature other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      if (other.spec_ != null) {
        if (spec_ == null) {
          Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeatureSpec();
        }
        Spec.MergeFrom(other.Spec);
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeatureStatus();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeatureSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeatureStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeatureSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeatureStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class FeatureAggrSpec : pb::IMessage<FeatureAggrSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FeatureAggrSpec> _parser = new pb::MessageParser<FeatureAggrSpec>(() => new FeatureAggrSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FeatureAggrSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeatureAggrSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeatureAggrSpec(FeatureAggrSpec other) : this() {
      column_ = other.column_;
      functions_ = other.functions_.Clone();
      windows_ = other.windows_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeatureAggrSpec Clone() {
      return new FeatureAggrSpec(this);
    }

    /// <summary>Field number for the "column" field.</summary>
    public const int ColumnFieldNumber = 1;
    private readonly static string ColumnDefaultValue = "";

    private string column_;
    /// <summary>
    /// The column
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Column {
      get { return column_ ?? ColumnDefaultValue; }
      set {
        column_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "column" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasColumn {
      get { return column_ != null; }
    }
    /// <summary>Clears the value of the "column" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearColumn() {
      column_ = null;
    }

    /// <summary>Field number for the "functions" field.</summary>
    public const int FunctionsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_functions_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> functions_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The aggregation function
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Functions {
      get { return functions_; }
    }

    /// <summary>Field number for the "windows" field.</summary>
    public const int WindowsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_windows_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> windows_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// List of windows functions
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Windows {
      get { return windows_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FeatureAggrSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FeatureAggrSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Column != other.Column) return false;
      if(!functions_.Equals(other.functions_)) return false;
      if(!windows_.Equals(other.windows_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasColumn) hash ^= Column.GetHashCode();
      hash ^= functions_.GetHashCode();
      hash ^= windows_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasColumn) {
        output.WriteRawTag(10);
        output.WriteString(Column);
      }
      functions_.WriteTo(output, _repeated_functions_codec);
      windows_.WriteTo(output, _repeated_windows_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasColumn) {
        output.WriteRawTag(10);
        output.WriteString(Column);
      }
      functions_.WriteTo(ref output, _repeated_functions_codec);
      windows_.WriteTo(ref output, _repeated_windows_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasColumn) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Column);
      }
      size += functions_.CalculateSize(_repeated_functions_codec);
      size += windows_.CalculateSize(_repeated_windows_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FeatureAggrSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasColumn) {
        Column = other.Column;
      }
      functions_.Add(other.functions_);
      windows_.Add(other.windows_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Column = input.ReadString();
            break;
          }
          case 18: {
            functions_.AddEntriesFrom(input, _repeated_functions_codec);
            break;
          }
          case 26: {
            windows_.AddEntriesFrom(input, _repeated_windows_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Column = input.ReadString();
            break;
          }
          case 18: {
            functions_.AddEntriesFrom(ref input, _repeated_functions_codec);
            break;
          }
          case 26: {
            windows_.AddEntriesFrom(ref input, _repeated_windows_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// FeatureCondition describes the state of a deployment at a certain point.
  /// </summary>
  public sealed partial class FeatureCondition : pb::IMessage<FeatureCondition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FeatureCondition> _parser = new pb::MessageParser<FeatureCondition>(() => new FeatureCondition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FeatureCondition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeatureCondition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeatureCondition(FeatureCondition other) : this() {
      type_ = other.type_;
      status_ = other.status_;
      lastTransitionTime_ = other.lastTransitionTime_ != null ? other.lastTransitionTime_.Clone() : null;
      reason_ = other.reason_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeatureCondition Clone() {
      return new FeatureCondition(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static string TypeDefaultValue = "";

    private string type_;
    /// <summary>
    /// Type of account condition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_ ?? TypeDefaultValue; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return type_ != null; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      type_ = null;
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private readonly static string StatusDefaultValue = "";

    private string status_;
    /// <summary>
    /// Status of the condition, one of True, False, AutoScaler.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Status {
      get { return status_ ?? StatusDefaultValue; }
      set {
        status_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStatus {
      get { return status_ != null; }
    }
    /// <summary>Clears the value of the "status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStatus() {
      status_ = null;
    }

    /// <summary>Field number for the "lastTransitionTime" field.</summary>
    public const int LastTransitionTimeFieldNumber = 7;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time lastTransitionTime_;
    /// <summary>
    /// Last time the condition transitioned from one status to another.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time LastTransitionTime {
      get { return lastTransitionTime_; }
      set {
        lastTransitionTime_ = value;
      }
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 4;
    private readonly static string ReasonDefaultValue = "";

    private string reason_;
    /// <summary>
    /// The reason for the condition's last transition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Reason {
      get { return reason_ ?? ReasonDefaultValue; }
      set {
        reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "reason" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasReason {
      get { return reason_ != null; }
    }
    /// <summary>Clears the value of the "reason" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReason() {
      reason_ = null;
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 5;
    private readonly static string MessageDefaultValue = "";

    private string message_;
    /// <summary>
    /// A human readable message indicating details about the transition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_ ?? MessageDefaultValue; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMessage {
      get { return message_ != null; }
    }
    /// <summary>Clears the value of the "message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessage() {
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FeatureCondition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FeatureCondition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Status != other.Status) return false;
      if (!object.Equals(LastTransitionTime, other.LastTransitionTime)) return false;
      if (Reason != other.Reason) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasStatus) hash ^= Status.GetHashCode();
      if (lastTransitionTime_ != null) hash ^= LastTransitionTime.GetHashCode();
      if (HasReason) hash ^= Reason.GetHashCode();
      if (HasMessage) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasStatus) {
        output.WriteRawTag(18);
        output.WriteString(Status);
      }
      if (HasReason) {
        output.WriteRawTag(34);
        output.WriteString(Reason);
      }
      if (HasMessage) {
        output.WriteRawTag(42);
        output.WriteString(Message);
      }
      if (lastTransitionTime_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(LastTransitionTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasStatus) {
        output.WriteRawTag(18);
        output.WriteString(Status);
      }
      if (HasReason) {
        output.WriteRawTag(34);
        output.WriteString(Reason);
      }
      if (HasMessage) {
        output.WriteRawTag(42);
        output.WriteString(Message);
      }
      if (lastTransitionTime_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(LastTransitionTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (HasStatus) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Status);
      }
      if (lastTransitionTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastTransitionTime);
      }
      if (HasReason) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
      }
      if (HasMessage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FeatureCondition other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasStatus) {
        Status = other.Status;
      }
      if (other.lastTransitionTime_ != null) {
        if (lastTransitionTime_ == null) {
          LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
        }
        LastTransitionTime.MergeFrom(other.LastTransitionTime);
      }
      if (other.HasReason) {
        Reason = other.Reason;
      }
      if (other.HasMessage) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Status = input.ReadString();
            break;
          }
          case 34: {
            Reason = input.ReadString();
            break;
          }
          case 42: {
            Message = input.ReadString();
            break;
          }
          case 58: {
            if (lastTransitionTime_ == null) {
              LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(LastTransitionTime);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Status = input.ReadString();
            break;
          }
          case 34: {
            Reason = input.ReadString();
            break;
          }
          case 42: {
            Message = input.ReadString();
            break;
          }
          case 58: {
            if (lastTransitionTime_ == null) {
              LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(LastTransitionTime);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// +kubebuilder:object:root=true
  /// FeatureList contain a list of feature objects
  /// </summary>
  public sealed partial class FeatureList : pb::IMessage<FeatureList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FeatureList> _parser = new pb::MessageParser<FeatureList>(() => new FeatureList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FeatureList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeatureList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeatureList(FeatureList other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeatureList Clone() {
      return new FeatureList(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Feature> _repeated_items_codec
        = pb::FieldCodec.ForMessage(18, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Feature.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Feature> items_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Feature>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Feature> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FeatureList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FeatureList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(ref output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FeatureList other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// FeaturePipeline represent the processing of feature in the store.
  /// +kubebuilder:object:root=true
  /// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
  /// +kubebuilder:printcolumn:name="Version",type="string",JSONPath=".spec.versionName"
  /// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
  /// +kubebuilder:resource:path=featurepipelines,singular=featurepipeline,categories={data,modela}
  /// +kubebuilder:subresource:status
  /// </summary>
  public sealed partial class FeaturePipeline : pb::IMessage<FeaturePipeline>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FeaturePipeline> _parser = new pb::MessageParser<FeaturePipeline>(() => new FeaturePipeline());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FeaturePipeline> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturePipeline() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturePipeline(FeaturePipeline other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      spec_ = other.spec_ != null ? other.spec_.Clone() : null;
      status_ = other.status_ != null ? other.status_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturePipeline Clone() {
      return new FeaturePipeline(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "spec" field.</summary>
    public const int SpecFieldNumber = 2;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturePipelineSpec spec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturePipelineSpec Spec {
      get { return spec_; }
      set {
        spec_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 3;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturePipelineStatus status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturePipelineStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FeaturePipeline);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FeaturePipeline other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if (!object.Equals(Spec, other.Spec)) return false;
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      if (spec_ != null) hash ^= Spec.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      if (spec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Spec);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FeaturePipeline other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      if (other.spec_ != null) {
        if (spec_ == null) {
          Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturePipelineSpec();
        }
        Spec.MergeFrom(other.Spec);
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturePipelineStatus();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturePipelineSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturePipelineStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturePipelineSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturePipelineStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// FeaturePipelineCondition describes the state of a deployment at a certain point.
  /// </summary>
  public sealed partial class FeaturePipelineCondition : pb::IMessage<FeaturePipelineCondition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FeaturePipelineCondition> _parser = new pb::MessageParser<FeaturePipelineCondition>(() => new FeaturePipelineCondition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FeaturePipelineCondition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturePipelineCondition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturePipelineCondition(FeaturePipelineCondition other) : this() {
      type_ = other.type_;
      status_ = other.status_;
      lastTransitionTime_ = other.lastTransitionTime_ != null ? other.lastTransitionTime_.Clone() : null;
      reason_ = other.reason_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturePipelineCondition Clone() {
      return new FeaturePipelineCondition(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static string TypeDefaultValue = "";

    private string type_;
    /// <summary>
    /// Type of account condition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_ ?? TypeDefaultValue; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return type_ != null; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      type_ = null;
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private readonly static string StatusDefaultValue = "";

    private string status_;
    /// <summary>
    /// Status of the condition, one of True, False, AutoScaler.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Status {
      get { return status_ ?? StatusDefaultValue; }
      set {
        status_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStatus {
      get { return status_ != null; }
    }
    /// <summary>Clears the value of the "status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStatus() {
      status_ = null;
    }

    /// <summary>Field number for the "lastTransitionTime" field.</summary>
    public const int LastTransitionTimeFieldNumber = 7;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time lastTransitionTime_;
    /// <summary>
    /// Last time the condition transitioned from one status to another.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time LastTransitionTime {
      get { return lastTransitionTime_; }
      set {
        lastTransitionTime_ = value;
      }
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 4;
    private readonly static string ReasonDefaultValue = "";

    private string reason_;
    /// <summary>
    /// The reason for the condition's last transition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Reason {
      get { return reason_ ?? ReasonDefaultValue; }
      set {
        reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "reason" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasReason {
      get { return reason_ != null; }
    }
    /// <summary>Clears the value of the "reason" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReason() {
      reason_ = null;
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 5;
    private readonly static string MessageDefaultValue = "";

    private string message_;
    /// <summary>
    /// A human readable message indicating details about the transition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_ ?? MessageDefaultValue; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMessage {
      get { return message_ != null; }
    }
    /// <summary>Clears the value of the "message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessage() {
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FeaturePipelineCondition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FeaturePipelineCondition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Status != other.Status) return false;
      if (!object.Equals(LastTransitionTime, other.LastTransitionTime)) return false;
      if (Reason != other.Reason) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasStatus) hash ^= Status.GetHashCode();
      if (lastTransitionTime_ != null) hash ^= LastTransitionTime.GetHashCode();
      if (HasReason) hash ^= Reason.GetHashCode();
      if (HasMessage) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasStatus) {
        output.WriteRawTag(18);
        output.WriteString(Status);
      }
      if (HasReason) {
        output.WriteRawTag(34);
        output.WriteString(Reason);
      }
      if (HasMessage) {
        output.WriteRawTag(42);
        output.WriteString(Message);
      }
      if (lastTransitionTime_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(LastTransitionTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasStatus) {
        output.WriteRawTag(18);
        output.WriteString(Status);
      }
      if (HasReason) {
        output.WriteRawTag(34);
        output.WriteString(Reason);
      }
      if (HasMessage) {
        output.WriteRawTag(42);
        output.WriteString(Message);
      }
      if (lastTransitionTime_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(LastTransitionTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (HasStatus) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Status);
      }
      if (lastTransitionTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastTransitionTime);
      }
      if (HasReason) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
      }
      if (HasMessage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FeaturePipelineCondition other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasStatus) {
        Status = other.Status;
      }
      if (other.lastTransitionTime_ != null) {
        if (lastTransitionTime_ == null) {
          LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
        }
        LastTransitionTime.MergeFrom(other.LastTransitionTime);
      }
      if (other.HasReason) {
        Reason = other.Reason;
      }
      if (other.HasMessage) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Status = input.ReadString();
            break;
          }
          case 34: {
            Reason = input.ReadString();
            break;
          }
          case 42: {
            Message = input.ReadString();
            break;
          }
          case 58: {
            if (lastTransitionTime_ == null) {
              LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(LastTransitionTime);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Status = input.ReadString();
            break;
          }
          case 34: {
            Reason = input.ReadString();
            break;
          }
          case 42: {
            Message = input.ReadString();
            break;
          }
          case 58: {
            if (lastTransitionTime_ == null) {
              LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(LastTransitionTime);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// +kubebuilder:object:root=true
  /// FeatureList contain a list of feature objects
  /// </summary>
  public sealed partial class FeaturePipelineList : pb::IMessage<FeaturePipelineList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FeaturePipelineList> _parser = new pb::MessageParser<FeaturePipelineList>(() => new FeaturePipelineList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FeaturePipelineList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturePipelineList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturePipelineList(FeaturePipelineList other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturePipelineList Clone() {
      return new FeaturePipelineList(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturePipeline> _repeated_items_codec
        = pb::FieldCodec.ForMessage(18, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturePipeline.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturePipeline> items_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturePipeline>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturePipeline> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FeaturePipelineList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FeaturePipelineList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(ref output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FeaturePipelineList other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// FeaturePipeline represent a feature set object in the feature store.
  /// +kubebuilder:object:root=true
  /// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
  /// +kubebuilder:printcolumn:name="Version",type="string",JSONPath=".spec.versionName"
  /// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
  /// +kubebuilder:resource:path=featurepipelineruns,singular=featurepipelinerun,categories={data,modela}
  /// +kubebuilder:subresource:status
  /// </summary>
  public sealed partial class FeaturePipelineRun : pb::IMessage<FeaturePipelineRun>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FeaturePipelineRun> _parser = new pb::MessageParser<FeaturePipelineRun>(() => new FeaturePipelineRun());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FeaturePipelineRun> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturePipelineRun() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturePipelineRun(FeaturePipelineRun other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      spec_ = other.spec_ != null ? other.spec_.Clone() : null;
      status_ = other.status_ != null ? other.status_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturePipelineRun Clone() {
      return new FeaturePipelineRun(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "spec" field.</summary>
    public const int SpecFieldNumber = 2;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturePipelineRunSpec spec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturePipelineRunSpec Spec {
      get { return spec_; }
      set {
        spec_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 3;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturePipelineRunStatus status_;
    /// <summary>
    /// +optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturePipelineRunStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FeaturePipelineRun);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FeaturePipelineRun other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if (!object.Equals(Spec, other.Spec)) return false;
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      if (spec_ != null) hash ^= Spec.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      if (spec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Spec);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FeaturePipelineRun other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      if (other.spec_ != null) {
        if (spec_ == null) {
          Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturePipelineRunSpec();
        }
        Spec.MergeFrom(other.Spec);
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturePipelineRunStatus();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturePipelineRunSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturePipelineRunStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturePipelineRunSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturePipelineRunStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// FeaturePipelineRunCondition describes the state of a deployment at a certain point.
  /// </summary>
  public sealed partial class FeaturePipelineRunCondition : pb::IMessage<FeaturePipelineRunCondition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FeaturePipelineRunCondition> _parser = new pb::MessageParser<FeaturePipelineRunCondition>(() => new FeaturePipelineRunCondition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FeaturePipelineRunCondition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturePipelineRunCondition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturePipelineRunCondition(FeaturePipelineRunCondition other) : this() {
      type_ = other.type_;
      status_ = other.status_;
      lastTransitionTime_ = other.lastTransitionTime_ != null ? other.lastTransitionTime_.Clone() : null;
      reason_ = other.reason_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturePipelineRunCondition Clone() {
      return new FeaturePipelineRunCondition(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static string TypeDefaultValue = "";

    private string type_;
    /// <summary>
    /// Type of account condition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_ ?? TypeDefaultValue; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return type_ != null; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      type_ = null;
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private readonly static string StatusDefaultValue = "";

    private string status_;
    /// <summary>
    /// Status of the condition, one of True, False, AutoScaler.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Status {
      get { return status_ ?? StatusDefaultValue; }
      set {
        status_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStatus {
      get { return status_ != null; }
    }
    /// <summary>Clears the value of the "status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStatus() {
      status_ = null;
    }

    /// <summary>Field number for the "lastTransitionTime" field.</summary>
    public const int LastTransitionTimeFieldNumber = 7;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time lastTransitionTime_;
    /// <summary>
    /// Last time the condition transitioned from one status to another.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time LastTransitionTime {
      get { return lastTransitionTime_; }
      set {
        lastTransitionTime_ = value;
      }
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 4;
    private readonly static string ReasonDefaultValue = "";

    private string reason_;
    /// <summary>
    /// The reason for the condition's last transition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Reason {
      get { return reason_ ?? ReasonDefaultValue; }
      set {
        reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "reason" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasReason {
      get { return reason_ != null; }
    }
    /// <summary>Clears the value of the "reason" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReason() {
      reason_ = null;
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 5;
    private readonly static string MessageDefaultValue = "";

    private string message_;
    /// <summary>
    /// A human readable message indicating details about the transition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_ ?? MessageDefaultValue; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMessage {
      get { return message_ != null; }
    }
    /// <summary>Clears the value of the "message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessage() {
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FeaturePipelineRunCondition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FeaturePipelineRunCondition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Status != other.Status) return false;
      if (!object.Equals(LastTransitionTime, other.LastTransitionTime)) return false;
      if (Reason != other.Reason) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasStatus) hash ^= Status.GetHashCode();
      if (lastTransitionTime_ != null) hash ^= LastTransitionTime.GetHashCode();
      if (HasReason) hash ^= Reason.GetHashCode();
      if (HasMessage) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasStatus) {
        output.WriteRawTag(18);
        output.WriteString(Status);
      }
      if (HasReason) {
        output.WriteRawTag(34);
        output.WriteString(Reason);
      }
      if (HasMessage) {
        output.WriteRawTag(42);
        output.WriteString(Message);
      }
      if (lastTransitionTime_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(LastTransitionTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasStatus) {
        output.WriteRawTag(18);
        output.WriteString(Status);
      }
      if (HasReason) {
        output.WriteRawTag(34);
        output.WriteString(Reason);
      }
      if (HasMessage) {
        output.WriteRawTag(42);
        output.WriteString(Message);
      }
      if (lastTransitionTime_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(LastTransitionTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (HasStatus) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Status);
      }
      if (lastTransitionTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastTransitionTime);
      }
      if (HasReason) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
      }
      if (HasMessage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FeaturePipelineRunCondition other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasStatus) {
        Status = other.Status;
      }
      if (other.lastTransitionTime_ != null) {
        if (lastTransitionTime_ == null) {
          LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
        }
        LastTransitionTime.MergeFrom(other.LastTransitionTime);
      }
      if (other.HasReason) {
        Reason = other.Reason;
      }
      if (other.HasMessage) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Status = input.ReadString();
            break;
          }
          case 34: {
            Reason = input.ReadString();
            break;
          }
          case 42: {
            Message = input.ReadString();
            break;
          }
          case 58: {
            if (lastTransitionTime_ == null) {
              LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(LastTransitionTime);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Status = input.ReadString();
            break;
          }
          case 34: {
            Reason = input.ReadString();
            break;
          }
          case 42: {
            Message = input.ReadString();
            break;
          }
          case 58: {
            if (lastTransitionTime_ == null) {
              LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(LastTransitionTime);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// FeaturePipelineRunList contain a list of FeaturePipelineRun objects
  /// +kubebuilder:object:root=true
  /// </summary>
  public sealed partial class FeaturePipelineRunList : pb::IMessage<FeaturePipelineRunList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FeaturePipelineRunList> _parser = new pb::MessageParser<FeaturePipelineRunList>(() => new FeaturePipelineRunList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FeaturePipelineRunList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturePipelineRunList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturePipelineRunList(FeaturePipelineRunList other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturePipelineRunList Clone() {
      return new FeaturePipelineRunList(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturePipelineRun> _repeated_items_codec
        = pb::FieldCodec.ForMessage(18, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturePipelineRun.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturePipelineRun> items_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturePipelineRun>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturePipelineRun> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FeaturePipelineRunList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FeaturePipelineRunList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(ref output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FeaturePipelineRunList other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// FeatureSpec contain the desired state of a Feature
  /// </summary>
  public sealed partial class FeaturePipelineRunSpec : pb::IMessage<FeaturePipelineRunSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FeaturePipelineRunSpec> _parser = new pb::MessageParser<FeaturePipelineRunSpec>(() => new FeaturePipelineRunSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FeaturePipelineRunSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturePipelineRunSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturePipelineRunSpec(FeaturePipelineRunSpec other) : this() {
      owner_ = other.owner_;
      versionName_ = other.versionName_;
      featurePipelineName_ = other.featurePipelineName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturePipelineRunSpec Clone() {
      return new FeaturePipelineRunSpec(this);
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 1;
    private readonly static string OwnerDefaultValue = "";

    private string owner_;
    /// <summary>
    /// The feature owner
    /// +kubebuilder:default:="no-one"
    /// +kubebuilder:validation:Pattern="[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*"
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owner {
      get { return owner_ ?? OwnerDefaultValue; }
      set {
        owner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "owner" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOwner {
      get { return owner_ != null; }
    }
    /// <summary>Clears the value of the "owner" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOwner() {
      owner_ = null;
    }

    /// <summary>Field number for the "versionName" field.</summary>
    public const int VersionNameFieldNumber = 2;
    private readonly static string VersionNameDefaultValue = "";

    private string versionName_;
    /// <summary>
    /// The product version for the feature.
    /// +kubebuilder:validation:Pattern="[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*"
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VersionName {
      get { return versionName_ ?? VersionNameDefaultValue; }
      set {
        versionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "versionName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasVersionName {
      get { return versionName_ != null; }
    }
    /// <summary>Clears the value of the "versionName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearVersionName() {
      versionName_ = null;
    }

    /// <summary>Field number for the "featurePipelineName" field.</summary>
    public const int FeaturePipelineNameFieldNumber = 3;
    private readonly static string FeaturePipelineNameDefaultValue = "";

    private string featurePipelineName_;
    /// <summary>
    /// FileName specify the name of the attribute
    /// +kubebuilder:validation:Pattern="[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*"
    /// +kubebuilder:validation:MaxLength=64
    /// +kubebuilder:validation:MinLength=1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FeaturePipelineName {
      get { return featurePipelineName_ ?? FeaturePipelineNameDefaultValue; }
      set {
        featurePipelineName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "featurePipelineName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFeaturePipelineName {
      get { return featurePipelineName_ != null; }
    }
    /// <summary>Clears the value of the "featurePipelineName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFeaturePipelineName() {
      featurePipelineName_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FeaturePipelineRunSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FeaturePipelineRunSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Owner != other.Owner) return false;
      if (VersionName != other.VersionName) return false;
      if (FeaturePipelineName != other.FeaturePipelineName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasOwner) hash ^= Owner.GetHashCode();
      if (HasVersionName) hash ^= VersionName.GetHashCode();
      if (HasFeaturePipelineName) hash ^= FeaturePipelineName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasOwner) {
        output.WriteRawTag(10);
        output.WriteString(Owner);
      }
      if (HasVersionName) {
        output.WriteRawTag(18);
        output.WriteString(VersionName);
      }
      if (HasFeaturePipelineName) {
        output.WriteRawTag(26);
        output.WriteString(FeaturePipelineName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasOwner) {
        output.WriteRawTag(10);
        output.WriteString(Owner);
      }
      if (HasVersionName) {
        output.WriteRawTag(18);
        output.WriteString(VersionName);
      }
      if (HasFeaturePipelineName) {
        output.WriteRawTag(26);
        output.WriteString(FeaturePipelineName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasOwner) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owner);
      }
      if (HasVersionName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VersionName);
      }
      if (HasFeaturePipelineName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FeaturePipelineName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FeaturePipelineRunSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasOwner) {
        Owner = other.Owner;
      }
      if (other.HasVersionName) {
        VersionName = other.VersionName;
      }
      if (other.HasFeaturePipelineName) {
        FeaturePipelineName = other.FeaturePipelineName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Owner = input.ReadString();
            break;
          }
          case 18: {
            VersionName = input.ReadString();
            break;
          }
          case 26: {
            FeaturePipelineName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Owner = input.ReadString();
            break;
          }
          case 18: {
            VersionName = input.ReadString();
            break;
          }
          case 26: {
            FeaturePipelineName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// FeatureStatus defines the observed state of Feature
  /// </summary>
  public sealed partial class FeaturePipelineRunStatus : pb::IMessage<FeaturePipelineRunStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FeaturePipelineRunStatus> _parser = new pb::MessageParser<FeaturePipelineRunStatus>(() => new FeaturePipelineRunStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FeaturePipelineRunStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturePipelineRunStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturePipelineRunStatus(FeaturePipelineRunStatus other) : this() {
      startTime_ = other.startTime_ != null ? other.startTime_.Clone() : null;
      completionTime_ = other.completionTime_ != null ? other.completionTime_.Clone() : null;
      conditions_ = other.conditions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturePipelineRunStatus Clone() {
      return new FeaturePipelineRunStatus(this);
    }

    /// <summary>Field number for the "startTime" field.</summary>
    public const int StartTimeFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time startTime_;
    /// <summary>
    /// The Start time of the run
    /// +option
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "completionTime" field.</summary>
    public const int CompletionTimeFieldNumber = 2;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time completionTime_;
    /// <summary>
    /// The End time of the run
    /// +option
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time CompletionTime {
      get { return completionTime_; }
      set {
        completionTime_ = value;
      }
    }

    /// <summary>Field number for the "conditions" field.</summary>
    public const int ConditionsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturePipelineRunCondition> _repeated_conditions_codec
        = pb::FieldCodec.ForMessage(26, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturePipelineRunCondition.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturePipelineRunCondition> conditions_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturePipelineRunCondition>();
    /// <summary>
    /// +optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturePipelineRunCondition> Conditions {
      get { return conditions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FeaturePipelineRunStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FeaturePipelineRunStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(StartTime, other.StartTime)) return false;
      if (!object.Equals(CompletionTime, other.CompletionTime)) return false;
      if(!conditions_.Equals(other.conditions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (startTime_ != null) hash ^= StartTime.GetHashCode();
      if (completionTime_ != null) hash ^= CompletionTime.GetHashCode();
      hash ^= conditions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (startTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StartTime);
      }
      if (completionTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CompletionTime);
      }
      conditions_.WriteTo(output, _repeated_conditions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (startTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StartTime);
      }
      if (completionTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CompletionTime);
      }
      conditions_.WriteTo(ref output, _repeated_conditions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (startTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
      }
      if (completionTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CompletionTime);
      }
      size += conditions_.CalculateSize(_repeated_conditions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FeaturePipelineRunStatus other) {
      if (other == null) {
        return;
      }
      if (other.startTime_ != null) {
        if (startTime_ == null) {
          StartTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
        }
        StartTime.MergeFrom(other.StartTime);
      }
      if (other.completionTime_ != null) {
        if (completionTime_ == null) {
          CompletionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
        }
        CompletionTime.MergeFrom(other.CompletionTime);
      }
      conditions_.Add(other.conditions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (startTime_ == null) {
              StartTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 18: {
            if (completionTime_ == null) {
              CompletionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(CompletionTime);
            break;
          }
          case 26: {
            conditions_.AddEntriesFrom(input, _repeated_conditions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (startTime_ == null) {
              StartTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 18: {
            if (completionTime_ == null) {
              CompletionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(CompletionTime);
            break;
          }
          case 26: {
            conditions_.AddEntriesFrom(ref input, _repeated_conditions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// FeaturePipelineSpec contain the desired state of a FeaturePipeline
  /// </summary>
  public sealed partial class FeaturePipelineSpec : pb::IMessage<FeaturePipelineSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FeaturePipelineSpec> _parser = new pb::MessageParser<FeaturePipelineSpec>(() => new FeaturePipelineSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FeaturePipelineSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturePipelineSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturePipelineSpec(FeaturePipelineSpec other) : this() {
      owner_ = other.owner_;
      versionName_ = other.versionName_;
      description_ = other.description_;
      aggregation_ = other.aggregation_ != null ? other.aggregation_.Clone() : null;
      materialization_ = other.materialization_ != null ? other.materialization_.Clone() : null;
      family_ = other.family_;
      entityName_ = other.entityName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturePipelineSpec Clone() {
      return new FeaturePipelineSpec(this);
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 1;
    private readonly static string OwnerDefaultValue = "";

    private string owner_;
    /// <summary>
    /// Owner is the owner of the feature pipeline
    /// +kubebuilder:default:="no-one"
    /// +kubebuilder:validation:Pattern="[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*"
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owner {
      get { return owner_ ?? OwnerDefaultValue; }
      set {
        owner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "owner" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOwner {
      get { return owner_ != null; }
    }
    /// <summary>Clears the value of the "owner" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOwner() {
      owner_ = null;
    }

    /// <summary>Field number for the "versionName" field.</summary>
    public const int VersionNameFieldNumber = 2;
    private readonly static string VersionNameDefaultValue = "";

    private string versionName_;
    /// <summary>
    /// Version name is the the product version for the feature.
    /// +kubebuilder:validation:Pattern="[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*"
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VersionName {
      get { return versionName_ ?? VersionNameDefaultValue; }
      set {
        versionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "versionName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasVersionName {
      get { return versionName_ != null; }
    }
    /// <summary>Clears the value of the "versionName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearVersionName() {
      versionName_ = null;
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private readonly static string DescriptionDefaultValue = "";

    private string description_;
    /// <summary>
    /// Description of the feature pipeline
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:validation:MaxLength=512
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_ ?? DescriptionDefaultValue; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "description" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDescription {
      get { return description_ != null; }
    }
    /// <summary>Clears the value of the "description" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDescription() {
      description_ = null;
    }

    /// <summary>Field number for the "aggregation" field.</summary>
    public const int AggregationFieldNumber = 4;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.AggregationSpec aggregation_;
    /// <summary>
    /// Aggregation is the aggregation spec
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.AggregationSpec Aggregation {
      get { return aggregation_; }
      set {
        aggregation_ = value;
      }
    }

    /// <summary>Field number for the "materialization" field.</summary>
    public const int MaterializationFieldNumber = 5;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.MaterializationSpec materialization_;
    /// <summary>
    /// Materialization
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.MaterializationSpec Materialization {
      get { return materialization_; }
      set {
        materialization_ = value;
      }
    }

    /// <summary>Field number for the "family" field.</summary>
    public const int FamilyFieldNumber = 6;
    private readonly static string FamilyDefaultValue = "";

    private string family_;
    /// <summary>
    /// Family is the feature family
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Family {
      get { return family_ ?? FamilyDefaultValue; }
      set {
        family_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "family" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFamily {
      get { return family_ != null; }
    }
    /// <summary>Clears the value of the "family" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFamily() {
      family_ = null;
    }

    /// <summary>Field number for the "entityName" field.</summary>
    public const int EntityNameFieldNumber = 7;
    private readonly static string EntityNameDefaultValue = "";

    private string entityName_;
    /// <summary>
    /// Reference to the entity name
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EntityName {
      get { return entityName_ ?? EntityNameDefaultValue; }
      set {
        entityName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "entityName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEntityName {
      get { return entityName_ != null; }
    }
    /// <summary>Clears the value of the "entityName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEntityName() {
      entityName_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FeaturePipelineSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FeaturePipelineSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Owner != other.Owner) return false;
      if (VersionName != other.VersionName) return false;
      if (Description != other.Description) return false;
      if (!object.Equals(Aggregation, other.Aggregation)) return false;
      if (!object.Equals(Materialization, other.Materialization)) return false;
      if (Family != other.Family) return false;
      if (EntityName != other.EntityName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasOwner) hash ^= Owner.GetHashCode();
      if (HasVersionName) hash ^= VersionName.GetHashCode();
      if (HasDescription) hash ^= Description.GetHashCode();
      if (aggregation_ != null) hash ^= Aggregation.GetHashCode();
      if (materialization_ != null) hash ^= Materialization.GetHashCode();
      if (HasFamily) hash ^= Family.GetHashCode();
      if (HasEntityName) hash ^= EntityName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasOwner) {
        output.WriteRawTag(10);
        output.WriteString(Owner);
      }
      if (HasVersionName) {
        output.WriteRawTag(18);
        output.WriteString(VersionName);
      }
      if (HasDescription) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (aggregation_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Aggregation);
      }
      if (materialization_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Materialization);
      }
      if (HasFamily) {
        output.WriteRawTag(50);
        output.WriteString(Family);
      }
      if (HasEntityName) {
        output.WriteRawTag(58);
        output.WriteString(EntityName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasOwner) {
        output.WriteRawTag(10);
        output.WriteString(Owner);
      }
      if (HasVersionName) {
        output.WriteRawTag(18);
        output.WriteString(VersionName);
      }
      if (HasDescription) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (aggregation_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Aggregation);
      }
      if (materialization_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Materialization);
      }
      if (HasFamily) {
        output.WriteRawTag(50);
        output.WriteString(Family);
      }
      if (HasEntityName) {
        output.WriteRawTag(58);
        output.WriteString(EntityName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasOwner) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owner);
      }
      if (HasVersionName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VersionName);
      }
      if (HasDescription) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (aggregation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Aggregation);
      }
      if (materialization_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Materialization);
      }
      if (HasFamily) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Family);
      }
      if (HasEntityName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EntityName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FeaturePipelineSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasOwner) {
        Owner = other.Owner;
      }
      if (other.HasVersionName) {
        VersionName = other.VersionName;
      }
      if (other.HasDescription) {
        Description = other.Description;
      }
      if (other.aggregation_ != null) {
        if (aggregation_ == null) {
          Aggregation = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.AggregationSpec();
        }
        Aggregation.MergeFrom(other.Aggregation);
      }
      if (other.materialization_ != null) {
        if (materialization_ == null) {
          Materialization = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.MaterializationSpec();
        }
        Materialization.MergeFrom(other.Materialization);
      }
      if (other.HasFamily) {
        Family = other.Family;
      }
      if (other.HasEntityName) {
        EntityName = other.EntityName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Owner = input.ReadString();
            break;
          }
          case 18: {
            VersionName = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            if (aggregation_ == null) {
              Aggregation = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.AggregationSpec();
            }
            input.ReadMessage(Aggregation);
            break;
          }
          case 42: {
            if (materialization_ == null) {
              Materialization = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.MaterializationSpec();
            }
            input.ReadMessage(Materialization);
            break;
          }
          case 50: {
            Family = input.ReadString();
            break;
          }
          case 58: {
            EntityName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Owner = input.ReadString();
            break;
          }
          case 18: {
            VersionName = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            if (aggregation_ == null) {
              Aggregation = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.AggregationSpec();
            }
            input.ReadMessage(Aggregation);
            break;
          }
          case 42: {
            if (materialization_ == null) {
              Materialization = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.MaterializationSpec();
            }
            input.ReadMessage(Materialization);
            break;
          }
          case 50: {
            Family = input.ReadString();
            break;
          }
          case 58: {
            EntityName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// FeatureStatus defines the observed state of Feature
  /// </summary>
  public sealed partial class FeaturePipelineStatus : pb::IMessage<FeaturePipelineStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FeaturePipelineStatus> _parser = new pb::MessageParser<FeaturePipelineStatus>(() => new FeaturePipelineStatus());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FeaturePipelineStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[54]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturePipelineStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturePipelineStatus(FeaturePipelineStatus other) : this() {
      _hasBits0 = other._hasBits0;
      averageCost_ = other.averageCost_;
      conditions_ = other.conditions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturePipelineStatus Clone() {
      return new FeaturePipelineStatus(this);
    }

    /// <summary>Field number for the "averageCost" field.</summary>
    public const int AverageCostFieldNumber = 1;
    private readonly static double AverageCostDefaultValue = 0D;

    private double averageCost_;
    /// <summary>
    /// Store the avg cost of running this pipeline
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double AverageCost {
      get { if ((_hasBits0 & 1) != 0) { return averageCost_; } else { return AverageCostDefaultValue; } }
      set {
        _hasBits0 |= 1;
        averageCost_ = value;
      }
    }
    /// <summary>Gets whether the "averageCost" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAverageCost {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "averageCost" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAverageCost() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "conditions" field.</summary>
    public const int ConditionsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturePipelineCondition> _repeated_conditions_codec
        = pb::FieldCodec.ForMessage(18, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturePipelineCondition.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturePipelineCondition> conditions_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturePipelineCondition>();
    /// <summary>
    /// +optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturePipelineCondition> Conditions {
      get { return conditions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FeaturePipelineStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FeaturePipelineStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(AverageCost, other.AverageCost)) return false;
      if(!conditions_.Equals(other.conditions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAverageCost) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(AverageCost);
      hash ^= conditions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAverageCost) {
        output.WriteRawTag(9);
        output.WriteDouble(AverageCost);
      }
      conditions_.WriteTo(output, _repeated_conditions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAverageCost) {
        output.WriteRawTag(9);
        output.WriteDouble(AverageCost);
      }
      conditions_.WriteTo(ref output, _repeated_conditions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAverageCost) {
        size += 1 + 8;
      }
      size += conditions_.CalculateSize(_repeated_conditions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FeaturePipelineStatus other) {
      if (other == null) {
        return;
      }
      if (other.HasAverageCost) {
        AverageCost = other.AverageCost;
      }
      conditions_.Add(other.conditions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            AverageCost = input.ReadDouble();
            break;
          }
          case 18: {
            conditions_.AddEntriesFrom(input, _repeated_conditions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            AverageCost = input.ReadDouble();
            break;
          }
          case 18: {
            conditions_.AddEntriesFrom(ref input, _repeated_conditions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// FeatureSpec contain the desired state of a Feature
  /// </summary>
  public sealed partial class FeatureSpec : pb::IMessage<FeatureSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FeatureSpec> _parser = new pb::MessageParser<FeatureSpec>(() => new FeatureSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FeatureSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[55]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeatureSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeatureSpec(FeatureSpec other) : this() {
      owner_ = other.owner_;
      versionName_ = other.versionName_;
      description_ = other.description_;
      name_ = other.name_;
      keyColumn_ = other.keyColumn_;
      timestampColumn_ = other.timestampColumn_;
      featureColumn_ = other.featureColumn_;
      entityName_ = other.entityName_;
      featurePipelineName_ = other.featurePipelineName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeatureSpec Clone() {
      return new FeatureSpec(this);
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 1;
    private readonly static string OwnerDefaultValue = "";

    private string owner_;
    /// <summary>
    /// The feature owner
    /// +kubebuilder:default:="no-one"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owner {
      get { return owner_ ?? OwnerDefaultValue; }
      set {
        owner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "owner" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOwner {
      get { return owner_ != null; }
    }
    /// <summary>Clears the value of the "owner" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOwner() {
      owner_ = null;
    }

    /// <summary>Field number for the "versionName" field.</summary>
    public const int VersionNameFieldNumber = 2;
    private readonly static string VersionNameDefaultValue = "";

    private string versionName_;
    /// <summary>
    /// The product version for the feature.
    /// +kubebuilder:default =""
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VersionName {
      get { return versionName_ ?? VersionNameDefaultValue; }
      set {
        versionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "versionName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasVersionName {
      get { return versionName_ != null; }
    }
    /// <summary>Clears the value of the "versionName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearVersionName() {
      versionName_ = null;
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private readonly static string DescriptionDefaultValue = "";

    private string description_;
    /// <summary>
    /// Comments is a description of the feature
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:default =""
    /// +kubebuilder:validation:MaxLength=512
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_ ?? DescriptionDefaultValue; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "description" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDescription {
      get { return description_ != null; }
    }
    /// <summary>Clears the value of the "description" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDescription() {
      description_ = null;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private readonly static string NameDefaultValue = "";

    private string name_;
    /// <summary>
    /// FileName specify the name of the attribute
    /// +kubebuilder:validation:MaxLength=64
    /// +kubebuilder:validation:MinLength=1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "keyColumn" field.</summary>
    public const int KeyColumnFieldNumber = 5;
    private readonly static string KeyColumnDefaultValue = "";

    private string keyColumn_;
    /// <summary>
    /// Type name of the column key, this column is the key column in the entity.
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string KeyColumn {
      get { return keyColumn_ ?? KeyColumnDefaultValue; }
      set {
        keyColumn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "keyColumn" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasKeyColumn {
      get { return keyColumn_ != null; }
    }
    /// <summary>Clears the value of the "keyColumn" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearKeyColumn() {
      keyColumn_ = null;
    }

    /// <summary>Field number for the "timestampColumn" field.</summary>
    public const int TimestampColumnFieldNumber = 6;
    private readonly static string TimestampColumnDefaultValue = "";

    private string timestampColumn_;
    /// <summary>
    /// The name of the time stamp column
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TimestampColumn {
      get { return timestampColumn_ ?? TimestampColumnDefaultValue; }
      set {
        timestampColumn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "timestampColumn" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTimestampColumn {
      get { return timestampColumn_ != null; }
    }
    /// <summary>Clears the value of the "timestampColumn" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTimestampColumn() {
      timestampColumn_ = null;
    }

    /// <summary>Field number for the "featureColumn" field.</summary>
    public const int FeatureColumnFieldNumber = 7;
    private readonly static string FeatureColumnDefaultValue = "";

    private string featureColumn_;
    /// <summary>
    /// The name of the feature column
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FeatureColumn {
      get { return featureColumn_ ?? FeatureColumnDefaultValue; }
      set {
        featureColumn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "featureColumn" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFeatureColumn {
      get { return featureColumn_ != null; }
    }
    /// <summary>Clears the value of the "featureColumn" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFeatureColumn() {
      featureColumn_ = null;
    }

    /// <summary>Field number for the "entityName" field.</summary>
    public const int EntityNameFieldNumber = 8;
    private readonly static string EntityNameDefaultValue = "";

    private string entityName_;
    /// <summary>
    /// The name of the entity containing this feature
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EntityName {
      get { return entityName_ ?? EntityNameDefaultValue; }
      set {
        entityName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "entityName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEntityName {
      get { return entityName_ != null; }
    }
    /// <summary>Clears the value of the "entityName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEntityName() {
      entityName_ = null;
    }

    /// <summary>Field number for the "featurePipelineName" field.</summary>
    public const int FeaturePipelineNameFieldNumber = 9;
    private readonly static string FeaturePipelineNameDefaultValue = "";

    private string featurePipelineName_;
    /// <summary>
    /// The name of the feature pipeline that is producing this feature
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FeaturePipelineName {
      get { return featurePipelineName_ ?? FeaturePipelineNameDefaultValue; }
      set {
        featurePipelineName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "featurePipelineName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFeaturePipelineName {
      get { return featurePipelineName_ != null; }
    }
    /// <summary>Clears the value of the "featurePipelineName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFeaturePipelineName() {
      featurePipelineName_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FeatureSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FeatureSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Owner != other.Owner) return false;
      if (VersionName != other.VersionName) return false;
      if (Description != other.Description) return false;
      if (Name != other.Name) return false;
      if (KeyColumn != other.KeyColumn) return false;
      if (TimestampColumn != other.TimestampColumn) return false;
      if (FeatureColumn != other.FeatureColumn) return false;
      if (EntityName != other.EntityName) return false;
      if (FeaturePipelineName != other.FeaturePipelineName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasOwner) hash ^= Owner.GetHashCode();
      if (HasVersionName) hash ^= VersionName.GetHashCode();
      if (HasDescription) hash ^= Description.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (HasKeyColumn) hash ^= KeyColumn.GetHashCode();
      if (HasTimestampColumn) hash ^= TimestampColumn.GetHashCode();
      if (HasFeatureColumn) hash ^= FeatureColumn.GetHashCode();
      if (HasEntityName) hash ^= EntityName.GetHashCode();
      if (HasFeaturePipelineName) hash ^= FeaturePipelineName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasOwner) {
        output.WriteRawTag(10);
        output.WriteString(Owner);
      }
      if (HasVersionName) {
        output.WriteRawTag(18);
        output.WriteString(VersionName);
      }
      if (HasDescription) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (HasName) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (HasKeyColumn) {
        output.WriteRawTag(42);
        output.WriteString(KeyColumn);
      }
      if (HasTimestampColumn) {
        output.WriteRawTag(50);
        output.WriteString(TimestampColumn);
      }
      if (HasFeatureColumn) {
        output.WriteRawTag(58);
        output.WriteString(FeatureColumn);
      }
      if (HasEntityName) {
        output.WriteRawTag(66);
        output.WriteString(EntityName);
      }
      if (HasFeaturePipelineName) {
        output.WriteRawTag(74);
        output.WriteString(FeaturePipelineName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasOwner) {
        output.WriteRawTag(10);
        output.WriteString(Owner);
      }
      if (HasVersionName) {
        output.WriteRawTag(18);
        output.WriteString(VersionName);
      }
      if (HasDescription) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (HasName) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (HasKeyColumn) {
        output.WriteRawTag(42);
        output.WriteString(KeyColumn);
      }
      if (HasTimestampColumn) {
        output.WriteRawTag(50);
        output.WriteString(TimestampColumn);
      }
      if (HasFeatureColumn) {
        output.WriteRawTag(58);
        output.WriteString(FeatureColumn);
      }
      if (HasEntityName) {
        output.WriteRawTag(66);
        output.WriteString(EntityName);
      }
      if (HasFeaturePipelineName) {
        output.WriteRawTag(74);
        output.WriteString(FeaturePipelineName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasOwner) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owner);
      }
      if (HasVersionName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VersionName);
      }
      if (HasDescription) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasKeyColumn) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(KeyColumn);
      }
      if (HasTimestampColumn) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TimestampColumn);
      }
      if (HasFeatureColumn) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FeatureColumn);
      }
      if (HasEntityName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EntityName);
      }
      if (HasFeaturePipelineName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FeaturePipelineName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FeatureSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasOwner) {
        Owner = other.Owner;
      }
      if (other.HasVersionName) {
        VersionName = other.VersionName;
      }
      if (other.HasDescription) {
        Description = other.Description;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasKeyColumn) {
        KeyColumn = other.KeyColumn;
      }
      if (other.HasTimestampColumn) {
        TimestampColumn = other.TimestampColumn;
      }
      if (other.HasFeatureColumn) {
        FeatureColumn = other.FeatureColumn;
      }
      if (other.HasEntityName) {
        EntityName = other.EntityName;
      }
      if (other.HasFeaturePipelineName) {
        FeaturePipelineName = other.FeaturePipelineName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Owner = input.ReadString();
            break;
          }
          case 18: {
            VersionName = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 42: {
            KeyColumn = input.ReadString();
            break;
          }
          case 50: {
            TimestampColumn = input.ReadString();
            break;
          }
          case 58: {
            FeatureColumn = input.ReadString();
            break;
          }
          case 66: {
            EntityName = input.ReadString();
            break;
          }
          case 74: {
            FeaturePipelineName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Owner = input.ReadString();
            break;
          }
          case 18: {
            VersionName = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 42: {
            KeyColumn = input.ReadString();
            break;
          }
          case 50: {
            TimestampColumn = input.ReadString();
            break;
          }
          case 58: {
            FeatureColumn = input.ReadString();
            break;
          }
          case 66: {
            EntityName = input.ReadString();
            break;
          }
          case 74: {
            FeaturePipelineName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// FeatureStatus defines the observed state of Feature
  /// </summary>
  public sealed partial class FeatureStatus : pb::IMessage<FeatureStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FeatureStatus> _parser = new pb::MessageParser<FeatureStatus>(() => new FeatureStatus());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FeatureStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[56]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeatureStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeatureStatus(FeatureStatus other) : this() {
      _hasBits0 = other._hasBits0;
      sha256_ = other.sha256_;
      name_ = other.name_;
      min_ = other.min_;
      max_ = other.max_;
      mean_ = other.mean_;
      zeros_ = other.zeros_;
      nulls_ = other.nulls_;
      p01_ = other.p01_;
      p99_ = other.p99_;
      stddev_ = other.stddev_;
      conditions_ = other.conditions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeatureStatus Clone() {
      return new FeatureStatus(this);
    }

    /// <summary>Field number for the "sha256" field.</summary>
    public const int Sha256FieldNumber = 2;
    private readonly static string Sha256DefaultValue = "";

    private string sha256_;
    /// <summary>
    /// Sha256 contains the signature of
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Sha256 {
      get { return sha256_ ?? Sha256DefaultValue; }
      set {
        sha256_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "sha256" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSha256 {
      get { return sha256_ != null; }
    }
    /// <summary>Clears the value of the "sha256" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSha256() {
      sha256_ = null;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private readonly static string NameDefaultValue = "";

    private string name_;
    /// <summary>
    /// FileName is the name of the attribute
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "min" field.</summary>
    public const int MinFieldNumber = 4;
    private readonly static double MinDefaultValue = 0D;

    private double min_;
    /// <summary>
    /// Min is the minimum value of the attribute
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Min {
      get { if ((_hasBits0 & 1) != 0) { return min_; } else { return MinDefaultValue; } }
      set {
        _hasBits0 |= 1;
        min_ = value;
      }
    }
    /// <summary>Gets whether the "min" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMin {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "min" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMin() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "max" field.</summary>
    public const int MaxFieldNumber = 5;
    private readonly static double MaxDefaultValue = 0D;

    private double max_;
    /// <summary>
    /// Max is the maximum value of the attribute
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Max {
      get { if ((_hasBits0 & 2) != 0) { return max_; } else { return MaxDefaultValue; } }
      set {
        _hasBits0 |= 2;
        max_ = value;
      }
    }
    /// <summary>Gets whether the "max" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMax {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "max" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMax() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "mean" field.</summary>
    public const int MeanFieldNumber = 6;
    private readonly static double MeanDefaultValue = 0D;

    private double mean_;
    /// <summary>
    /// Mean is the mean value of the attribute
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Mean {
      get { if ((_hasBits0 & 4) != 0) { return mean_; } else { return MeanDefaultValue; } }
      set {
        _hasBits0 |= 4;
        mean_ = value;
      }
    }
    /// <summary>Gets whether the "mean" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMean {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "mean" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMean() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "zeros" field.</summary>
    public const int ZerosFieldNumber = 7;
    private readonly static int ZerosDefaultValue = 0;

    private int zeros_;
    /// <summary>
    /// Zeros is the numbers of zeros in the feature
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Zeros {
      get { if ((_hasBits0 & 8) != 0) { return zeros_; } else { return ZerosDefaultValue; } }
      set {
        _hasBits0 |= 8;
        zeros_ = value;
      }
    }
    /// <summary>Gets whether the "zeros" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasZeros {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "zeros" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearZeros() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "nulls" field.</summary>
    public const int NullsFieldNumber = 8;
    private readonly static int NullsDefaultValue = 0;

    private int nulls_;
    /// <summary>
    /// Nulls is the numbers of zeros in the feature
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Nulls {
      get { if ((_hasBits0 & 16) != 0) { return nulls_; } else { return NullsDefaultValue; } }
      set {
        _hasBits0 |= 16;
        nulls_ = value;
      }
    }
    /// <summary>Gets whether the "nulls" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNulls {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "nulls" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNulls() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "p01" field.</summary>
    public const int P01FieldNumber = 9;
    private readonly static double P01DefaultValue = 0D;

    private double p01_;
    /// <summary>
    /// P01 is the numbers of values in the first precent
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double P01 {
      get { if ((_hasBits0 & 32) != 0) { return p01_; } else { return P01DefaultValue; } }
      set {
        _hasBits0 |= 32;
        p01_ = value;
      }
    }
    /// <summary>Gets whether the "p01" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasP01 {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "p01" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearP01() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "p99" field.</summary>
    public const int P99FieldNumber = 10;
    private readonly static double P99DefaultValue = 0D;

    private double p99_;
    /// <summary>
    /// P99 is the numbers of values
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double P99 {
      get { if ((_hasBits0 & 64) != 0) { return p99_; } else { return P99DefaultValue; } }
      set {
        _hasBits0 |= 64;
        p99_ = value;
      }
    }
    /// <summary>Gets whether the "p99" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasP99 {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "p99" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearP99() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "stddev" field.</summary>
    public const int StddevFieldNumber = 11;
    private readonly static double StddevDefaultValue = 0D;

    private double stddev_;
    /// <summary>
    /// StdDev is the standard deviation value of the attribute
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Stddev {
      get { if ((_hasBits0 & 128) != 0) { return stddev_; } else { return StddevDefaultValue; } }
      set {
        _hasBits0 |= 128;
        stddev_ = value;
      }
    }
    /// <summary>Gets whether the "stddev" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStddev {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "stddev" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStddev() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "conditions" field.</summary>
    public const int ConditionsFieldNumber = 13;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeatureCondition> _repeated_conditions_codec
        = pb::FieldCodec.ForMessage(106, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeatureCondition.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeatureCondition> conditions_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeatureCondition>();
    /// <summary>
    /// +optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeatureCondition> Conditions {
      get { return conditions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FeatureStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FeatureStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Sha256 != other.Sha256) return false;
      if (Name != other.Name) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Min, other.Min)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Max, other.Max)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Mean, other.Mean)) return false;
      if (Zeros != other.Zeros) return false;
      if (Nulls != other.Nulls) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(P01, other.P01)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(P99, other.P99)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Stddev, other.Stddev)) return false;
      if(!conditions_.Equals(other.conditions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSha256) hash ^= Sha256.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (HasMin) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Min);
      if (HasMax) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Max);
      if (HasMean) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Mean);
      if (HasZeros) hash ^= Zeros.GetHashCode();
      if (HasNulls) hash ^= Nulls.GetHashCode();
      if (HasP01) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(P01);
      if (HasP99) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(P99);
      if (HasStddev) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Stddev);
      hash ^= conditions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSha256) {
        output.WriteRawTag(18);
        output.WriteString(Sha256);
      }
      if (HasName) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (HasMin) {
        output.WriteRawTag(33);
        output.WriteDouble(Min);
      }
      if (HasMax) {
        output.WriteRawTag(41);
        output.WriteDouble(Max);
      }
      if (HasMean) {
        output.WriteRawTag(49);
        output.WriteDouble(Mean);
      }
      if (HasZeros) {
        output.WriteRawTag(56);
        output.WriteInt32(Zeros);
      }
      if (HasNulls) {
        output.WriteRawTag(64);
        output.WriteInt32(Nulls);
      }
      if (HasP01) {
        output.WriteRawTag(73);
        output.WriteDouble(P01);
      }
      if (HasP99) {
        output.WriteRawTag(81);
        output.WriteDouble(P99);
      }
      if (HasStddev) {
        output.WriteRawTag(89);
        output.WriteDouble(Stddev);
      }
      conditions_.WriteTo(output, _repeated_conditions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSha256) {
        output.WriteRawTag(18);
        output.WriteString(Sha256);
      }
      if (HasName) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (HasMin) {
        output.WriteRawTag(33);
        output.WriteDouble(Min);
      }
      if (HasMax) {
        output.WriteRawTag(41);
        output.WriteDouble(Max);
      }
      if (HasMean) {
        output.WriteRawTag(49);
        output.WriteDouble(Mean);
      }
      if (HasZeros) {
        output.WriteRawTag(56);
        output.WriteInt32(Zeros);
      }
      if (HasNulls) {
        output.WriteRawTag(64);
        output.WriteInt32(Nulls);
      }
      if (HasP01) {
        output.WriteRawTag(73);
        output.WriteDouble(P01);
      }
      if (HasP99) {
        output.WriteRawTag(81);
        output.WriteDouble(P99);
      }
      if (HasStddev) {
        output.WriteRawTag(89);
        output.WriteDouble(Stddev);
      }
      conditions_.WriteTo(ref output, _repeated_conditions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasSha256) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sha256);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasMin) {
        size += 1 + 8;
      }
      if (HasMax) {
        size += 1 + 8;
      }
      if (HasMean) {
        size += 1 + 8;
      }
      if (HasZeros) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Zeros);
      }
      if (HasNulls) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Nulls);
      }
      if (HasP01) {
        size += 1 + 8;
      }
      if (HasP99) {
        size += 1 + 8;
      }
      if (HasStddev) {
        size += 1 + 8;
      }
      size += conditions_.CalculateSize(_repeated_conditions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FeatureStatus other) {
      if (other == null) {
        return;
      }
      if (other.HasSha256) {
        Sha256 = other.Sha256;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasMin) {
        Min = other.Min;
      }
      if (other.HasMax) {
        Max = other.Max;
      }
      if (other.HasMean) {
        Mean = other.Mean;
      }
      if (other.HasZeros) {
        Zeros = other.Zeros;
      }
      if (other.HasNulls) {
        Nulls = other.Nulls;
      }
      if (other.HasP01) {
        P01 = other.P01;
      }
      if (other.HasP99) {
        P99 = other.P99;
      }
      if (other.HasStddev) {
        Stddev = other.Stddev;
      }
      conditions_.Add(other.conditions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            Sha256 = input.ReadString();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 33: {
            Min = input.ReadDouble();
            break;
          }
          case 41: {
            Max = input.ReadDouble();
            break;
          }
          case 49: {
            Mean = input.ReadDouble();
            break;
          }
          case 56: {
            Zeros = input.ReadInt32();
            break;
          }
          case 64: {
            Nulls = input.ReadInt32();
            break;
          }
          case 73: {
            P01 = input.ReadDouble();
            break;
          }
          case 81: {
            P99 = input.ReadDouble();
            break;
          }
          case 89: {
            Stddev = input.ReadDouble();
            break;
          }
          case 106: {
            conditions_.AddEntriesFrom(input, _repeated_conditions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            Sha256 = input.ReadString();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 33: {
            Min = input.ReadDouble();
            break;
          }
          case 41: {
            Max = input.ReadDouble();
            break;
          }
          case 49: {
            Mean = input.ReadDouble();
            break;
          }
          case 56: {
            Zeros = input.ReadInt32();
            break;
          }
          case 64: {
            Nulls = input.ReadInt32();
            break;
          }
          case 73: {
            P01 = input.ReadDouble();
            break;
          }
          case 81: {
            P99 = input.ReadDouble();
            break;
          }
          case 89: {
            Stddev = input.ReadDouble();
            break;
          }
          case 106: {
            conditions_.AddEntriesFrom(ref input, _repeated_conditions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Featureset represents a featureset object
  /// +kubebuilder:object:root=true
  /// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
  /// +kubebuilder:printcolumn:name="Version",type="string",JSONPath=".spec.versionName"
  /// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
  /// +kubebuilder:resource:path=featuresets,singular=featureset,categories={data,modela}
  /// +kubebuilder:subresource:status
  /// </summary>
  public sealed partial class Featureset : pb::IMessage<Featureset>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Featureset> _parser = new pb::MessageParser<Featureset>(() => new Featureset());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Featureset> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[57]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Featureset() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Featureset(Featureset other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      spec_ = other.spec_ != null ? other.spec_.Clone() : null;
      status_ = other.status_ != null ? other.status_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Featureset Clone() {
      return new Featureset(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "spec" field.</summary>
    public const int SpecFieldNumber = 2;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturesetSpec spec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturesetSpec Spec {
      get { return spec_; }
      set {
        spec_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 3;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturesetStatus status_;
    /// <summary>
    /// +optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturesetStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Featureset);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Featureset other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if (!object.Equals(Spec, other.Spec)) return false;
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      if (spec_ != null) hash ^= Spec.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      if (spec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Spec);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Featureset other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      if (other.spec_ != null) {
        if (spec_ == null) {
          Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturesetSpec();
        }
        Spec.MergeFrom(other.Spec);
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturesetStatus();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturesetSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturesetStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturesetSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturesetStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// FeaturesetCondition describes the state of a deployment at a certain point.
  /// </summary>
  public sealed partial class FeaturesetCondition : pb::IMessage<FeaturesetCondition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FeaturesetCondition> _parser = new pb::MessageParser<FeaturesetCondition>(() => new FeaturesetCondition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FeaturesetCondition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[58]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturesetCondition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturesetCondition(FeaturesetCondition other) : this() {
      type_ = other.type_;
      status_ = other.status_;
      lastTransitionTime_ = other.lastTransitionTime_ != null ? other.lastTransitionTime_.Clone() : null;
      reason_ = other.reason_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturesetCondition Clone() {
      return new FeaturesetCondition(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static string TypeDefaultValue = "";

    private string type_;
    /// <summary>
    /// Type of account condition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_ ?? TypeDefaultValue; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return type_ != null; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      type_ = null;
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private readonly static string StatusDefaultValue = "";

    private string status_;
    /// <summary>
    /// Status of the condition, one of True, False, Unknown.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Status {
      get { return status_ ?? StatusDefaultValue; }
      set {
        status_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStatus {
      get { return status_ != null; }
    }
    /// <summary>Clears the value of the "status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStatus() {
      status_ = null;
    }

    /// <summary>Field number for the "lastTransitionTime" field.</summary>
    public const int LastTransitionTimeFieldNumber = 3;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time lastTransitionTime_;
    /// <summary>
    /// Last time the condition transitioned from one status to another.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time LastTransitionTime {
      get { return lastTransitionTime_; }
      set {
        lastTransitionTime_ = value;
      }
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 4;
    private readonly static string ReasonDefaultValue = "";

    private string reason_;
    /// <summary>
    /// The reason for the condition's last transition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Reason {
      get { return reason_ ?? ReasonDefaultValue; }
      set {
        reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "reason" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasReason {
      get { return reason_ != null; }
    }
    /// <summary>Clears the value of the "reason" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReason() {
      reason_ = null;
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 5;
    private readonly static string MessageDefaultValue = "";

    private string message_;
    /// <summary>
    /// A human readable message indicating details about the transition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_ ?? MessageDefaultValue; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMessage {
      get { return message_ != null; }
    }
    /// <summary>Clears the value of the "message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessage() {
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FeaturesetCondition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FeaturesetCondition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Status != other.Status) return false;
      if (!object.Equals(LastTransitionTime, other.LastTransitionTime)) return false;
      if (Reason != other.Reason) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasStatus) hash ^= Status.GetHashCode();
      if (lastTransitionTime_ != null) hash ^= LastTransitionTime.GetHashCode();
      if (HasReason) hash ^= Reason.GetHashCode();
      if (HasMessage) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasStatus) {
        output.WriteRawTag(18);
        output.WriteString(Status);
      }
      if (lastTransitionTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LastTransitionTime);
      }
      if (HasReason) {
        output.WriteRawTag(34);
        output.WriteString(Reason);
      }
      if (HasMessage) {
        output.WriteRawTag(42);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasStatus) {
        output.WriteRawTag(18);
        output.WriteString(Status);
      }
      if (lastTransitionTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LastTransitionTime);
      }
      if (HasReason) {
        output.WriteRawTag(34);
        output.WriteString(Reason);
      }
      if (HasMessage) {
        output.WriteRawTag(42);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (HasStatus) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Status);
      }
      if (lastTransitionTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastTransitionTime);
      }
      if (HasReason) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
      }
      if (HasMessage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FeaturesetCondition other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasStatus) {
        Status = other.Status;
      }
      if (other.lastTransitionTime_ != null) {
        if (lastTransitionTime_ == null) {
          LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
        }
        LastTransitionTime.MergeFrom(other.LastTransitionTime);
      }
      if (other.HasReason) {
        Reason = other.Reason;
      }
      if (other.HasMessage) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Status = input.ReadString();
            break;
          }
          case 26: {
            if (lastTransitionTime_ == null) {
              LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(LastTransitionTime);
            break;
          }
          case 34: {
            Reason = input.ReadString();
            break;
          }
          case 42: {
            Message = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Status = input.ReadString();
            break;
          }
          case 26: {
            if (lastTransitionTime_ == null) {
              LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(LastTransitionTime);
            break;
          }
          case 34: {
            Reason = input.ReadString();
            break;
          }
          case 42: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// +kubebuilder:object:root=true
  /// FeaturesetList contains a list of Featureset
  /// </summary>
  public sealed partial class FeaturesetList : pb::IMessage<FeaturesetList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FeaturesetList> _parser = new pb::MessageParser<FeaturesetList>(() => new FeaturesetList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FeaturesetList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[59]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturesetList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturesetList(FeaturesetList other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturesetList Clone() {
      return new FeaturesetList(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Featureset> _repeated_items_codec
        = pb::FieldCodec.ForMessage(18, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Featureset.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Featureset> items_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Featureset>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Featureset> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FeaturesetList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FeaturesetList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(ref output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FeaturesetList other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// FeaturesetSpec contain the desired state of a Featureset.
  /// </summary>
  public sealed partial class FeaturesetSpec : pb::IMessage<FeaturesetSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FeaturesetSpec> _parser = new pb::MessageParser<FeaturesetSpec>(() => new FeaturesetSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FeaturesetSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[60]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturesetSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturesetSpec(FeaturesetSpec other) : this() {
      versionName_ = other.versionName_;
      description_ = other.description_;
      features_ = other.features_.Clone();
      owner_ = other.owner_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturesetSpec Clone() {
      return new FeaturesetSpec(this);
    }

    /// <summary>Field number for the "versionName" field.</summary>
    public const int VersionNameFieldNumber = 1;
    private readonly static string VersionNameDefaultValue = "";

    private string versionName_;
    /// <summary>
    /// The product version of the featureset
    /// +kubebuilder:default:=""
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VersionName {
      get { return versionName_ ?? VersionNameDefaultValue; }
      set {
        versionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "versionName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasVersionName {
      get { return versionName_ != null; }
    }
    /// <summary>Clears the value of the "versionName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearVersionName() {
      versionName_ = null;
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private readonly static string DescriptionDefaultValue = "";

    private string description_;
    /// <summary>
    /// User provided description
    /// +kubebuilder:validation:Optional
    /// +kubebuilder:default:=""
    /// +kubebuilder:validation:MaxLength=512
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_ ?? DescriptionDefaultValue; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "description" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDescription {
      get { return description_ != null; }
    }
    /// <summary>Clears the value of the "description" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDescription() {
      description_ = null;
    }

    /// <summary>Field number for the "features" field.</summary>
    public const int FeaturesFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_features_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> features_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Reference to the feature names of this featureset
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Features {
      get { return features_; }
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 4;
    private readonly static string OwnerDefaultValue = "";

    private string owner_;
    /// <summary>
    /// The owner account name
    /// +kubebuilder:default:="no-one"
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owner {
      get { return owner_ ?? OwnerDefaultValue; }
      set {
        owner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "owner" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOwner {
      get { return owner_ != null; }
    }
    /// <summary>Clears the value of the "owner" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOwner() {
      owner_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FeaturesetSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FeaturesetSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (VersionName != other.VersionName) return false;
      if (Description != other.Description) return false;
      if(!features_.Equals(other.features_)) return false;
      if (Owner != other.Owner) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasVersionName) hash ^= VersionName.GetHashCode();
      if (HasDescription) hash ^= Description.GetHashCode();
      hash ^= features_.GetHashCode();
      if (HasOwner) hash ^= Owner.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasVersionName) {
        output.WriteRawTag(10);
        output.WriteString(VersionName);
      }
      if (HasDescription) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      features_.WriteTo(output, _repeated_features_codec);
      if (HasOwner) {
        output.WriteRawTag(34);
        output.WriteString(Owner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasVersionName) {
        output.WriteRawTag(10);
        output.WriteString(VersionName);
      }
      if (HasDescription) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      features_.WriteTo(ref output, _repeated_features_codec);
      if (HasOwner) {
        output.WriteRawTag(34);
        output.WriteString(Owner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasVersionName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VersionName);
      }
      if (HasDescription) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      size += features_.CalculateSize(_repeated_features_codec);
      if (HasOwner) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owner);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FeaturesetSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasVersionName) {
        VersionName = other.VersionName;
      }
      if (other.HasDescription) {
        Description = other.Description;
      }
      features_.Add(other.features_);
      if (other.HasOwner) {
        Owner = other.Owner;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            VersionName = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            features_.AddEntriesFrom(input, _repeated_features_codec);
            break;
          }
          case 34: {
            Owner = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            VersionName = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            features_.AddEntriesFrom(ref input, _repeated_features_codec);
            break;
          }
          case 34: {
            Owner = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// FeaturesetStatus defines the observed state of Featureset
  /// </summary>
  public sealed partial class FeaturesetStatus : pb::IMessage<FeaturesetStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FeaturesetStatus> _parser = new pb::MessageParser<FeaturesetStatus>(() => new FeaturesetStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FeaturesetStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[61]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturesetStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturesetStatus(FeaturesetStatus other) : this() {
      conditions_ = other.conditions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeaturesetStatus Clone() {
      return new FeaturesetStatus(this);
    }

    /// <summary>Field number for the "conditions" field.</summary>
    public const int ConditionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturesetCondition> _repeated_conditions_codec
        = pb::FieldCodec.ForMessage(10, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturesetCondition.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturesetCondition> conditions_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturesetCondition>();
    /// <summary>
    /// +optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.FeaturesetCondition> Conditions {
      get { return conditions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FeaturesetStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FeaturesetStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!conditions_.Equals(other.conditions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= conditions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      conditions_.WriteTo(output, _repeated_conditions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      conditions_.WriteTo(ref output, _repeated_conditions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += conditions_.CalculateSize(_repeated_conditions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FeaturesetStatus other) {
      if (other == null) {
        return;
      }
      conditions_.Add(other.conditions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            conditions_.AddEntriesFrom(input, _repeated_conditions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            conditions_.AddEntriesFrom(ref input, _repeated_conditions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class FlatFileSpec : pb::IMessage<FlatFileSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FlatFileSpec> _parser = new pb::MessageParser<FlatFileSpec>(() => new FlatFileSpec());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FlatFileSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[62]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FlatFileSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FlatFileSpec(FlatFileSpec other) : this() {
      _hasBits0 = other._hasBits0;
      fileType_ = other.fileType_;
      delimiter_ = other.delimiter_;
      quote_ = other.quote_;
      escapeChar_ = other.escapeChar_;
      commentChars_ = other.commentChars_;
      header_ = other.header_;
      skipRows_ = other.skipRows_;
      nullValues_ = other.nullValues_;
      encoding_ = other.encoding_;
      maxRows_ = other.maxRows_;
      strict_ = other.strict_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FlatFileSpec Clone() {
      return new FlatFileSpec(this);
    }

    /// <summary>Field number for the "fileType" field.</summary>
    public const int FileTypeFieldNumber = 4;
    private readonly static string FileTypeDefaultValue = "";

    private string fileType_;
    /// <summary>
    /// The text file type
    /// Default: csv
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FileType {
      get { return fileType_ ?? FileTypeDefaultValue; }
      set {
        fileType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "fileType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFileType {
      get { return fileType_ != null; }
    }
    /// <summary>Clears the value of the "fileType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFileType() {
      fileType_ = null;
    }

    /// <summary>Field number for the "delimiter" field.</summary>
    public const int DelimiterFieldNumber = 5;
    private readonly static string DelimiterDefaultValue = "";

    private string delimiter_;
    /// <summary>
    /// Refers to the character used to separate fields.
    /// Default to comma
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Delimiter {
      get { return delimiter_ ?? DelimiterDefaultValue; }
      set {
        delimiter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "delimiter" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDelimiter {
      get { return delimiter_ != null; }
    }
    /// <summary>Clears the value of the "delimiter" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDelimiter() {
      delimiter_ = null;
    }

    /// <summary>Field number for the "quote" field.</summary>
    public const int QuoteFieldNumber = 6;
    private readonly static string QuoteDefaultValue = "";

    private string quote_;
    /// <summary>
    /// The quata char.
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Quote {
      get { return quote_ ?? QuoteDefaultValue; }
      set {
        quote_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "quote" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasQuote {
      get { return quote_ != null; }
    }
    /// <summary>Clears the value of the "quote" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearQuote() {
      quote_ = null;
    }

    /// <summary>Field number for the "escapeChar" field.</summary>
    public const int EscapeCharFieldNumber = 7;
    private readonly static string EscapeCharDefaultValue = "";

    private string escapeChar_;
    /// <summary>
    /// the char used to escape the delimiter when quoting
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EscapeChar {
      get { return escapeChar_ ?? EscapeCharDefaultValue; }
      set {
        escapeChar_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "escapeChar" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEscapeChar {
      get { return escapeChar_ != null; }
    }
    /// <summary>Clears the value of the "escapeChar" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEscapeChar() {
      escapeChar_ = null;
    }

    /// <summary>Field number for the "commentChars" field.</summary>
    public const int CommentCharsFieldNumber = 8;
    private readonly static string CommentCharsDefaultValue = "";

    private string commentChars_;
    /// <summary>
    /// CommentCharacter(s) to split comments off the end of lines.
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CommentChars {
      get { return commentChars_ ?? CommentCharsDefaultValue; }
      set {
        commentChars_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "commentChars" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCommentChars {
      get { return commentChars_ != null; }
    }
    /// <summary>Clears the value of the "commentChars" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCommentChars() {
      commentChars_ = null;
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 9;
    private readonly static bool HeaderDefaultValue = false;

    private bool header_;
    /// <summary>
    /// Check if there is an header
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Header {
      get { if ((_hasBits0 & 1) != 0) { return header_; } else { return HeaderDefaultValue; } }
      set {
        _hasBits0 |= 1;
        header_ = value;
      }
    }
    /// <summary>Gets whether the "header" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHeader {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "header" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHeader() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "skipRows" field.</summary>
    public const int SkipRowsFieldNumber = 10;
    private readonly static int SkipRowsDefaultValue = 0;

    private int skipRows_;
    /// <summary>
    /// The number of rows to skip
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SkipRows {
      get { if ((_hasBits0 & 2) != 0) { return skipRows_; } else { return SkipRowsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        skipRows_ = value;
      }
    }
    /// <summary>Gets whether the "skipRows" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSkipRows {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "skipRows" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSkipRows() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "nullValues" field.</summary>
    public const int NullValuesFieldNumber = 11;
    private readonly static string NullValuesDefaultValue = "";

    private string nullValues_;
    /// <summary>
    /// NullValue	is a sequence of values to replace with NA.
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NullValues {
      get { return nullValues_ ?? NullValuesDefaultValue; }
      set {
        nullValues_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "nullValues" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNullValues {
      get { return nullValues_ != null; }
    }
    /// <summary>Clears the value of the "nullValues" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNullValues() {
      nullValues_ = null;
    }

    /// <summary>Field number for the "encoding" field.</summary>
    public const int EncodingFieldNumber = 12;
    private readonly static string EncodingDefaultValue = "";

    private string encoding_;
    /// <summary>
    /// Encoding for Unicode (e.g., 'utf-8' for UTF-8 encoded text).
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Encoding {
      get { return encoding_ ?? EncodingDefaultValue; }
      set {
        encoding_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "encoding" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEncoding {
      get { return encoding_ != null; }
    }
    /// <summary>Clears the value of the "encoding" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEncoding() {
      encoding_ = null;
    }

    /// <summary>Field number for the "maxRows" field.</summary>
    public const int MaxRowsFieldNumber = 13;
    private readonly static int MaxRowsDefaultValue = 0;

    private int maxRows_;
    /// <summary>
    /// The maximum number of rows to read.
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxRows {
      get { if ((_hasBits0 & 4) != 0) { return maxRows_; } else { return MaxRowsDefaultValue; } }
      set {
        _hasBits0 |= 4;
        maxRows_ = value;
      }
    }
    /// <summary>Gets whether the "maxRows" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMaxRows {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "maxRows" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMaxRows() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "strict" field.</summary>
    public const int StrictFieldNumber = 14;
    private readonly static bool StrictDefaultValue = false;

    private bool strict_;
    /// <summary>
    /// If true, the import will fail if there is an error
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Strict {
      get { if ((_hasBits0 & 8) != 0) { return strict_; } else { return StrictDefaultValue; } }
      set {
        _hasBits0 |= 8;
        strict_ = value;
      }
    }
    /// <summary>Gets whether the "strict" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStrict {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "strict" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStrict() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FlatFileSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FlatFileSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FileType != other.FileType) return false;
      if (Delimiter != other.Delimiter) return false;
      if (Quote != other.Quote) return false;
      if (EscapeChar != other.EscapeChar) return false;
      if (CommentChars != other.CommentChars) return false;
      if (Header != other.Header) return false;
      if (SkipRows != other.SkipRows) return false;
      if (NullValues != other.NullValues) return false;
      if (Encoding != other.Encoding) return false;
      if (MaxRows != other.MaxRows) return false;
      if (Strict != other.Strict) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasFileType) hash ^= FileType.GetHashCode();
      if (HasDelimiter) hash ^= Delimiter.GetHashCode();
      if (HasQuote) hash ^= Quote.GetHashCode();
      if (HasEscapeChar) hash ^= EscapeChar.GetHashCode();
      if (HasCommentChars) hash ^= CommentChars.GetHashCode();
      if (HasHeader) hash ^= Header.GetHashCode();
      if (HasSkipRows) hash ^= SkipRows.GetHashCode();
      if (HasNullValues) hash ^= NullValues.GetHashCode();
      if (HasEncoding) hash ^= Encoding.GetHashCode();
      if (HasMaxRows) hash ^= MaxRows.GetHashCode();
      if (HasStrict) hash ^= Strict.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasFileType) {
        output.WriteRawTag(34);
        output.WriteString(FileType);
      }
      if (HasDelimiter) {
        output.WriteRawTag(42);
        output.WriteString(Delimiter);
      }
      if (HasQuote) {
        output.WriteRawTag(50);
        output.WriteString(Quote);
      }
      if (HasEscapeChar) {
        output.WriteRawTag(58);
        output.WriteString(EscapeChar);
      }
      if (HasCommentChars) {
        output.WriteRawTag(66);
        output.WriteString(CommentChars);
      }
      if (HasHeader) {
        output.WriteRawTag(72);
        output.WriteBool(Header);
      }
      if (HasSkipRows) {
        output.WriteRawTag(80);
        output.WriteInt32(SkipRows);
      }
      if (HasNullValues) {
        output.WriteRawTag(90);
        output.WriteString(NullValues);
      }
      if (HasEncoding) {
        output.WriteRawTag(98);
        output.WriteString(Encoding);
      }
      if (HasMaxRows) {
        output.WriteRawTag(104);
        output.WriteInt32(MaxRows);
      }
      if (HasStrict) {
        output.WriteRawTag(112);
        output.WriteBool(Strict);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasFileType) {
        output.WriteRawTag(34);
        output.WriteString(FileType);
      }
      if (HasDelimiter) {
        output.WriteRawTag(42);
        output.WriteString(Delimiter);
      }
      if (HasQuote) {
        output.WriteRawTag(50);
        output.WriteString(Quote);
      }
      if (HasEscapeChar) {
        output.WriteRawTag(58);
        output.WriteString(EscapeChar);
      }
      if (HasCommentChars) {
        output.WriteRawTag(66);
        output.WriteString(CommentChars);
      }
      if (HasHeader) {
        output.WriteRawTag(72);
        output.WriteBool(Header);
      }
      if (HasSkipRows) {
        output.WriteRawTag(80);
        output.WriteInt32(SkipRows);
      }
      if (HasNullValues) {
        output.WriteRawTag(90);
        output.WriteString(NullValues);
      }
      if (HasEncoding) {
        output.WriteRawTag(98);
        output.WriteString(Encoding);
      }
      if (HasMaxRows) {
        output.WriteRawTag(104);
        output.WriteInt32(MaxRows);
      }
      if (HasStrict) {
        output.WriteRawTag(112);
        output.WriteBool(Strict);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasFileType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FileType);
      }
      if (HasDelimiter) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Delimiter);
      }
      if (HasQuote) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Quote);
      }
      if (HasEscapeChar) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EscapeChar);
      }
      if (HasCommentChars) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CommentChars);
      }
      if (HasHeader) {
        size += 1 + 1;
      }
      if (HasSkipRows) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SkipRows);
      }
      if (HasNullValues) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NullValues);
      }
      if (HasEncoding) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Encoding);
      }
      if (HasMaxRows) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxRows);
      }
      if (HasStrict) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FlatFileSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasFileType) {
        FileType = other.FileType;
      }
      if (other.HasDelimiter) {
        Delimiter = other.Delimiter;
      }
      if (other.HasQuote) {
        Quote = other.Quote;
      }
      if (other.HasEscapeChar) {
        EscapeChar = other.EscapeChar;
      }
      if (other.HasCommentChars) {
        CommentChars = other.CommentChars;
      }
      if (other.HasHeader) {
        Header = other.Header;
      }
      if (other.HasSkipRows) {
        SkipRows = other.SkipRows;
      }
      if (other.HasNullValues) {
        NullValues = other.NullValues;
      }
      if (other.HasEncoding) {
        Encoding = other.Encoding;
      }
      if (other.HasMaxRows) {
        MaxRows = other.MaxRows;
      }
      if (other.HasStrict) {
        Strict = other.Strict;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 34: {
            FileType = input.ReadString();
            break;
          }
          case 42: {
            Delimiter = input.ReadString();
            break;
          }
          case 50: {
            Quote = input.ReadString();
            break;
          }
          case 58: {
            EscapeChar = input.ReadString();
            break;
          }
          case 66: {
            CommentChars = input.ReadString();
            break;
          }
          case 72: {
            Header = input.ReadBool();
            break;
          }
          case 80: {
            SkipRows = input.ReadInt32();
            break;
          }
          case 90: {
            NullValues = input.ReadString();
            break;
          }
          case 98: {
            Encoding = input.ReadString();
            break;
          }
          case 104: {
            MaxRows = input.ReadInt32();
            break;
          }
          case 112: {
            Strict = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 34: {
            FileType = input.ReadString();
            break;
          }
          case 42: {
            Delimiter = input.ReadString();
            break;
          }
          case 50: {
            Quote = input.ReadString();
            break;
          }
          case 58: {
            EscapeChar = input.ReadString();
            break;
          }
          case 66: {
            CommentChars = input.ReadString();
            break;
          }
          case 72: {
            Header = input.ReadBool();
            break;
          }
          case 80: {
            SkipRows = input.ReadInt32();
            break;
          }
          case 90: {
            NullValues = input.ReadString();
            break;
          }
          case 98: {
            Encoding = input.ReadString();
            break;
          }
          case 104: {
            MaxRows = input.ReadInt32();
            break;
          }
          case 112: {
            Strict = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GitLocation : pb::IMessage<GitLocation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GitLocation> _parser = new pb::MessageParser<GitLocation>(() => new GitLocation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GitLocation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[63]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GitLocation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GitLocation(GitLocation other) : this() {
      gitConnectionName_ = other.gitConnectionName_;
      url_ = other.url_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GitLocation Clone() {
      return new GitLocation(this);
    }

    /// <summary>Field number for the "gitConnectionName" field.</summary>
    public const int GitConnectionNameFieldNumber = 1;
    private readonly static string GitConnectionNameDefaultValue = "";

    private string gitConnectionName_;
    /// <summary>
    /// GitConnectionName
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GitConnectionName {
      get { return gitConnectionName_ ?? GitConnectionNameDefaultValue; }
      set {
        gitConnectionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "gitConnectionName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGitConnectionName {
      get { return gitConnectionName_ != null; }
    }
    /// <summary>Clears the value of the "gitConnectionName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGitConnectionName() {
      gitConnectionName_ = null;
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 2;
    private readonly static string UrlDefaultValue = "";

    private string url_;
    /// <summary>
    /// URL of the stakeholder
    /// +kubebuilder:validation:MaxLength=256
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_ ?? UrlDefaultValue; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUrl {
      get { return url_ != null; }
    }
    /// <summary>Clears the value of the "url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUrl() {
      url_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GitLocation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GitLocation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GitConnectionName != other.GitConnectionName) return false;
      if (Url != other.Url) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasGitConnectionName) hash ^= GitConnectionName.GetHashCode();
      if (HasUrl) hash ^= Url.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasGitConnectionName) {
        output.WriteRawTag(10);
        output.WriteString(GitConnectionName);
      }
      if (HasUrl) {
        output.WriteRawTag(18);
        output.WriteString(Url);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasGitConnectionName) {
        output.WriteRawTag(10);
        output.WriteString(GitConnectionName);
      }
      if (HasUrl) {
        output.WriteRawTag(18);
        output.WriteString(Url);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasGitConnectionName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GitConnectionName);
      }
      if (HasUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GitLocation other) {
      if (other == null) {
        return;
      }
      if (other.HasGitConnectionName) {
        GitConnectionName = other.GitConnectionName;
      }
      if (other.HasUrl) {
        Url = other.Url;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            GitConnectionName = input.ReadString();
            break;
          }
          case 18: {
            Url = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            GitConnectionName = input.ReadString();
            break;
          }
          case 18: {
            Url = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ImageLocation : pb::IMessage<ImageLocation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ImageLocation> _parser = new pb::MessageParser<ImageLocation>(() => new ImageLocation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImageLocation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[64]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImageLocation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImageLocation(ImageLocation other) : this() {
      name_ = other.name_;
      registryConnectionName_ = other.registryConnectionName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImageLocation Clone() {
      return new ImageLocation(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private readonly static string NameDefaultValue = "";

    private string name_;
    /// <summary>
    /// The canonical name of the image repo.
    /// The default value is docker/productname
    /// +kubebuilder:validation:MaxLength=256
    /// optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "registryConnectionName" field.</summary>
    public const int RegistryConnectionNameFieldNumber = 2;
    private readonly static string RegistryConnectionNameDefaultValue = "";

    private string registryConnectionName_;
    /// <summary>
    /// The connection of the docker registry provider
    /// If the value is empty, the system will not push images.
    /// optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RegistryConnectionName {
      get { return registryConnectionName_ ?? RegistryConnectionNameDefaultValue; }
      set {
        registryConnectionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "registryConnectionName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRegistryConnectionName {
      get { return registryConnectionName_ != null; }
    }
    /// <summary>Clears the value of the "registryConnectionName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRegistryConnectionName() {
      registryConnectionName_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImageLocation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImageLocation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (RegistryConnectionName != other.RegistryConnectionName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasName) hash ^= Name.GetHashCode();
      if (HasRegistryConnectionName) hash ^= RegistryConnectionName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasRegistryConnectionName) {
        output.WriteRawTag(18);
        output.WriteString(RegistryConnectionName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasRegistryConnectionName) {
        output.WriteRawTag(18);
        output.WriteString(RegistryConnectionName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasRegistryConnectionName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RegistryConnectionName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImageLocation other) {
      if (other == null) {
        return;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasRegistryConnectionName) {
        RegistryConnectionName = other.RegistryConnectionName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            RegistryConnectionName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            RegistryConnectionName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// LabelingPipeline represents the ETL flow from the data sources to a processed dataset, ready for training.
  /// +kubebuilder:object:root=true
  /// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
  /// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
  /// +kubebuilder:subresource:status
  /// +kubebuilder:resource:path=labelingpipelines,singular=labelingpipeline,categories={data,modela}
  /// </summary>
  public sealed partial class LabelingPipeline : pb::IMessage<LabelingPipeline>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LabelingPipeline> _parser = new pb::MessageParser<LabelingPipeline>(() => new LabelingPipeline());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LabelingPipeline> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[65]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabelingPipeline() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabelingPipeline(LabelingPipeline other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      spec_ = other.spec_ != null ? other.spec_.Clone() : null;
      status_ = other.status_ != null ? other.status_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabelingPipeline Clone() {
      return new LabelingPipeline(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "spec" field.</summary>
    public const int SpecFieldNumber = 2;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.LabelingPipelineSpec spec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.LabelingPipelineSpec Spec {
      get { return spec_; }
      set {
        spec_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 3;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.LabelingPipelineStatus status_;
    /// <summary>
    /// +optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.LabelingPipelineStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LabelingPipeline);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LabelingPipeline other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if (!object.Equals(Spec, other.Spec)) return false;
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      if (spec_ != null) hash ^= Spec.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      if (spec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Spec);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LabelingPipeline other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      if (other.spec_ != null) {
        if (spec_ == null) {
          Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.LabelingPipelineSpec();
        }
        Spec.MergeFrom(other.Spec);
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.LabelingPipelineStatus();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.LabelingPipelineSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.LabelingPipelineStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.LabelingPipelineSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.LabelingPipelineStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// LabelingPipelineCondition describes the state of a wrangler at a certain point.
  /// </summary>
  public sealed partial class LabelingPipelineCondition : pb::IMessage<LabelingPipelineCondition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LabelingPipelineCondition> _parser = new pb::MessageParser<LabelingPipelineCondition>(() => new LabelingPipelineCondition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LabelingPipelineCondition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[66]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabelingPipelineCondition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabelingPipelineCondition(LabelingPipelineCondition other) : this() {
      type_ = other.type_;
      status_ = other.status_;
      lastTransitionTime_ = other.lastTransitionTime_ != null ? other.lastTransitionTime_.Clone() : null;
      reason_ = other.reason_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabelingPipelineCondition Clone() {
      return new LabelingPipelineCondition(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static string TypeDefaultValue = "";

    private string type_;
    /// <summary>
    /// Type of account condition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_ ?? TypeDefaultValue; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return type_ != null; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      type_ = null;
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private readonly static string StatusDefaultValue = "";

    private string status_;
    /// <summary>
    /// Status of the condition, one of True, False, Unknown.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Status {
      get { return status_ ?? StatusDefaultValue; }
      set {
        status_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStatus {
      get { return status_ != null; }
    }
    /// <summary>Clears the value of the "status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStatus() {
      status_ = null;
    }

    /// <summary>Field number for the "lastTransitionTime" field.</summary>
    public const int LastTransitionTimeFieldNumber = 3;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time lastTransitionTime_;
    /// <summary>
    /// Last time the condition transitioned from one status to another.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time LastTransitionTime {
      get { return lastTransitionTime_; }
      set {
        lastTransitionTime_ = value;
      }
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 4;
    private readonly static string ReasonDefaultValue = "";

    private string reason_;
    /// <summary>
    /// The reason for the condition's last transition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Reason {
      get { return reason_ ?? ReasonDefaultValue; }
      set {
        reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "reason" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasReason {
      get { return reason_ != null; }
    }
    /// <summary>Clears the value of the "reason" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReason() {
      reason_ = null;
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 5;
    private readonly static string MessageDefaultValue = "";

    private string message_;
    /// <summary>
    /// A human readable message indicating details about the transition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_ ?? MessageDefaultValue; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMessage {
      get { return message_ != null; }
    }
    /// <summary>Clears the value of the "message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessage() {
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LabelingPipelineCondition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LabelingPipelineCondition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Status != other.Status) return false;
      if (!object.Equals(LastTransitionTime, other.LastTransitionTime)) return false;
      if (Reason != other.Reason) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasStatus) hash ^= Status.GetHashCode();
      if (lastTransitionTime_ != null) hash ^= LastTransitionTime.GetHashCode();
      if (HasReason) hash ^= Reason.GetHashCode();
      if (HasMessage) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasStatus) {
        output.WriteRawTag(18);
        output.WriteString(Status);
      }
      if (lastTransitionTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LastTransitionTime);
      }
      if (HasReason) {
        output.WriteRawTag(34);
        output.WriteString(Reason);
      }
      if (HasMessage) {
        output.WriteRawTag(42);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasStatus) {
        output.WriteRawTag(18);
        output.WriteString(Status);
      }
      if (lastTransitionTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LastTransitionTime);
      }
      if (HasReason) {
        output.WriteRawTag(34);
        output.WriteString(Reason);
      }
      if (HasMessage) {
        output.WriteRawTag(42);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (HasStatus) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Status);
      }
      if (lastTransitionTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastTransitionTime);
      }
      if (HasReason) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
      }
      if (HasMessage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LabelingPipelineCondition other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasStatus) {
        Status = other.Status;
      }
      if (other.lastTransitionTime_ != null) {
        if (lastTransitionTime_ == null) {
          LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
        }
        LastTransitionTime.MergeFrom(other.LastTransitionTime);
      }
      if (other.HasReason) {
        Reason = other.Reason;
      }
      if (other.HasMessage) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Status = input.ReadString();
            break;
          }
          case 26: {
            if (lastTransitionTime_ == null) {
              LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(LastTransitionTime);
            break;
          }
          case 34: {
            Reason = input.ReadString();
            break;
          }
          case 42: {
            Message = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Status = input.ReadString();
            break;
          }
          case 26: {
            if (lastTransitionTime_ == null) {
              LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(LastTransitionTime);
            break;
          }
          case 34: {
            Reason = input.ReadString();
            break;
          }
          case 42: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// +kubebuilder:object:root=true
  /// LabelingPipelineList contain the list of LabelingPipeline
  /// </summary>
  public sealed partial class LabelingPipelineList : pb::IMessage<LabelingPipelineList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LabelingPipelineList> _parser = new pb::MessageParser<LabelingPipelineList>(() => new LabelingPipelineList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LabelingPipelineList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[67]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabelingPipelineList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabelingPipelineList(LabelingPipelineList other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabelingPipelineList Clone() {
      return new LabelingPipelineList(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.LabelingPipeline> _repeated_items_codec
        = pb::FieldCodec.ForMessage(18, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.LabelingPipeline.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.LabelingPipeline> items_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.LabelingPipeline>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.LabelingPipeline> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LabelingPipelineList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LabelingPipelineList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(ref output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LabelingPipelineList other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// LabelingPipeline represent a feature set object in the feature store.
  /// +kubebuilder:object:root=true
  /// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status",description=""
  /// +kubebuilder:printcolumn:name="Version",type="string",JSONPath=".spec.versionName"
  /// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
  /// +kubebuilder:resource:path=labelingpipelineruns,singular=labelingpipelinerun,categories={data,modela}
  /// +kubebuilder:subresource:status
  /// </summary>
  public sealed partial class LabelingPipelineRun : pb::IMessage<LabelingPipelineRun>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LabelingPipelineRun> _parser = new pb::MessageParser<LabelingPipelineRun>(() => new LabelingPipelineRun());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LabelingPipelineRun> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[68]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabelingPipelineRun() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabelingPipelineRun(LabelingPipelineRun other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      spec_ = other.spec_ != null ? other.spec_.Clone() : null;
      status_ = other.status_ != null ? other.status_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabelingPipelineRun Clone() {
      return new LabelingPipelineRun(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "spec" field.</summary>
    public const int SpecFieldNumber = 2;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.LabelingPipelineRunSpec spec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.LabelingPipelineRunSpec Spec {
      get { return spec_; }
      set {
        spec_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 3;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.LabelingPipelineRunStatus status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.LabelingPipelineRunStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LabelingPipelineRun);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LabelingPipelineRun other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if (!object.Equals(Spec, other.Spec)) return false;
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      if (spec_ != null) hash ^= Spec.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      if (spec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Spec);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LabelingPipelineRun other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      if (other.spec_ != null) {
        if (spec_ == null) {
          Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.LabelingPipelineRunSpec();
        }
        Spec.MergeFrom(other.Spec);
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.LabelingPipelineRunStatus();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.LabelingPipelineRunSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.LabelingPipelineRunStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.LabelingPipelineRunSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.LabelingPipelineRunStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// LabelingPipelineRunCondition describes the state of a deployment at a certain point.
  /// </summary>
  public sealed partial class LabelingPipelineRunCondition : pb::IMessage<LabelingPipelineRunCondition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LabelingPipelineRunCondition> _parser = new pb::MessageParser<LabelingPipelineRunCondition>(() => new LabelingPipelineRunCondition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LabelingPipelineRunCondition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[69]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabelingPipelineRunCondition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabelingPipelineRunCondition(LabelingPipelineRunCondition other) : this() {
      type_ = other.type_;
      status_ = other.status_;
      lastTransitionTime_ = other.lastTransitionTime_ != null ? other.lastTransitionTime_.Clone() : null;
      reason_ = other.reason_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabelingPipelineRunCondition Clone() {
      return new LabelingPipelineRunCondition(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static string TypeDefaultValue = "";

    private string type_;
    /// <summary>
    /// Type of account condition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_ ?? TypeDefaultValue; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return type_ != null; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      type_ = null;
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private readonly static string StatusDefaultValue = "";

    private string status_;
    /// <summary>
    /// Status of the condition, one of True, False, AutoScaler.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Status {
      get { return status_ ?? StatusDefaultValue; }
      set {
        status_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStatus {
      get { return status_ != null; }
    }
    /// <summary>Clears the value of the "status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStatus() {
      status_ = null;
    }

    /// <summary>Field number for the "lastTransitionTime" field.</summary>
    public const int LastTransitionTimeFieldNumber = 3;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time lastTransitionTime_;
    /// <summary>
    /// Last time the condition transitioned from one status to another.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time LastTransitionTime {
      get { return lastTransitionTime_; }
      set {
        lastTransitionTime_ = value;
      }
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 4;
    private readonly static string ReasonDefaultValue = "";

    private string reason_;
    /// <summary>
    /// The reason for the condition's last transition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Reason {
      get { return reason_ ?? ReasonDefaultValue; }
      set {
        reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "reason" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasReason {
      get { return reason_ != null; }
    }
    /// <summary>Clears the value of the "reason" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReason() {
      reason_ = null;
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 5;
    private readonly static string MessageDefaultValue = "";

    private string message_;
    /// <summary>
    /// A human readable message indicating details about the transition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_ ?? MessageDefaultValue; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMessage {
      get { return message_ != null; }
    }
    /// <summary>Clears the value of the "message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessage() {
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LabelingPipelineRunCondition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LabelingPipelineRunCondition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Status != other.Status) return false;
      if (!object.Equals(LastTransitionTime, other.LastTransitionTime)) return false;
      if (Reason != other.Reason) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasStatus) hash ^= Status.GetHashCode();
      if (lastTransitionTime_ != null) hash ^= LastTransitionTime.GetHashCode();
      if (HasReason) hash ^= Reason.GetHashCode();
      if (HasMessage) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasStatus) {
        output.WriteRawTag(18);
        output.WriteString(Status);
      }
      if (lastTransitionTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LastTransitionTime);
      }
      if (HasReason) {
        output.WriteRawTag(34);
        output.WriteString(Reason);
      }
      if (HasMessage) {
        output.WriteRawTag(42);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasStatus) {
        output.WriteRawTag(18);
        output.WriteString(Status);
      }
      if (lastTransitionTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LastTransitionTime);
      }
      if (HasReason) {
        output.WriteRawTag(34);
        output.WriteString(Reason);
      }
      if (HasMessage) {
        output.WriteRawTag(42);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (HasStatus) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Status);
      }
      if (lastTransitionTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastTransitionTime);
      }
      if (HasReason) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
      }
      if (HasMessage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LabelingPipelineRunCondition other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasStatus) {
        Status = other.Status;
      }
      if (other.lastTransitionTime_ != null) {
        if (lastTransitionTime_ == null) {
          LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
        }
        LastTransitionTime.MergeFrom(other.LastTransitionTime);
      }
      if (other.HasReason) {
        Reason = other.Reason;
      }
      if (other.HasMessage) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Status = input.ReadString();
            break;
          }
          case 26: {
            if (lastTransitionTime_ == null) {
              LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(LastTransitionTime);
            break;
          }
          case 34: {
            Reason = input.ReadString();
            break;
          }
          case 42: {
            Message = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Status = input.ReadString();
            break;
          }
          case 26: {
            if (lastTransitionTime_ == null) {
              LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(LastTransitionTime);
            break;
          }
          case 34: {
            Reason = input.ReadString();
            break;
          }
          case 42: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// +kubebuilder:object:root=true
  /// </summary>
  public sealed partial class LabelingPipelineRunList : pb::IMessage<LabelingPipelineRunList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LabelingPipelineRunList> _parser = new pb::MessageParser<LabelingPipelineRunList>(() => new LabelingPipelineRunList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LabelingPipelineRunList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[70]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabelingPipelineRunList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabelingPipelineRunList(LabelingPipelineRunList other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabelingPipelineRunList Clone() {
      return new LabelingPipelineRunList(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.LabelingPipelineRun> _repeated_items_codec
        = pb::FieldCodec.ForMessage(18, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.LabelingPipelineRun.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.LabelingPipelineRun> items_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.LabelingPipelineRun>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.LabelingPipelineRun> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LabelingPipelineRunList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LabelingPipelineRunList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(ref output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LabelingPipelineRunList other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// LabelSpec contain the desired state of a Label
  /// </summary>
  public sealed partial class LabelingPipelineRunSpec : pb::IMessage<LabelingPipelineRunSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LabelingPipelineRunSpec> _parser = new pb::MessageParser<LabelingPipelineRunSpec>(() => new LabelingPipelineRunSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LabelingPipelineRunSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[71]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabelingPipelineRunSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabelingPipelineRunSpec(LabelingPipelineRunSpec other) : this() {
      owner_ = other.owner_;
      versionName_ = other.versionName_;
      featurePipelineName_ = other.featurePipelineName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabelingPipelineRunSpec Clone() {
      return new LabelingPipelineRunSpec(this);
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 1;
    private readonly static string OwnerDefaultValue = "";

    private string owner_;
    /// <summary>
    /// The owner of the LabelingPipelineRunSpec
    /// +kubebuilder:default:="no-one"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owner {
      get { return owner_ ?? OwnerDefaultValue; }
      set {
        owner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "owner" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOwner {
      get { return owner_ != null; }
    }
    /// <summary>Clears the value of the "owner" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOwner() {
      owner_ = null;
    }

    /// <summary>Field number for the "versionName" field.</summary>
    public const int VersionNameFieldNumber = 2;
    private readonly static string VersionNameDefaultValue = "";

    private string versionName_;
    /// <summary>
    /// The product version for the pipeline
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VersionName {
      get { return versionName_ ?? VersionNameDefaultValue; }
      set {
        versionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "versionName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasVersionName {
      get { return versionName_ != null; }
    }
    /// <summary>Clears the value of the "versionName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearVersionName() {
      versionName_ = null;
    }

    /// <summary>Field number for the "featurePipelineName" field.</summary>
    public const int FeaturePipelineNameFieldNumber = 3;
    private readonly static string FeaturePipelineNameDefaultValue = "";

    private string featurePipelineName_;
    /// <summary>
    /// LabelPipelineName specifies the name of LabelingPipeline
    /// +kubebuilder:validation:MaxLength=64
    /// +kubebuilder:validation:MinLength=1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FeaturePipelineName {
      get { return featurePipelineName_ ?? FeaturePipelineNameDefaultValue; }
      set {
        featurePipelineName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "featurePipelineName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFeaturePipelineName {
      get { return featurePipelineName_ != null; }
    }
    /// <summary>Clears the value of the "featurePipelineName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFeaturePipelineName() {
      featurePipelineName_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LabelingPipelineRunSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LabelingPipelineRunSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Owner != other.Owner) return false;
      if (VersionName != other.VersionName) return false;
      if (FeaturePipelineName != other.FeaturePipelineName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasOwner) hash ^= Owner.GetHashCode();
      if (HasVersionName) hash ^= VersionName.GetHashCode();
      if (HasFeaturePipelineName) hash ^= FeaturePipelineName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasOwner) {
        output.WriteRawTag(10);
        output.WriteString(Owner);
      }
      if (HasVersionName) {
        output.WriteRawTag(18);
        output.WriteString(VersionName);
      }
      if (HasFeaturePipelineName) {
        output.WriteRawTag(26);
        output.WriteString(FeaturePipelineName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasOwner) {
        output.WriteRawTag(10);
        output.WriteString(Owner);
      }
      if (HasVersionName) {
        output.WriteRawTag(18);
        output.WriteString(VersionName);
      }
      if (HasFeaturePipelineName) {
        output.WriteRawTag(26);
        output.WriteString(FeaturePipelineName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasOwner) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owner);
      }
      if (HasVersionName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VersionName);
      }
      if (HasFeaturePipelineName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FeaturePipelineName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LabelingPipelineRunSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasOwner) {
        Owner = other.Owner;
      }
      if (other.HasVersionName) {
        VersionName = other.VersionName;
      }
      if (other.HasFeaturePipelineName) {
        FeaturePipelineName = other.FeaturePipelineName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Owner = input.ReadString();
            break;
          }
          case 18: {
            VersionName = input.ReadString();
            break;
          }
          case 26: {
            FeaturePipelineName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Owner = input.ReadString();
            break;
          }
          case 18: {
            VersionName = input.ReadString();
            break;
          }
          case 26: {
            FeaturePipelineName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// LabelPipelineRunStatus defines the observed state of Label
  /// </summary>
  public sealed partial class LabelingPipelineRunStatus : pb::IMessage<LabelingPipelineRunStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LabelingPipelineRunStatus> _parser = new pb::MessageParser<LabelingPipelineRunStatus>(() => new LabelingPipelineRunStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LabelingPipelineRunStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[72]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabelingPipelineRunStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabelingPipelineRunStatus(LabelingPipelineRunStatus other) : this() {
      startTime_ = other.startTime_ != null ? other.startTime_.Clone() : null;
      completionTime_ = other.completionTime_ != null ? other.completionTime_.Clone() : null;
      conditions_ = other.conditions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabelingPipelineRunStatus Clone() {
      return new LabelingPipelineRunStatus(this);
    }

    /// <summary>Field number for the "startTime" field.</summary>
    public const int StartTimeFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time startTime_;
    /// <summary>
    /// The Start time of the run
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "completionTime" field.</summary>
    public const int CompletionTimeFieldNumber = 2;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time completionTime_;
    /// <summary>
    /// The End time of the run
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time CompletionTime {
      get { return completionTime_; }
      set {
        completionTime_ = value;
      }
    }

    /// <summary>Field number for the "conditions" field.</summary>
    public const int ConditionsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.LabelingPipelineRunCondition> _repeated_conditions_codec
        = pb::FieldCodec.ForMessage(26, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.LabelingPipelineRunCondition.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.LabelingPipelineRunCondition> conditions_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.LabelingPipelineRunCondition>();
    /// <summary>
    /// +optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.LabelingPipelineRunCondition> Conditions {
      get { return conditions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LabelingPipelineRunStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LabelingPipelineRunStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(StartTime, other.StartTime)) return false;
      if (!object.Equals(CompletionTime, other.CompletionTime)) return false;
      if(!conditions_.Equals(other.conditions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (startTime_ != null) hash ^= StartTime.GetHashCode();
      if (completionTime_ != null) hash ^= CompletionTime.GetHashCode();
      hash ^= conditions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (startTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StartTime);
      }
      if (completionTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CompletionTime);
      }
      conditions_.WriteTo(output, _repeated_conditions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (startTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StartTime);
      }
      if (completionTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CompletionTime);
      }
      conditions_.WriteTo(ref output, _repeated_conditions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (startTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
      }
      if (completionTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CompletionTime);
      }
      size += conditions_.CalculateSize(_repeated_conditions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LabelingPipelineRunStatus other) {
      if (other == null) {
        return;
      }
      if (other.startTime_ != null) {
        if (startTime_ == null) {
          StartTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
        }
        StartTime.MergeFrom(other.StartTime);
      }
      if (other.completionTime_ != null) {
        if (completionTime_ == null) {
          CompletionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
        }
        CompletionTime.MergeFrom(other.CompletionTime);
      }
      conditions_.Add(other.conditions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (startTime_ == null) {
              StartTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 18: {
            if (completionTime_ == null) {
              CompletionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(CompletionTime);
            break;
          }
          case 26: {
            conditions_.AddEntriesFrom(input, _repeated_conditions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (startTime_ == null) {
              StartTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 18: {
            if (completionTime_ == null) {
              CompletionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(CompletionTime);
            break;
          }
          case 26: {
            conditions_.AddEntriesFrom(ref input, _repeated_conditions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// LabelingPipelineSpec defines the desired state of a LabelingPipeline
  /// </summary>
  public sealed partial class LabelingPipelineSpec : pb::IMessage<LabelingPipelineSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LabelingPipelineSpec> _parser = new pb::MessageParser<LabelingPipelineSpec>(() => new LabelingPipelineSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LabelingPipelineSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[73]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabelingPipelineSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabelingPipelineSpec(LabelingPipelineSpec other) : this() {
      versionName_ = other.versionName_;
      description_ = other.description_;
      inputLabelsets_ = other.inputLabelsets_.Clone();
      recipeNames_ = other.recipeNames_.Clone();
      outputLabelset_ = other.outputLabelset_;
      schedule_ = other.schedule_;
      owner_ = other.owner_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabelingPipelineSpec Clone() {
      return new LabelingPipelineSpec(this);
    }

    /// <summary>Field number for the "versionName" field.</summary>
    public const int VersionNameFieldNumber = 1;
    private readonly static string VersionNameDefaultValue = "";

    private string versionName_;
    /// <summary>
    /// The product of the rejoiner
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VersionName {
      get { return versionName_ ?? VersionNameDefaultValue; }
      set {
        versionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "versionName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasVersionName {
      get { return versionName_ != null; }
    }
    /// <summary>Clears the value of the "versionName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearVersionName() {
      versionName_ = null;
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private readonly static string DescriptionDefaultValue = "";

    private string description_;
    /// <summary>
    /// User provided description
    /// +kubebuilder:default =""
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_ ?? DescriptionDefaultValue; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "description" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDescription {
      get { return description_ != null; }
    }
    /// <summary>Clears the value of the "description" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDescription() {
      description_ = null;
    }

    /// <summary>Field number for the "inputLabelsets" field.</summary>
    public const int InputLabelsetsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_inputLabelsets_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> inputLabelsets_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The datasets objects which are used for this pipeline. Each datafile can be from a bucket
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> InputLabelsets {
      get { return inputLabelsets_; }
    }

    /// <summary>Field number for the "recipeNames" field.</summary>
    public const int RecipeNamesFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_recipeNames_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> recipeNames_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The recipe for this pipeline.
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> RecipeNames {
      get { return recipeNames_; }
    }

    /// <summary>Field number for the "outputLabelset" field.</summary>
    public const int OutputLabelsetFieldNumber = 5;
    private readonly static string OutputLabelsetDefaultValue = "";

    private string outputLabelset_;
    /// <summary>
    /// The output file of the pipeline
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OutputLabelset {
      get { return outputLabelset_ ?? OutputLabelsetDefaultValue; }
      set {
        outputLabelset_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "outputLabelset" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOutputLabelset {
      get { return outputLabelset_ != null; }
    }
    /// <summary>Clears the value of the "outputLabelset" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOutputLabelset() {
      outputLabelset_ = null;
    }

    /// <summary>Field number for the "schedule" field.</summary>
    public const int ScheduleFieldNumber = 6;
    private readonly static string ScheduleDefaultValue = "";

    private string schedule_;
    /// <summary>
    /// A cron field to schedule the data pipeline.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Schedule {
      get { return schedule_ ?? ScheduleDefaultValue; }
      set {
        schedule_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "schedule" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSchedule {
      get { return schedule_ != null; }
    }
    /// <summary>Clears the value of the "schedule" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSchedule() {
      schedule_ = null;
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 7;
    private readonly static string OwnerDefaultValue = "";

    private string owner_;
    /// <summary>
    /// The owner account name
    /// +kubebuilder:default:="no-one"
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owner {
      get { return owner_ ?? OwnerDefaultValue; }
      set {
        owner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "owner" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOwner {
      get { return owner_ != null; }
    }
    /// <summary>Clears the value of the "owner" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOwner() {
      owner_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LabelingPipelineSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LabelingPipelineSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (VersionName != other.VersionName) return false;
      if (Description != other.Description) return false;
      if(!inputLabelsets_.Equals(other.inputLabelsets_)) return false;
      if(!recipeNames_.Equals(other.recipeNames_)) return false;
      if (OutputLabelset != other.OutputLabelset) return false;
      if (Schedule != other.Schedule) return false;
      if (Owner != other.Owner) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasVersionName) hash ^= VersionName.GetHashCode();
      if (HasDescription) hash ^= Description.GetHashCode();
      hash ^= inputLabelsets_.GetHashCode();
      hash ^= recipeNames_.GetHashCode();
      if (HasOutputLabelset) hash ^= OutputLabelset.GetHashCode();
      if (HasSchedule) hash ^= Schedule.GetHashCode();
      if (HasOwner) hash ^= Owner.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasVersionName) {
        output.WriteRawTag(10);
        output.WriteString(VersionName);
      }
      if (HasDescription) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      inputLabelsets_.WriteTo(output, _repeated_inputLabelsets_codec);
      recipeNames_.WriteTo(output, _repeated_recipeNames_codec);
      if (HasOutputLabelset) {
        output.WriteRawTag(42);
        output.WriteString(OutputLabelset);
      }
      if (HasSchedule) {
        output.WriteRawTag(50);
        output.WriteString(Schedule);
      }
      if (HasOwner) {
        output.WriteRawTag(58);
        output.WriteString(Owner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasVersionName) {
        output.WriteRawTag(10);
        output.WriteString(VersionName);
      }
      if (HasDescription) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      inputLabelsets_.WriteTo(ref output, _repeated_inputLabelsets_codec);
      recipeNames_.WriteTo(ref output, _repeated_recipeNames_codec);
      if (HasOutputLabelset) {
        output.WriteRawTag(42);
        output.WriteString(OutputLabelset);
      }
      if (HasSchedule) {
        output.WriteRawTag(50);
        output.WriteString(Schedule);
      }
      if (HasOwner) {
        output.WriteRawTag(58);
        output.WriteString(Owner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasVersionName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VersionName);
      }
      if (HasDescription) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      size += inputLabelsets_.CalculateSize(_repeated_inputLabelsets_codec);
      size += recipeNames_.CalculateSize(_repeated_recipeNames_codec);
      if (HasOutputLabelset) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OutputLabelset);
      }
      if (HasSchedule) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Schedule);
      }
      if (HasOwner) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owner);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LabelingPipelineSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasVersionName) {
        VersionName = other.VersionName;
      }
      if (other.HasDescription) {
        Description = other.Description;
      }
      inputLabelsets_.Add(other.inputLabelsets_);
      recipeNames_.Add(other.recipeNames_);
      if (other.HasOutputLabelset) {
        OutputLabelset = other.OutputLabelset;
      }
      if (other.HasSchedule) {
        Schedule = other.Schedule;
      }
      if (other.HasOwner) {
        Owner = other.Owner;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            VersionName = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            inputLabelsets_.AddEntriesFrom(input, _repeated_inputLabelsets_codec);
            break;
          }
          case 34: {
            recipeNames_.AddEntriesFrom(input, _repeated_recipeNames_codec);
            break;
          }
          case 42: {
            OutputLabelset = input.ReadString();
            break;
          }
          case 50: {
            Schedule = input.ReadString();
            break;
          }
          case 58: {
            Owner = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            VersionName = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            inputLabelsets_.AddEntriesFrom(ref input, _repeated_inputLabelsets_codec);
            break;
          }
          case 34: {
            recipeNames_.AddEntriesFrom(ref input, _repeated_recipeNames_codec);
            break;
          }
          case 42: {
            OutputLabelset = input.ReadString();
            break;
          }
          case 50: {
            Schedule = input.ReadString();
            break;
          }
          case 58: {
            Owner = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// LabelingPipelineStatus is the observed state of the LabelingPipeline object.
  /// </summary>
  public sealed partial class LabelingPipelineStatus : pb::IMessage<LabelingPipelineStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LabelingPipelineStatus> _parser = new pb::MessageParser<LabelingPipelineStatus>(() => new LabelingPipelineStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LabelingPipelineStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[74]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabelingPipelineStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabelingPipelineStatus(LabelingPipelineStatus other) : this() {
      conditions_ = other.conditions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabelingPipelineStatus Clone() {
      return new LabelingPipelineStatus(this);
    }

    /// <summary>Field number for the "conditions" field.</summary>
    public const int ConditionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.LabelingPipelineCondition> _repeated_conditions_codec
        = pb::FieldCodec.ForMessage(10, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.LabelingPipelineCondition.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.LabelingPipelineCondition> conditions_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.LabelingPipelineCondition>();
    /// <summary>
    /// +optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.LabelingPipelineCondition> Conditions {
      get { return conditions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LabelingPipelineStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LabelingPipelineStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!conditions_.Equals(other.conditions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= conditions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      conditions_.WriteTo(output, _repeated_conditions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      conditions_.WriteTo(ref output, _repeated_conditions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += conditions_.CalculateSize(_repeated_conditions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LabelingPipelineStatus other) {
      if (other == null) {
        return;
      }
      conditions_.Add(other.conditions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            conditions_.AddEntriesFrom(input, _repeated_conditions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            conditions_.AddEntriesFrom(ref input, _repeated_conditions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MaterializationSpec : pb::IMessage<MaterializationSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MaterializationSpec> _parser = new pb::MessageParser<MaterializationSpec>(() => new MaterializationSpec());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MaterializationSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[75]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MaterializationSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MaterializationSpec(MaterializationSpec other) : this() {
      _hasBits0 = other._hasBits0;
      online_ = other.online_;
      offline_ = other.offline_;
      startDate_ = other.startDate_ != null ? other.startDate_.Clone() : null;
      scheduleInterval_ = other.scheduleInterval_;
      ttl_ = other.ttl_;
      backfill_ = other.backfill_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MaterializationSpec Clone() {
      return new MaterializationSpec(this);
    }

    /// <summary>Field number for the "online" field.</summary>
    public const int OnlineFieldNumber = 1;
    private readonly static bool OnlineDefaultValue = false;

    private bool online_;
    /// <summary>
    /// If true, update the online store
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Online {
      get { if ((_hasBits0 & 1) != 0) { return online_; } else { return OnlineDefaultValue; } }
      set {
        _hasBits0 |= 1;
        online_ = value;
      }
    }
    /// <summary>Gets whether the "online" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOnline {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "online" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOnline() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "offline" field.</summary>
    public const int OfflineFieldNumber = 2;
    private readonly static bool OfflineDefaultValue = false;

    private bool offline_;
    /// <summary>
    /// If true update the offline store.
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Offline {
      get { if ((_hasBits0 & 2) != 0) { return offline_; } else { return OfflineDefaultValue; } }
      set {
        _hasBits0 |= 2;
        offline_ = value;
      }
    }
    /// <summary>Gets whether the "offline" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOffline {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "offline" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOffline() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "startDate" field.</summary>
    public const int StartDateFieldNumber = 3;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time startDate_;
    /// <summary>
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time StartDate {
      get { return startDate_; }
      set {
        startDate_ = value;
      }
    }

    /// <summary>Field number for the "scheduleInterval" field.</summary>
    public const int ScheduleIntervalFieldNumber = 4;
    private readonly static string ScheduleIntervalDefaultValue = "";

    private string scheduleInterval_;
    /// <summary>
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ScheduleInterval {
      get { return scheduleInterval_ ?? ScheduleIntervalDefaultValue; }
      set {
        scheduleInterval_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "scheduleInterval" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasScheduleInterval {
      get { return scheduleInterval_ != null; }
    }
    /// <summary>Clears the value of the "scheduleInterval" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearScheduleInterval() {
      scheduleInterval_ = null;
    }

    /// <summary>Field number for the "ttl" field.</summary>
    public const int TtlFieldNumber = 5;
    private readonly static int TtlDefaultValue = 0;

    private int ttl_;
    /// <summary>
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ttl {
      get { if ((_hasBits0 & 4) != 0) { return ttl_; } else { return TtlDefaultValue; } }
      set {
        _hasBits0 |= 4;
        ttl_ = value;
      }
    }
    /// <summary>Gets whether the "ttl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTtl {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "ttl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTtl() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "backfill" field.</summary>
    public const int BackfillFieldNumber = 6;
    private readonly static int BackfillDefaultValue = 0;

    private int backfill_;
    /// <summary>
    /// Number of days to store information from the past in the feature store.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Backfill {
      get { if ((_hasBits0 & 8) != 0) { return backfill_; } else { return BackfillDefaultValue; } }
      set {
        _hasBits0 |= 8;
        backfill_ = value;
      }
    }
    /// <summary>Gets whether the "backfill" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBackfill {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "backfill" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBackfill() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MaterializationSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MaterializationSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Online != other.Online) return false;
      if (Offline != other.Offline) return false;
      if (!object.Equals(StartDate, other.StartDate)) return false;
      if (ScheduleInterval != other.ScheduleInterval) return false;
      if (Ttl != other.Ttl) return false;
      if (Backfill != other.Backfill) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasOnline) hash ^= Online.GetHashCode();
      if (HasOffline) hash ^= Offline.GetHashCode();
      if (startDate_ != null) hash ^= StartDate.GetHashCode();
      if (HasScheduleInterval) hash ^= ScheduleInterval.GetHashCode();
      if (HasTtl) hash ^= Ttl.GetHashCode();
      if (HasBackfill) hash ^= Backfill.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasOnline) {
        output.WriteRawTag(8);
        output.WriteBool(Online);
      }
      if (HasOffline) {
        output.WriteRawTag(16);
        output.WriteBool(Offline);
      }
      if (startDate_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(StartDate);
      }
      if (HasScheduleInterval) {
        output.WriteRawTag(34);
        output.WriteString(ScheduleInterval);
      }
      if (HasTtl) {
        output.WriteRawTag(40);
        output.WriteInt32(Ttl);
      }
      if (HasBackfill) {
        output.WriteRawTag(48);
        output.WriteInt32(Backfill);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasOnline) {
        output.WriteRawTag(8);
        output.WriteBool(Online);
      }
      if (HasOffline) {
        output.WriteRawTag(16);
        output.WriteBool(Offline);
      }
      if (startDate_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(StartDate);
      }
      if (HasScheduleInterval) {
        output.WriteRawTag(34);
        output.WriteString(ScheduleInterval);
      }
      if (HasTtl) {
        output.WriteRawTag(40);
        output.WriteInt32(Ttl);
      }
      if (HasBackfill) {
        output.WriteRawTag(48);
        output.WriteInt32(Backfill);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasOnline) {
        size += 1 + 1;
      }
      if (HasOffline) {
        size += 1 + 1;
      }
      if (startDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartDate);
      }
      if (HasScheduleInterval) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ScheduleInterval);
      }
      if (HasTtl) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ttl);
      }
      if (HasBackfill) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Backfill);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MaterializationSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasOnline) {
        Online = other.Online;
      }
      if (other.HasOffline) {
        Offline = other.Offline;
      }
      if (other.startDate_ != null) {
        if (startDate_ == null) {
          StartDate = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
        }
        StartDate.MergeFrom(other.StartDate);
      }
      if (other.HasScheduleInterval) {
        ScheduleInterval = other.ScheduleInterval;
      }
      if (other.HasTtl) {
        Ttl = other.Ttl;
      }
      if (other.HasBackfill) {
        Backfill = other.Backfill;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Online = input.ReadBool();
            break;
          }
          case 16: {
            Offline = input.ReadBool();
            break;
          }
          case 26: {
            if (startDate_ == null) {
              StartDate = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(StartDate);
            break;
          }
          case 34: {
            ScheduleInterval = input.ReadString();
            break;
          }
          case 40: {
            Ttl = input.ReadInt32();
            break;
          }
          case 48: {
            Backfill = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Online = input.ReadBool();
            break;
          }
          case 16: {
            Offline = input.ReadBool();
            break;
          }
          case 26: {
            if (startDate_ == null) {
              StartDate = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(StartDate);
            break;
          }
          case 34: {
            ScheduleInterval = input.ReadString();
            break;
          }
          case 40: {
            Ttl = input.ReadInt32();
            break;
          }
          case 48: {
            Backfill = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Recipe represents a single batch of data
  /// +kubebuilder:object:root=true
  /// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status"
  /// +kubebuilder:printcolumn:name="Version",type="string",JSONPath=".spec.versionName"
  /// +kubebuilder:printcolumn:name="Status",type="string",JSONPath=".status.phase"
  /// +kubebuilder:printcolumn:name="Rows",type="integer",JSONPath=".status.statistics.rows"
  /// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description=""
  /// +kubebuilder:subresource:status
  /// +kubebuilder:resource:path=recipes,shortName=rc,singular=recipe,categories={data,modela,all}
  /// </summary>
  public sealed partial class Recipe : pb::IMessage<Recipe>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Recipe> _parser = new pb::MessageParser<Recipe>(() => new Recipe());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Recipe> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[76]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Recipe() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Recipe(Recipe other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      spec_ = other.spec_ != null ? other.spec_.Clone() : null;
      status_ = other.status_ != null ? other.status_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Recipe Clone() {
      return new Recipe(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "spec" field.</summary>
    public const int SpecFieldNumber = 2;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeSpec spec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeSpec Spec {
      get { return spec_; }
      set {
        spec_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 3;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeStatus status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Recipe);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Recipe other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if (!object.Equals(Spec, other.Spec)) return false;
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      if (spec_ != null) hash ^= Spec.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      if (spec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Spec);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Recipe other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      if (other.spec_ != null) {
        if (spec_ == null) {
          Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeSpec();
        }
        Spec.MergeFrom(other.Spec);
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeStatus();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// RecipeCondition describes the state of a dataset at a certain point.
  /// </summary>
  public sealed partial class RecipeCondition : pb::IMessage<RecipeCondition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RecipeCondition> _parser = new pb::MessageParser<RecipeCondition>(() => new RecipeCondition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RecipeCondition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[77]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecipeCondition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecipeCondition(RecipeCondition other) : this() {
      type_ = other.type_;
      status_ = other.status_;
      lastTransitionTime_ = other.lastTransitionTime_ != null ? other.lastTransitionTime_.Clone() : null;
      reason_ = other.reason_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecipeCondition Clone() {
      return new RecipeCondition(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static string TypeDefaultValue = "";

    private string type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_ ?? TypeDefaultValue; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return type_ != null; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      type_ = null;
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private readonly static string StatusDefaultValue = "";

    private string status_;
    /// <summary>
    /// Status of the condition, one of True, False, AutoScaler.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Status {
      get { return status_ ?? StatusDefaultValue; }
      set {
        status_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStatus {
      get { return status_ != null; }
    }
    /// <summary>Clears the value of the "status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStatus() {
      status_ = null;
    }

    /// <summary>Field number for the "lastTransitionTime" field.</summary>
    public const int LastTransitionTimeFieldNumber = 3;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time lastTransitionTime_;
    /// <summary>
    /// Last time the condition transitioned from one status to another.
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time LastTransitionTime {
      get { return lastTransitionTime_; }
      set {
        lastTransitionTime_ = value;
      }
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 4;
    private readonly static string ReasonDefaultValue = "";

    private string reason_;
    /// <summary>
    /// The reason for the condition's last transition.
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Reason {
      get { return reason_ ?? ReasonDefaultValue; }
      set {
        reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "reason" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasReason {
      get { return reason_ != null; }
    }
    /// <summary>Clears the value of the "reason" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReason() {
      reason_ = null;
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 5;
    private readonly static string MessageDefaultValue = "";

    private string message_;
    /// <summary>
    /// A human readable message indicating details about the transition.
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_ ?? MessageDefaultValue; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMessage {
      get { return message_ != null; }
    }
    /// <summary>Clears the value of the "message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessage() {
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RecipeCondition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RecipeCondition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Status != other.Status) return false;
      if (!object.Equals(LastTransitionTime, other.LastTransitionTime)) return false;
      if (Reason != other.Reason) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasStatus) hash ^= Status.GetHashCode();
      if (lastTransitionTime_ != null) hash ^= LastTransitionTime.GetHashCode();
      if (HasReason) hash ^= Reason.GetHashCode();
      if (HasMessage) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasStatus) {
        output.WriteRawTag(18);
        output.WriteString(Status);
      }
      if (lastTransitionTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LastTransitionTime);
      }
      if (HasReason) {
        output.WriteRawTag(34);
        output.WriteString(Reason);
      }
      if (HasMessage) {
        output.WriteRawTag(42);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasStatus) {
        output.WriteRawTag(18);
        output.WriteString(Status);
      }
      if (lastTransitionTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LastTransitionTime);
      }
      if (HasReason) {
        output.WriteRawTag(34);
        output.WriteString(Reason);
      }
      if (HasMessage) {
        output.WriteRawTag(42);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (HasStatus) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Status);
      }
      if (lastTransitionTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastTransitionTime);
      }
      if (HasReason) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
      }
      if (HasMessage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RecipeCondition other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasStatus) {
        Status = other.Status;
      }
      if (other.lastTransitionTime_ != null) {
        if (lastTransitionTime_ == null) {
          LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
        }
        LastTransitionTime.MergeFrom(other.LastTransitionTime);
      }
      if (other.HasReason) {
        Reason = other.Reason;
      }
      if (other.HasMessage) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Status = input.ReadString();
            break;
          }
          case 26: {
            if (lastTransitionTime_ == null) {
              LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(LastTransitionTime);
            break;
          }
          case 34: {
            Reason = input.ReadString();
            break;
          }
          case 42: {
            Message = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Status = input.ReadString();
            break;
          }
          case 26: {
            if (lastTransitionTime_ == null) {
              LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(LastTransitionTime);
            break;
          }
          case 34: {
            Reason = input.ReadString();
            break;
          }
          case 42: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// RecipeInputSpec specify the input for a recipe
  /// </summary>
  public sealed partial class RecipeInputSpec : pb::IMessage<RecipeInputSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RecipeInputSpec> _parser = new pb::MessageParser<RecipeInputSpec>(() => new RecipeInputSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RecipeInputSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[78]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecipeInputSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecipeInputSpec(RecipeInputSpec other) : this() {
      datasetName_ = other.datasetName_;
      location_ = other.location_ != null ? other.location_.Clone() : null;
      format_ = other.format_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecipeInputSpec Clone() {
      return new RecipeInputSpec(this);
    }

    /// <summary>Field number for the "datasetName" field.</summary>
    public const int DatasetNameFieldNumber = 1;
    private readonly static string DatasetNameDefaultValue = "";

    private string datasetName_;
    /// <summary>
    /// DatasetName is the name of the dataset
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DatasetName {
      get { return datasetName_ ?? DatasetNameDefaultValue; }
      set {
        datasetName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "datasetName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDatasetName {
      get { return datasetName_ != null; }
    }
    /// <summary>Clears the value of the "datasetName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDatasetName() {
      datasetName_ = null;
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 2;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataLocation location_;
    /// <summary>
    /// Location is the folder of the actual data resides.
    /// +required.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataLocation Location {
      get { return location_; }
      set {
        location_ = value;
      }
    }

    /// <summary>Field number for the "format" field.</summary>
    public const int FormatFieldNumber = 3;
    private readonly static string FormatDefaultValue = "";

    private string format_;
    /// <summary>
    /// Format is the dataset format
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Format {
      get { return format_ ?? FormatDefaultValue; }
      set {
        format_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "format" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFormat {
      get { return format_ != null; }
    }
    /// <summary>Clears the value of the "format" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFormat() {
      format_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RecipeInputSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RecipeInputSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DatasetName != other.DatasetName) return false;
      if (!object.Equals(Location, other.Location)) return false;
      if (Format != other.Format) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDatasetName) hash ^= DatasetName.GetHashCode();
      if (location_ != null) hash ^= Location.GetHashCode();
      if (HasFormat) hash ^= Format.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasDatasetName) {
        output.WriteRawTag(10);
        output.WriteString(DatasetName);
      }
      if (location_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Location);
      }
      if (HasFormat) {
        output.WriteRawTag(26);
        output.WriteString(Format);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasDatasetName) {
        output.WriteRawTag(10);
        output.WriteString(DatasetName);
      }
      if (location_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Location);
      }
      if (HasFormat) {
        output.WriteRawTag(26);
        output.WriteString(Format);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasDatasetName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DatasetName);
      }
      if (location_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
      }
      if (HasFormat) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Format);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RecipeInputSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasDatasetName) {
        DatasetName = other.DatasetName;
      }
      if (other.location_ != null) {
        if (location_ == null) {
          Location = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataLocation();
        }
        Location.MergeFrom(other.Location);
      }
      if (other.HasFormat) {
        Format = other.Format;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DatasetName = input.ReadString();
            break;
          }
          case 18: {
            if (location_ == null) {
              Location = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataLocation();
            }
            input.ReadMessage(Location);
            break;
          }
          case 26: {
            Format = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DatasetName = input.ReadString();
            break;
          }
          case 18: {
            if (location_ == null) {
              Location = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataLocation();
            }
            input.ReadMessage(Location);
            break;
          }
          case 26: {
            Format = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// +kubebuilder:object:root=true
  /// RecipeList contains a list of Recipes
  /// </summary>
  public sealed partial class RecipeList : pb::IMessage<RecipeList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RecipeList> _parser = new pb::MessageParser<RecipeList>(() => new RecipeList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RecipeList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[79]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecipeList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecipeList(RecipeList other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecipeList Clone() {
      return new RecipeList(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Recipe> _repeated_items_codec
        = pb::FieldCodec.ForMessage(18, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Recipe.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Recipe> items_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Recipe>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Recipe> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RecipeList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RecipeList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(ref output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RecipeList other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// RecipeOutputSpec for the recipe output
  /// </summary>
  public sealed partial class RecipeOutputSpec : pb::IMessage<RecipeOutputSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RecipeOutputSpec> _parser = new pb::MessageParser<RecipeOutputSpec>(() => new RecipeOutputSpec());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RecipeOutputSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[80]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecipeOutputSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecipeOutputSpec(RecipeOutputSpec other) : this() {
      _hasBits0 = other._hasBits0;
      createDataset_ = other.createDataset_;
      datasetName_ = other.datasetName_;
      location_ = other.location_ != null ? other.location_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecipeOutputSpec Clone() {
      return new RecipeOutputSpec(this);
    }

    /// <summary>Field number for the "createDataset" field.</summary>
    public const int CreateDatasetFieldNumber = 1;
    private readonly static bool CreateDatasetDefaultValue = false;

    private bool createDataset_;
    /// <summary>
    /// CreateDataset if true, create a new dataset when the recipe is done.
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CreateDataset {
      get { if ((_hasBits0 & 1) != 0) { return createDataset_; } else { return CreateDatasetDefaultValue; } }
      set {
        _hasBits0 |= 1;
        createDataset_ = value;
      }
    }
    /// <summary>Gets whether the "createDataset" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCreateDataset {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "createDataset" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCreateDataset() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "datasetName" field.</summary>
    public const int DatasetNameFieldNumber = 2;
    private readonly static string DatasetNameDefaultValue = "";

    private string datasetName_;
    /// <summary>
    /// DatasetName is the name of the dataset output to the recipe
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DatasetName {
      get { return datasetName_ ?? DatasetNameDefaultValue; }
      set {
        datasetName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "datasetName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDatasetName {
      get { return datasetName_ != null; }
    }
    /// <summary>Clears the value of the "datasetName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDatasetName() {
      datasetName_ = null;
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 3;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataLocation location_;
    /// <summary>
    /// Location is the data location folder of the actual data resides.
    /// +required.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataLocation Location {
      get { return location_; }
      set {
        location_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RecipeOutputSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RecipeOutputSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CreateDataset != other.CreateDataset) return false;
      if (DatasetName != other.DatasetName) return false;
      if (!object.Equals(Location, other.Location)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCreateDataset) hash ^= CreateDataset.GetHashCode();
      if (HasDatasetName) hash ^= DatasetName.GetHashCode();
      if (location_ != null) hash ^= Location.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCreateDataset) {
        output.WriteRawTag(8);
        output.WriteBool(CreateDataset);
      }
      if (HasDatasetName) {
        output.WriteRawTag(18);
        output.WriteString(DatasetName);
      }
      if (location_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Location);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCreateDataset) {
        output.WriteRawTag(8);
        output.WriteBool(CreateDataset);
      }
      if (HasDatasetName) {
        output.WriteRawTag(18);
        output.WriteString(DatasetName);
      }
      if (location_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Location);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasCreateDataset) {
        size += 1 + 1;
      }
      if (HasDatasetName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DatasetName);
      }
      if (location_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RecipeOutputSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasCreateDataset) {
        CreateDataset = other.CreateDataset;
      }
      if (other.HasDatasetName) {
        DatasetName = other.DatasetName;
      }
      if (other.location_ != null) {
        if (location_ == null) {
          Location = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataLocation();
        }
        Location.MergeFrom(other.Location);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CreateDataset = input.ReadBool();
            break;
          }
          case 18: {
            DatasetName = input.ReadString();
            break;
          }
          case 26: {
            if (location_ == null) {
              Location = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataLocation();
            }
            input.ReadMessage(Location);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CreateDataset = input.ReadBool();
            break;
          }
          case 18: {
            DatasetName = input.ReadString();
            break;
          }
          case 26: {
            if (location_ == null) {
              Location = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataLocation();
            }
            input.ReadMessage(Location);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// +kubebuilder:object:root=true
  /// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type==\"Ready\")].status"
  /// +kubebuilder:printcolumn:name="Version",type="string",JSONPath=".spec.versionName"
  /// +kubebuilder:printcolumn:name="Status",type="string",JSONPath=".status.phase"
  /// +kubebuilder:subresource:status
  /// +kubebuilder:resource:path=reciperuns,shortName=rr,singular=reciperun,categories={data,modela,all}
  /// Recipe run represent one execution of the recipe.
  /// Execution is performed by creating a Kubernetes job.
  /// </summary>
  public sealed partial class RecipeRun : pb::IMessage<RecipeRun>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RecipeRun> _parser = new pb::MessageParser<RecipeRun>(() => new RecipeRun());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RecipeRun> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[81]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecipeRun() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecipeRun(RecipeRun other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      spec_ = other.spec_ != null ? other.spec_.Clone() : null;
      status_ = other.status_ != null ? other.status_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecipeRun Clone() {
      return new RecipeRun(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "spec" field.</summary>
    public const int SpecFieldNumber = 2;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeRunSpec spec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeRunSpec Spec {
      get { return spec_; }
      set {
        spec_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 3;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeRunStatus status_;
    /// <summary>
    /// +optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeRunStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RecipeRun);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RecipeRun other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if (!object.Equals(Spec, other.Spec)) return false;
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      if (spec_ != null) hash ^= Spec.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      if (spec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Spec);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RecipeRun other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      if (other.spec_ != null) {
        if (spec_ == null) {
          Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeRunSpec();
        }
        Spec.MergeFrom(other.Spec);
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeRunStatus();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeRunSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeRunStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ObjectMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeRunSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeRunStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// RecipeRunCondition describes the state of a dataset at a certain point.
  /// </summary>
  public sealed partial class RecipeRunCondition : pb::IMessage<RecipeRunCondition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RecipeRunCondition> _parser = new pb::MessageParser<RecipeRunCondition>(() => new RecipeRunCondition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RecipeRunCondition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[82]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecipeRunCondition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecipeRunCondition(RecipeRunCondition other) : this() {
      type_ = other.type_;
      status_ = other.status_;
      lastTransitionTime_ = other.lastTransitionTime_ != null ? other.lastTransitionTime_.Clone() : null;
      reason_ = other.reason_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecipeRunCondition Clone() {
      return new RecipeRunCondition(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static string TypeDefaultValue = "";

    private string type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_ ?? TypeDefaultValue; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return type_ != null; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      type_ = null;
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private readonly static string StatusDefaultValue = "";

    private string status_;
    /// <summary>
    /// Status of the condition, one of True, False, AutoScaler.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Status {
      get { return status_ ?? StatusDefaultValue; }
      set {
        status_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStatus {
      get { return status_ != null; }
    }
    /// <summary>Clears the value of the "status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStatus() {
      status_ = null;
    }

    /// <summary>Field number for the "lastTransitionTime" field.</summary>
    public const int LastTransitionTimeFieldNumber = 3;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time lastTransitionTime_;
    /// <summary>
    /// Last time the condition transitioned from one status to another.
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time LastTransitionTime {
      get { return lastTransitionTime_; }
      set {
        lastTransitionTime_ = value;
      }
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 4;
    private readonly static string ReasonDefaultValue = "";

    private string reason_;
    /// <summary>
    /// The reason for the condition's last transition.
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Reason {
      get { return reason_ ?? ReasonDefaultValue; }
      set {
        reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "reason" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasReason {
      get { return reason_ != null; }
    }
    /// <summary>Clears the value of the "reason" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReason() {
      reason_ = null;
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 5;
    private readonly static string MessageDefaultValue = "";

    private string message_;
    /// <summary>
    /// A human readable message indicating details about the transition.
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_ ?? MessageDefaultValue; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMessage {
      get { return message_ != null; }
    }
    /// <summary>Clears the value of the "message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessage() {
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RecipeRunCondition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RecipeRunCondition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Status != other.Status) return false;
      if (!object.Equals(LastTransitionTime, other.LastTransitionTime)) return false;
      if (Reason != other.Reason) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasStatus) hash ^= Status.GetHashCode();
      if (lastTransitionTime_ != null) hash ^= LastTransitionTime.GetHashCode();
      if (HasReason) hash ^= Reason.GetHashCode();
      if (HasMessage) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasStatus) {
        output.WriteRawTag(18);
        output.WriteString(Status);
      }
      if (lastTransitionTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LastTransitionTime);
      }
      if (HasReason) {
        output.WriteRawTag(34);
        output.WriteString(Reason);
      }
      if (HasMessage) {
        output.WriteRawTag(42);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasStatus) {
        output.WriteRawTag(18);
        output.WriteString(Status);
      }
      if (lastTransitionTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LastTransitionTime);
      }
      if (HasReason) {
        output.WriteRawTag(34);
        output.WriteString(Reason);
      }
      if (HasMessage) {
        output.WriteRawTag(42);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (HasStatus) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Status);
      }
      if (lastTransitionTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastTransitionTime);
      }
      if (HasReason) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
      }
      if (HasMessage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RecipeRunCondition other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasStatus) {
        Status = other.Status;
      }
      if (other.lastTransitionTime_ != null) {
        if (lastTransitionTime_ == null) {
          LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
        }
        LastTransitionTime.MergeFrom(other.LastTransitionTime);
      }
      if (other.HasReason) {
        Reason = other.Reason;
      }
      if (other.HasMessage) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Status = input.ReadString();
            break;
          }
          case 26: {
            if (lastTransitionTime_ == null) {
              LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(LastTransitionTime);
            break;
          }
          case 34: {
            Reason = input.ReadString();
            break;
          }
          case 42: {
            Message = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Status = input.ReadString();
            break;
          }
          case 26: {
            if (lastTransitionTime_ == null) {
              LastTransitionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(LastTransitionTime);
            break;
          }
          case 34: {
            Reason = input.ReadString();
            break;
          }
          case 42: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// +kubebuilder:object:root=true
  /// RecipeRunList contains a list of Recipes
  /// </summary>
  public sealed partial class RecipeRunList : pb::IMessage<RecipeRunList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RecipeRunList> _parser = new pb::MessageParser<RecipeRunList>(() => new RecipeRunList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RecipeRunList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[83]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecipeRunList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecipeRunList(RecipeRunList other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecipeRunList Clone() {
      return new RecipeRunList(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeRun> _repeated_items_codec
        = pb::FieldCodec.ForMessage(18, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeRun.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeRun> items_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeRun>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeRun> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RecipeRunList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RecipeRunList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      items_.WriteTo(ref output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RecipeRunList other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.ListMeta();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// RecipeSpec defines the desired state of a dataset
  /// </summary>
  public sealed partial class RecipeRunSpec : pb::IMessage<RecipeRunSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RecipeRunSpec> _parser = new pb::MessageParser<RecipeRunSpec>(() => new RecipeRunSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RecipeRunSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[84]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecipeRunSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecipeRunSpec(RecipeRunSpec other) : this() {
      versionName_ = other.versionName_;
      recipeName_ = other.recipeName_;
      labName_ = other.labName_;
      output_ = other.output_ != null ? other.output_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecipeRunSpec Clone() {
      return new RecipeRunSpec(this);
    }

    /// <summary>Field number for the "versionName" field.</summary>
    public const int VersionNameFieldNumber = 1;
    private readonly static string VersionNameDefaultValue = "";

    private string versionName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VersionName {
      get { return versionName_ ?? VersionNameDefaultValue; }
      set {
        versionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "versionName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasVersionName {
      get { return versionName_ != null; }
    }
    /// <summary>Clears the value of the "versionName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearVersionName() {
      versionName_ = null;
    }

    /// <summary>Field number for the "recipeName" field.</summary>
    public const int RecipeNameFieldNumber = 2;
    private readonly static string RecipeNameDefaultValue = "";

    private string recipeName_;
    /// <summary>
    /// The name of the recipe that execute this run
    /// +required.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RecipeName {
      get { return recipeName_ ?? RecipeNameDefaultValue; }
      set {
        recipeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "recipeName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRecipeName {
      get { return recipeName_ != null; }
    }
    /// <summary>Clears the value of the "recipeName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRecipeName() {
      recipeName_ = null;
    }

    /// <summary>Field number for the "labName" field.</summary>
    public const int LabNameFieldNumber = 3;
    private readonly static string LabNameDefaultValue = "";

    private string labName_;
    /// <summary>
    /// The execution env of this recipes
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LabName {
      get { return labName_ ?? LabNameDefaultValue; }
      set {
        labName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "labName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLabName {
      get { return labName_ != null; }
    }
    /// <summary>Clears the value of the "labName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLabName() {
      labName_ = null;
    }

    /// <summary>Field number for the "output" field.</summary>
    public const int OutputFieldNumber = 4;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataLocation output_;
    /// <summary>
    /// The location of the data output.
    /// +required.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataLocation Output {
      get { return output_; }
      set {
        output_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RecipeRunSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RecipeRunSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (VersionName != other.VersionName) return false;
      if (RecipeName != other.RecipeName) return false;
      if (LabName != other.LabName) return false;
      if (!object.Equals(Output, other.Output)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasVersionName) hash ^= VersionName.GetHashCode();
      if (HasRecipeName) hash ^= RecipeName.GetHashCode();
      if (HasLabName) hash ^= LabName.GetHashCode();
      if (output_ != null) hash ^= Output.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasVersionName) {
        output.WriteRawTag(10);
        output.WriteString(VersionName);
      }
      if (HasRecipeName) {
        output.WriteRawTag(18);
        output.WriteString(RecipeName);
      }
      if (HasLabName) {
        output.WriteRawTag(26);
        output.WriteString(LabName);
      }
      if (output_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Output);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasVersionName) {
        output.WriteRawTag(10);
        output.WriteString(VersionName);
      }
      if (HasRecipeName) {
        output.WriteRawTag(18);
        output.WriteString(RecipeName);
      }
      if (HasLabName) {
        output.WriteRawTag(26);
        output.WriteString(LabName);
      }
      if (output_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Output);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasVersionName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VersionName);
      }
      if (HasRecipeName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RecipeName);
      }
      if (HasLabName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LabName);
      }
      if (output_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Output);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RecipeRunSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasVersionName) {
        VersionName = other.VersionName;
      }
      if (other.HasRecipeName) {
        RecipeName = other.RecipeName;
      }
      if (other.HasLabName) {
        LabName = other.LabName;
      }
      if (other.output_ != null) {
        if (output_ == null) {
          Output = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataLocation();
        }
        Output.MergeFrom(other.Output);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            VersionName = input.ReadString();
            break;
          }
          case 18: {
            RecipeName = input.ReadString();
            break;
          }
          case 26: {
            LabName = input.ReadString();
            break;
          }
          case 34: {
            if (output_ == null) {
              Output = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataLocation();
            }
            input.ReadMessage(Output);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            VersionName = input.ReadString();
            break;
          }
          case 18: {
            RecipeName = input.ReadString();
            break;
          }
          case 26: {
            LabName = input.ReadString();
            break;
          }
          case 34: {
            if (output_ == null) {
              Output = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.DataLocation();
            }
            input.ReadMessage(Output);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// RecipeStatus defines the observed state of Recipe
  /// </summary>
  public sealed partial class RecipeRunStatus : pb::IMessage<RecipeRunStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RecipeRunStatus> _parser = new pb::MessageParser<RecipeRunStatus>(() => new RecipeRunStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RecipeRunStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[85]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecipeRunStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecipeRunStatus(RecipeRunStatus other) : this() {
      startTime_ = other.startTime_ != null ? other.startTime_.Clone() : null;
      completionTime_ = other.completionTime_ != null ? other.completionTime_.Clone() : null;
      phase_ = other.phase_;
      conditions_ = other.conditions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecipeRunStatus Clone() {
      return new RecipeRunStatus(this);
    }

    /// <summary>Field number for the "startTime" field.</summary>
    public const int StartTimeFieldNumber = 1;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time startTime_;
    /// <summary>
    /// Represents the start time
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "completionTime" field.</summary>
    public const int CompletionTimeFieldNumber = 2;
    private global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time completionTime_;
    /// <summary>
    /// Represents the end time
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time CompletionTime {
      get { return completionTime_; }
      set {
        completionTime_ = value;
      }
    }

    /// <summary>Field number for the "phase" field.</summary>
    public const int PhaseFieldNumber = 3;
    private readonly static string PhaseDefaultValue = "";

    private string phase_;
    /// <summary>
    /// The phase of the dataset processing
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Phase {
      get { return phase_ ?? PhaseDefaultValue; }
      set {
        phase_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "phase" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPhase {
      get { return phase_ != null; }
    }
    /// <summary>Clears the value of the "phase" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPhase() {
      phase_ = null;
    }

    /// <summary>Field number for the "conditions" field.</summary>
    public const int ConditionsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeCondition> _repeated_conditions_codec
        = pb::FieldCodec.ForMessage(34, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeCondition.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeCondition> conditions_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeCondition>();
    /// <summary>
    /// Represents the latest available observations of a dataset state.
    /// +optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeCondition> Conditions {
      get { return conditions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RecipeRunStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RecipeRunStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(StartTime, other.StartTime)) return false;
      if (!object.Equals(CompletionTime, other.CompletionTime)) return false;
      if (Phase != other.Phase) return false;
      if(!conditions_.Equals(other.conditions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (startTime_ != null) hash ^= StartTime.GetHashCode();
      if (completionTime_ != null) hash ^= CompletionTime.GetHashCode();
      if (HasPhase) hash ^= Phase.GetHashCode();
      hash ^= conditions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (startTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StartTime);
      }
      if (completionTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CompletionTime);
      }
      if (HasPhase) {
        output.WriteRawTag(26);
        output.WriteString(Phase);
      }
      conditions_.WriteTo(output, _repeated_conditions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (startTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StartTime);
      }
      if (completionTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CompletionTime);
      }
      if (HasPhase) {
        output.WriteRawTag(26);
        output.WriteString(Phase);
      }
      conditions_.WriteTo(ref output, _repeated_conditions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (startTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
      }
      if (completionTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CompletionTime);
      }
      if (HasPhase) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Phase);
      }
      size += conditions_.CalculateSize(_repeated_conditions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RecipeRunStatus other) {
      if (other == null) {
        return;
      }
      if (other.startTime_ != null) {
        if (startTime_ == null) {
          StartTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
        }
        StartTime.MergeFrom(other.StartTime);
      }
      if (other.completionTime_ != null) {
        if (completionTime_ == null) {
          CompletionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
        }
        CompletionTime.MergeFrom(other.CompletionTime);
      }
      if (other.HasPhase) {
        Phase = other.Phase;
      }
      conditions_.Add(other.conditions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (startTime_ == null) {
              StartTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 18: {
            if (completionTime_ == null) {
              CompletionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(CompletionTime);
            break;
          }
          case 26: {
            Phase = input.ReadString();
            break;
          }
          case 34: {
            conditions_.AddEntriesFrom(input, _repeated_conditions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (startTime_ == null) {
              StartTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 18: {
            if (completionTime_ == null) {
              CompletionTime = new global::K8S.Io.Apimachinery.Pkg.Apis.Meta.V1.Time();
            }
            input.ReadMessage(CompletionTime);
            break;
          }
          case 26: {
            Phase = input.ReadString();
            break;
          }
          case 34: {
            conditions_.AddEntriesFrom(ref input, _repeated_conditions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RecipeSampleSpec : pb::IMessage<RecipeSampleSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RecipeSampleSpec> _parser = new pb::MessageParser<RecipeSampleSpec>(() => new RecipeSampleSpec());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RecipeSampleSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[86]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecipeSampleSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecipeSampleSpec(RecipeSampleSpec other) : this() {
      _hasBits0 = other._hasBits0;
      type_ = other.type_;
      rows_ = other.rows_;
      filter_ = other.filter_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecipeSampleSpec Clone() {
      return new RecipeSampleSpec(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static string TypeDefaultValue = "";

    private string type_;
    /// <summary>
    /// Type is the sampling type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_ ?? TypeDefaultValue; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return type_ != null; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      type_ = null;
    }

    /// <summary>Field number for the "rows" field.</summary>
    public const int RowsFieldNumber = 2;
    private readonly static int RowsDefaultValue = 0;

    private int rows_;
    /// <summary>
    /// Rows is the number of rows. Default is 500
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Rows {
      get { if ((_hasBits0 & 1) != 0) { return rows_; } else { return RowsDefaultValue; } }
      set {
        _hasBits0 |= 1;
        rows_ = value;
      }
    }
    /// <summary>Gets whether the "rows" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRows {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "rows" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRows() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 3;
    private readonly static string FilterDefaultValue = "";

    private string filter_;
    /// <summary>
    /// Filter formula. Valid only if the sample is a filter.
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Filter {
      get { return filter_ ?? FilterDefaultValue; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "filter" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFilter {
      get { return filter_ != null; }
    }
    /// <summary>Clears the value of the "filter" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFilter() {
      filter_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RecipeSampleSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RecipeSampleSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Rows != other.Rows) return false;
      if (Filter != other.Filter) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasRows) hash ^= Rows.GetHashCode();
      if (HasFilter) hash ^= Filter.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasRows) {
        output.WriteRawTag(16);
        output.WriteInt32(Rows);
      }
      if (HasFilter) {
        output.WriteRawTag(26);
        output.WriteString(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasRows) {
        output.WriteRawTag(16);
        output.WriteInt32(Rows);
      }
      if (HasFilter) {
        output.WriteRawTag(26);
        output.WriteString(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (HasRows) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rows);
      }
      if (HasFilter) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RecipeSampleSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasRows) {
        Rows = other.Rows;
      }
      if (other.HasFilter) {
        Filter = other.Filter;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 16: {
            Rows = input.ReadInt32();
            break;
          }
          case 26: {
            Filter = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 16: {
            Rows = input.ReadInt32();
            break;
          }
          case 26: {
            Filter = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// RecipeSpec defines the desired state of a dataset
  /// </summary>
  public sealed partial class RecipeSpec : pb::IMessage<RecipeSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RecipeSpec> _parser = new pb::MessageParser<RecipeSpec>(() => new RecipeSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RecipeSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[87]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecipeSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecipeSpec(RecipeSpec other) : this() {
      owner_ = other.owner_;
      versionName_ = other.versionName_;
      description_ = other.description_;
      input_ = other.input_ != null ? other.input_.Clone() : null;
      steps_ = other.steps_.Clone();
      output_ = other.output_ != null ? other.output_.Clone() : null;
      sample_ = other.sample_ != null ? other.sample_.Clone() : null;
      workloadClassName_ = other.workloadClassName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecipeSpec Clone() {
      return new RecipeSpec(this);
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 1;
    private readonly static string OwnerDefaultValue = "";

    private string owner_;
    /// <summary>
    /// Owner is the owner of the recipe
    /// +kubebuilder:default:="no-one"
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owner {
      get { return owner_ ?? OwnerDefaultValue; }
      set {
        owner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "owner" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOwner {
      get { return owner_ != null; }
    }
    /// <summary>Clears the value of the "owner" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOwner() {
      owner_ = null;
    }

    /// <summary>Field number for the "versionName" field.</summary>
    public const int VersionNameFieldNumber = 2;
    private readonly static string VersionNameDefaultValue = "";

    private string versionName_;
    /// <summary>
    /// VersionName is the data product version of the recipe
    /// +kubebuilder:validation:MaxLength=63
    /// required.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VersionName {
      get { return versionName_ ?? VersionNameDefaultValue; }
      set {
        versionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "versionName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasVersionName {
      get { return versionName_ != null; }
    }
    /// <summary>Clears the value of the "versionName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearVersionName() {
      versionName_ = null;
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private readonly static string DescriptionDefaultValue = "";

    private string description_;
    /// <summary>
    /// Description is the user provided description
    /// +kubebuilder:validation:MaxLength=512
    /// +kubebuilder:default =""
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_ ?? DescriptionDefaultValue; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "description" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDescription {
      get { return description_ != null; }
    }
    /// <summary>Clears the value of the "description" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDescription() {
      description_ = null;
    }

    /// <summary>Field number for the "input" field.</summary>
    public const int InputFieldNumber = 4;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeInputSpec input_;
    /// <summary>
    /// Input is the input recipe spec
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeInputSpec Input {
      get { return input_; }
      set {
        input_ = value;
      }
    }

    /// <summary>Field number for the "steps" field.</summary>
    public const int StepsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeStep> _repeated_steps_codec
        = pb::FieldCodec.ForMessage(42, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeStep.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeStep> steps_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeStep>();
    /// <summary>
    /// Steps are the list of recipe steps
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeStep> Steps {
      get { return steps_; }
    }

    /// <summary>Field number for the "output" field.</summary>
    public const int OutputFieldNumber = 6;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeOutputSpec output_;
    /// <summary>
    /// Output is the desired output
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeOutputSpec Output {
      get { return output_; }
      set {
        output_ = value;
      }
    }

    /// <summary>Field number for the "sample" field.</summary>
    public const int SampleFieldNumber = 7;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeSampleSpec sample_;
    /// <summary>
    /// Sample specify the sampling paramters when viewing the recipe
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeSampleSpec Sample {
      get { return sample_; }
      set {
        sample_ = value;
      }
    }

    /// <summary>Field number for the "workloadClassName" field.</summary>
    public const int WorkloadClassNameFieldNumber = 8;
    private readonly static string WorkloadClassNameDefaultValue = "";

    private string workloadClassName_;
    /// <summary>
    /// WorkloadClassName is the name of the workload used to execute this recipe
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WorkloadClassName {
      get { return workloadClassName_ ?? WorkloadClassNameDefaultValue; }
      set {
        workloadClassName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "workloadClassName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasWorkloadClassName {
      get { return workloadClassName_ != null; }
    }
    /// <summary>Clears the value of the "workloadClassName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearWorkloadClassName() {
      workloadClassName_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RecipeSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RecipeSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Owner != other.Owner) return false;
      if (VersionName != other.VersionName) return false;
      if (Description != other.Description) return false;
      if (!object.Equals(Input, other.Input)) return false;
      if(!steps_.Equals(other.steps_)) return false;
      if (!object.Equals(Output, other.Output)) return false;
      if (!object.Equals(Sample, other.Sample)) return false;
      if (WorkloadClassName != other.WorkloadClassName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasOwner) hash ^= Owner.GetHashCode();
      if (HasVersionName) hash ^= VersionName.GetHashCode();
      if (HasDescription) hash ^= Description.GetHashCode();
      if (input_ != null) hash ^= Input.GetHashCode();
      hash ^= steps_.GetHashCode();
      if (output_ != null) hash ^= Output.GetHashCode();
      if (sample_ != null) hash ^= Sample.GetHashCode();
      if (HasWorkloadClassName) hash ^= WorkloadClassName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasOwner) {
        output.WriteRawTag(10);
        output.WriteString(Owner);
      }
      if (HasVersionName) {
        output.WriteRawTag(18);
        output.WriteString(VersionName);
      }
      if (HasDescription) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (input_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Input);
      }
      steps_.WriteTo(output, _repeated_steps_codec);
      if (output_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Output);
      }
      if (sample_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Sample);
      }
      if (HasWorkloadClassName) {
        output.WriteRawTag(66);
        output.WriteString(WorkloadClassName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasOwner) {
        output.WriteRawTag(10);
        output.WriteString(Owner);
      }
      if (HasVersionName) {
        output.WriteRawTag(18);
        output.WriteString(VersionName);
      }
      if (HasDescription) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (input_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Input);
      }
      steps_.WriteTo(ref output, _repeated_steps_codec);
      if (output_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Output);
      }
      if (sample_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Sample);
      }
      if (HasWorkloadClassName) {
        output.WriteRawTag(66);
        output.WriteString(WorkloadClassName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasOwner) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owner);
      }
      if (HasVersionName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VersionName);
      }
      if (HasDescription) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (input_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Input);
      }
      size += steps_.CalculateSize(_repeated_steps_codec);
      if (output_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Output);
      }
      if (sample_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Sample);
      }
      if (HasWorkloadClassName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WorkloadClassName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RecipeSpec other) {
      if (other == null) {
        return;
      }
      if (other.HasOwner) {
        Owner = other.Owner;
      }
      if (other.HasVersionName) {
        VersionName = other.VersionName;
      }
      if (other.HasDescription) {
        Description = other.Description;
      }
      if (other.input_ != null) {
        if (input_ == null) {
          Input = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeInputSpec();
        }
        Input.MergeFrom(other.Input);
      }
      steps_.Add(other.steps_);
      if (other.output_ != null) {
        if (output_ == null) {
          Output = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeOutputSpec();
        }
        Output.MergeFrom(other.Output);
      }
      if (other.sample_ != null) {
        if (sample_ == null) {
          Sample = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeSampleSpec();
        }
        Sample.MergeFrom(other.Sample);
      }
      if (other.HasWorkloadClassName) {
        WorkloadClassName = other.WorkloadClassName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Owner = input.ReadString();
            break;
          }
          case 18: {
            VersionName = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            if (input_ == null) {
              Input = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeInputSpec();
            }
            input.ReadMessage(Input);
            break;
          }
          case 42: {
            steps_.AddEntriesFrom(input, _repeated_steps_codec);
            break;
          }
          case 50: {
            if (output_ == null) {
              Output = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeOutputSpec();
            }
            input.ReadMessage(Output);
            break;
          }
          case 58: {
            if (sample_ == null) {
              Sample = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeSampleSpec();
            }
            input.ReadMessage(Sample);
            break;
          }
          case 66: {
            WorkloadClassName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Owner = input.ReadString();
            break;
          }
          case 18: {
            VersionName = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            if (input_ == null) {
              Input = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeInputSpec();
            }
            input.ReadMessage(Input);
            break;
          }
          case 42: {
            steps_.AddEntriesFrom(ref input, _repeated_steps_codec);
            break;
          }
          case 50: {
            if (output_ == null) {
              Output = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeOutputSpec();
            }
            input.ReadMessage(Output);
            break;
          }
          case 58: {
            if (sample_ == null) {
              Sample = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeSampleSpec();
            }
            input.ReadMessage(Sample);
            break;
          }
          case 66: {
            WorkloadClassName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// RecipeStatus defines the observed state of Recipe
  /// </summary>
  public sealed partial class RecipeStatus : pb::IMessage<RecipeStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RecipeStatus> _parser = new pb::MessageParser<RecipeStatus>(() => new RecipeStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RecipeStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[88]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecipeStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecipeStatus(RecipeStatus other) : this() {
      conditions_ = other.conditions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecipeStatus Clone() {
      return new RecipeStatus(this);
    }

    /// <summary>Field number for the "conditions" field.</summary>
    public const int ConditionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeCondition> _repeated_conditions_codec
        = pb::FieldCodec.ForMessage(10, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeCondition.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeCondition> conditions_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeCondition>();
    /// <summary>
    /// Represents the latest available observations of a dataset state.
    /// +optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeCondition> Conditions {
      get { return conditions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RecipeStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RecipeStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!conditions_.Equals(other.conditions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= conditions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      conditions_.WriteTo(output, _repeated_conditions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      conditions_.WriteTo(ref output, _repeated_conditions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += conditions_.CalculateSize(_repeated_conditions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RecipeStatus other) {
      if (other == null) {
        return;
      }
      conditions_.Add(other.conditions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            conditions_.AddEntriesFrom(input, _repeated_conditions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            conditions_.AddEntriesFrom(ref input, _repeated_conditions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// RecipeStep defines one step in the recipe
  /// </summary>
  public sealed partial class RecipeStep : pb::IMessage<RecipeStep>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RecipeStep> _parser = new pb::MessageParser<RecipeStep>(() => new RecipeStep());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RecipeStep> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[89]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecipeStep() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecipeStep(RecipeStep other) : this() {
      op_ = other.op_;
      parameters_ = other.parameters_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecipeStep Clone() {
      return new RecipeStep(this);
    }

    /// <summary>Field number for the "op" field.</summary>
    public const int OpFieldNumber = 1;
    private readonly static string OpDefaultValue = "";

    private string op_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Op {
      get { return op_ ?? OpDefaultValue; }
      set {
        op_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "op" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOp {
      get { return op_ != null; }
    }
    /// <summary>Clears the value of the "op" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOp() {
      op_ = null;
    }

    /// <summary>Field number for the "parameters" field.</summary>
    public const int ParametersFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeStepParam> _repeated_parameters_codec
        = pb::FieldCodec.ForMessage(18, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeStepParam.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeStepParam> parameters_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeStepParam>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.RecipeStepParam> Parameters {
      get { return parameters_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RecipeStep);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RecipeStep other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Op != other.Op) return false;
      if(!parameters_.Equals(other.parameters_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasOp) hash ^= Op.GetHashCode();
      hash ^= parameters_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasOp) {
        output.WriteRawTag(10);
        output.WriteString(Op);
      }
      parameters_.WriteTo(output, _repeated_parameters_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasOp) {
        output.WriteRawTag(10);
        output.WriteString(Op);
      }
      parameters_.WriteTo(ref output, _repeated_parameters_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasOp) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Op);
      }
      size += parameters_.CalculateSize(_repeated_parameters_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RecipeStep other) {
      if (other == null) {
        return;
      }
      if (other.HasOp) {
        Op = other.Op;
      }
      parameters_.Add(other.parameters_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Op = input.ReadString();
            break;
          }
          case 18: {
            parameters_.AddEntriesFrom(input, _repeated_parameters_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Op = input.ReadString();
            break;
          }
          case 18: {
            parameters_.AddEntriesFrom(ref input, _repeated_parameters_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// RecipeStepParam is a key value parameter of the recipe
  /// </summary>
  public sealed partial class RecipeStepParam : pb::IMessage<RecipeStepParam>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RecipeStepParam> _parser = new pb::MessageParser<RecipeStepParam>(() => new RecipeStepParam());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RecipeStepParam> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[90]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecipeStepParam() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecipeStepParam(RecipeStepParam other) : this() {
      name_ = other.name_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecipeStepParam Clone() {
      return new RecipeStepParam(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private readonly static string NameDefaultValue = "";

    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private readonly static string ValueDefaultValue = "";

    private string value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_ ?? ValueDefaultValue; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "value" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasValue {
      get { return value_ != null; }
    }
    /// <summary>Clears the value of the "value" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearValue() {
      value_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RecipeStepParam);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RecipeStepParam other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasName) hash ^= Name.GetHashCode();
      if (HasValue) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasValue) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasValue) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasValue) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RecipeStepParam other) {
      if (other == null) {
        return;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasValue) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Schema : pb::IMessage<Schema>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Schema> _parser = new pb::MessageParser<Schema>(() => new Schema());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Schema> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[91]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Schema() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Schema(Schema other) : this() {
      tsSchema_ = other.tsSchema_ != null ? other.tsSchema_.Clone() : null;
      columns_ = other.columns_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Schema Clone() {
      return new Schema(this);
    }

    /// <summary>Field number for the "tsSchema" field.</summary>
    public const int TsSchemaFieldNumber = 1;
    private global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.TimeSeriesSchema tsSchema_;
    /// <summary>
    /// Time series schema. Set time series specific parameters.
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.TimeSeriesSchema TsSchema {
      get { return tsSchema_; }
      set {
        tsSchema_ = value;
      }
    }

    /// <summary>Field number for the "columns" field.</summary>
    public const int ColumnsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Column> _repeated_columns_codec
        = pb::FieldCodec.ForMessage(18, global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Column.Parser);
    private readonly pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Column> columns_ = new pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Column>();
    /// <summary>
    /// Columns
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.Column> Columns {
      get { return columns_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Schema);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Schema other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TsSchema, other.TsSchema)) return false;
      if(!columns_.Equals(other.columns_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (tsSchema_ != null) hash ^= TsSchema.GetHashCode();
      hash ^= columns_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (tsSchema_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TsSchema);
      }
      columns_.WriteTo(output, _repeated_columns_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (tsSchema_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TsSchema);
      }
      columns_.WriteTo(ref output, _repeated_columns_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (tsSchema_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TsSchema);
      }
      size += columns_.CalculateSize(_repeated_columns_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Schema other) {
      if (other == null) {
        return;
      }
      if (other.tsSchema_ != null) {
        if (tsSchema_ == null) {
          TsSchema = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.TimeSeriesSchema();
        }
        TsSchema.MergeFrom(other.TsSchema);
      }
      columns_.Add(other.columns_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (tsSchema_ == null) {
              TsSchema = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.TimeSeriesSchema();
            }
            input.ReadMessage(TsSchema);
            break;
          }
          case 18: {
            columns_.AddEntriesFrom(input, _repeated_columns_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (tsSchema_ == null) {
              TsSchema = new global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.TimeSeriesSchema();
            }
            input.ReadMessage(TsSchema);
            break;
          }
          case 18: {
            columns_.AddEntriesFrom(ref input, _repeated_columns_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Signatures contains the sha256 signatures of the datasets
  /// </summary>
  public sealed partial class Signatures : pb::IMessage<Signatures>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Signatures> _parser = new pb::MessageParser<Signatures>(() => new Signatures());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Signatures> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[92]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Signatures() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Signatures(Signatures other) : this() {
      data_ = other.data_;
      labels_ = other.labels_;
      train_ = other.train_;
      test_ = other.test_;
      validation_ = other.validation_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Signatures Clone() {
      return new Signatures(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 2;
    private readonly static string DataDefaultValue = "";

    private string data_;
    /// <summary>
    /// Data to the full data file (e.g. csv file).
    /// +required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data {
      get { return data_ ?? DataDefaultValue; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "data" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasData {
      get { return data_ != null; }
    }
    /// <summary>Clears the value of the "data" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearData() {
      data_ = null;
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 3;
    private readonly static string LabelsDefaultValue = "";

    private string labels_;
    /// <summary>
    /// The location of the labels file (If exist)
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Labels {
      get { return labels_ ?? LabelsDefaultValue; }
      set {
        labels_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "labels" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLabels {
      get { return labels_ != null; }
    }
    /// <summary>Clears the value of the "labels" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLabels() {
      labels_ = null;
    }

    /// <summary>Field number for the "train" field.</summary>
    public const int TrainFieldNumber = 4;
    private readonly static string TrainDefaultValue = "";

    private string train_;
    /// <summary>
    /// path to the training set
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Train {
      get { return train_ ?? TrainDefaultValue; }
      set {
        train_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "train" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTrain {
      get { return train_ != null; }
    }
    /// <summary>Clears the value of the "train" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTrain() {
      train_ = null;
    }

    /// <summary>Field number for the "test" field.</summary>
    public const int TestFieldNumber = 5;
    private readonly static string TestDefaultValue = "";

    private string test_;
    /// <summary>
    /// the location of the training data, if different from the data.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Test {
      get { return test_ ?? TestDefaultValue; }
      set {
        test_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "test" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTest {
      get { return test_ != null; }
    }
    /// <summary>Clears the value of the "test" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTest() {
      test_ = null;
    }

    /// <summary>Field number for the "validation" field.</summary>
    public const int ValidationFieldNumber = 6;
    private readonly static string ValidationDefaultValue = "";

    private string validation_;
    /// <summary>
    /// Pointer to the validation
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Validation {
      get { return validation_ ?? ValidationDefaultValue; }
      set {
        validation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "validation" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasValidation {
      get { return validation_ != null; }
    }
    /// <summary>Clears the value of the "validation" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearValidation() {
      validation_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Signatures);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Signatures other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data != other.Data) return false;
      if (Labels != other.Labels) return false;
      if (Train != other.Train) return false;
      if (Test != other.Test) return false;
      if (Validation != other.Validation) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasData) hash ^= Data.GetHashCode();
      if (HasLabels) hash ^= Labels.GetHashCode();
      if (HasTrain) hash ^= Train.GetHashCode();
      if (HasTest) hash ^= Test.GetHashCode();
      if (HasValidation) hash ^= Validation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasData) {
        output.WriteRawTag(18);
        output.WriteString(Data);
      }
      if (HasLabels) {
        output.WriteRawTag(26);
        output.WriteString(Labels);
      }
      if (HasTrain) {
        output.WriteRawTag(34);
        output.WriteString(Train);
      }
      if (HasTest) {
        output.WriteRawTag(42);
        output.WriteString(Test);
      }
      if (HasValidation) {
        output.WriteRawTag(50);
        output.WriteString(Validation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasData) {
        output.WriteRawTag(18);
        output.WriteString(Data);
      }
      if (HasLabels) {
        output.WriteRawTag(26);
        output.WriteString(Labels);
      }
      if (HasTrain) {
        output.WriteRawTag(34);
        output.WriteString(Train);
      }
      if (HasTest) {
        output.WriteRawTag(42);
        output.WriteString(Test);
      }
      if (HasValidation) {
        output.WriteRawTag(50);
        output.WriteString(Validation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasData) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data);
      }
      if (HasLabels) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Labels);
      }
      if (HasTrain) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Train);
      }
      if (HasTest) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Test);
      }
      if (HasValidation) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Validation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Signatures other) {
      if (other == null) {
        return;
      }
      if (other.HasData) {
        Data = other.Data;
      }
      if (other.HasLabels) {
        Labels = other.Labels;
      }
      if (other.HasTrain) {
        Train = other.Train;
      }
      if (other.HasTest) {
        Test = other.Test;
      }
      if (other.HasValidation) {
        Validation = other.Validation;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            Data = input.ReadString();
            break;
          }
          case 26: {
            Labels = input.ReadString();
            break;
          }
          case 34: {
            Train = input.ReadString();
            break;
          }
          case 42: {
            Test = input.ReadString();
            break;
          }
          case 50: {
            Validation = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            Data = input.ReadString();
            break;
          }
          case 26: {
            Labels = input.ReadString();
            break;
          }
          case 34: {
            Train = input.ReadString();
            break;
          }
          case 42: {
            Test = input.ReadString();
            break;
          }
          case 50: {
            Validation = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Represent a stack holder in the product.
  /// Each stake holder can hove one or more roles.
  /// </summary>
  public sealed partial class StakeHolder : pb::IMessage<StakeHolder>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StakeHolder> _parser = new pb::MessageParser<StakeHolder>(() => new StakeHolder());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StakeHolder> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[93]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StakeHolder() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StakeHolder(StakeHolder other) : this() {
      accountName_ = other.accountName_;
      roles_ = other.roles_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StakeHolder Clone() {
      return new StakeHolder(this);
    }

    /// <summary>Field number for the "accountName" field.</summary>
    public const int AccountNameFieldNumber = 1;
    private readonly static string AccountNameDefaultValue = "";

    private string accountName_;
    /// <summary>
    /// The account name of the stake holder
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccountName {
      get { return accountName_ ?? AccountNameDefaultValue; }
      set {
        accountName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "accountName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAccountName {
      get { return accountName_ != null; }
    }
    /// <summary>Clears the value of the "accountName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAccountName() {
      accountName_ = null;
    }

    /// <summary>Field number for the "roles" field.</summary>
    public const int RolesFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_roles_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> roles_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The roles assigned to the stake holder
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Roles {
      get { return roles_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StakeHolder);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StakeHolder other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountName != other.AccountName) return false;
      if(!roles_.Equals(other.roles_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAccountName) hash ^= AccountName.GetHashCode();
      hash ^= roles_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAccountName) {
        output.WriteRawTag(10);
        output.WriteString(AccountName);
      }
      roles_.WriteTo(output, _repeated_roles_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAccountName) {
        output.WriteRawTag(10);
        output.WriteString(AccountName);
      }
      roles_.WriteTo(ref output, _repeated_roles_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAccountName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountName);
      }
      size += roles_.CalculateSize(_repeated_roles_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StakeHolder other) {
      if (other == null) {
        return;
      }
      if (other.HasAccountName) {
        AccountName = other.AccountName;
      }
      roles_.Add(other.roles_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AccountName = input.ReadString();
            break;
          }
          case 18: {
            roles_.AddEntriesFrom(input, _repeated_roles_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            AccountName = input.ReadString();
            break;
          }
          case 18: {
            roles_.AddEntriesFrom(ref input, _repeated_roles_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Table : pb::IMessage<Table>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Table> _parser = new pb::MessageParser<Table>(() => new Table());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Table> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[94]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Table() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Table(Table other) : this() {
      versionName_ = other.versionName_;
      description_ = other.description_;
      query_ = other.query_;
      serverType_ = other.serverType_;
      connectionString_ = other.connectionString_;
      connectionRef_ = other.connectionRef_ != null ? other.connectionRef_.Clone() : null;
      serverVersion_ = other.serverVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Table Clone() {
      return new Table(this);
    }

    /// <summary>Field number for the "versionName" field.</summary>
    public const int VersionNameFieldNumber = 1;
    private readonly static string VersionNameDefaultValue = "";

    private string versionName_;
    /// <summary>
    /// +kubebuilder:validation:MaxLength=64
    /// +kubebuilder:validation:Pattern="[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VersionName {
      get { return versionName_ ?? VersionNameDefaultValue; }
      set {
        versionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "versionName" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasVersionName {
      get { return versionName_ != null; }
    }
    /// <summary>Clears the value of the "versionName" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearVersionName() {
      versionName_ = null;
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private readonly static string DescriptionDefaultValue = "";

    private string description_;
    /// <summary>
    /// User provided description
    /// +kubebuilder:default =""
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_ ?? DescriptionDefaultValue; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "description" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDescription {
      get { return description_ != null; }
    }
    /// <summary>Clears the value of the "description" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDescription() {
      description_ = null;
    }

    /// <summary>Field number for the "query" field.</summary>
    public const int QueryFieldNumber = 3;
    private readonly static string QueryDefaultValue = "";

    private string query_;
    /// <summary>
    /// The actual query. this is required.
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Query {
      get { return query_ ?? QueryDefaultValue; }
      set {
        query_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "query" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasQuery {
      get { return query_ != null; }
    }
    /// <summary>Clears the value of the "query" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearQuery() {
      query_ = null;
    }

    /// <summary>Field number for the "serverType" field.</summary>
    public const int ServerTypeFieldNumber = 4;
    private readonly static string ServerTypeDefaultValue = "";

    private string serverType_;
    /// <summary>
    /// Type of server
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServerType {
      get { return serverType_ ?? ServerTypeDefaultValue; }
      set {
        serverType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "serverType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasServerType {
      get { return serverType_ != null; }
    }
    /// <summary>Clears the value of the "serverType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearServerType() {
      serverType_ = null;
    }

    /// <summary>Field number for the "connectionString" field.</summary>
    public const int ConnectionStringFieldNumber = 5;
    private readonly static string ConnectionStringDefaultValue = "";

    private string connectionString_;
    /// <summary>
    /// ConnectionString to connect to the database server
    /// +kubebuilder:validation:MaxLength=128
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConnectionString {
      get { return connectionString_ ?? ConnectionStringDefaultValue; }
      set {
        connectionString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "connectionString" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasConnectionString {
      get { return connectionString_ != null; }
    }
    /// <summary>Clears the value of the "connectionString" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearConnectionString() {
      connectionString_ = null;
    }

    /// <summary>Field number for the "connectionRef" field.</summary>
    public const int ConnectionRefFieldNumber = 6;
    private global::K8S.Io.Api.Core.V1.ObjectReference connectionRef_;
    /// <summary>
    /// Connection refer to a connection object that point to secret
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K8S.Io.Api.Core.V1.ObjectReference ConnectionRef {
      get { return connectionRef_; }
      set {
        connectionRef_ = value;
      }
    }

    /// <summary>Field number for the "serverVersion" field.</summary>
    public const int ServerVersionFieldNumber = 7;
    private readonly static string ServerVersionDefaultValue = "";

    private string serverVersion_;
    /// <summary>
    /// The version of the server.
    /// +kubebuilder:validation:Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServerVersion {
      get { return serverVersion_ ?? ServerVersionDefaultValue; }
      set {
        serverVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "serverVersion" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasServerVersion {
      get { return serverVersion_ != null; }
    }
    /// <summary>Clears the value of the "serverVersion" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearServerVersion() {
      serverVersion_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Table);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Table other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (VersionName != other.VersionName) return false;
      if (Description != other.Description) return false;
      if (Query != other.Query) return false;
      if (ServerType != other.ServerType) return false;
      if (ConnectionString != other.ConnectionString) return false;
      if (!object.Equals(ConnectionRef, other.ConnectionRef)) return false;
      if (ServerVersion != other.ServerVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasVersionName) hash ^= VersionName.GetHashCode();
      if (HasDescription) hash ^= Description.GetHashCode();
      if (HasQuery) hash ^= Query.GetHashCode();
      if (HasServerType) hash ^= ServerType.GetHashCode();
      if (HasConnectionString) hash ^= ConnectionString.GetHashCode();
      if (connectionRef_ != null) hash ^= ConnectionRef.GetHashCode();
      if (HasServerVersion) hash ^= ServerVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasVersionName) {
        output.WriteRawTag(10);
        output.WriteString(VersionName);
      }
      if (HasDescription) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (HasQuery) {
        output.WriteRawTag(26);
        output.WriteString(Query);
      }
      if (HasServerType) {
        output.WriteRawTag(34);
        output.WriteString(ServerType);
      }
      if (HasConnectionString) {
        output.WriteRawTag(42);
        output.WriteString(ConnectionString);
      }
      if (connectionRef_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ConnectionRef);
      }
      if (HasServerVersion) {
        output.WriteRawTag(58);
        output.WriteString(ServerVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasVersionName) {
        output.WriteRawTag(10);
        output.WriteString(VersionName);
      }
      if (HasDescription) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (HasQuery) {
        output.WriteRawTag(26);
        output.WriteString(Query);
      }
      if (HasServerType) {
        output.WriteRawTag(34);
        output.WriteString(ServerType);
      }
      if (HasConnectionString) {
        output.WriteRawTag(42);
        output.WriteString(ConnectionString);
      }
      if (connectionRef_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ConnectionRef);
      }
      if (HasServerVersion) {
        output.WriteRawTag(58);
        output.WriteString(ServerVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasVersionName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VersionName);
      }
      if (HasDescription) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (HasQuery) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Query);
      }
      if (HasServerType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServerType);
      }
      if (HasConnectionString) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConnectionString);
      }
      if (connectionRef_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConnectionRef);
      }
      if (HasServerVersion) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServerVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Table other) {
      if (other == null) {
        return;
      }
      if (other.HasVersionName) {
        VersionName = other.VersionName;
      }
      if (other.HasDescription) {
        Description = other.Description;
      }
      if (other.HasQuery) {
        Query = other.Query;
      }
      if (other.HasServerType) {
        ServerType = other.ServerType;
      }
      if (other.HasConnectionString) {
        ConnectionString = other.ConnectionString;
      }
      if (other.connectionRef_ != null) {
        if (connectionRef_ == null) {
          ConnectionRef = new global::K8S.Io.Api.Core.V1.ObjectReference();
        }
        ConnectionRef.MergeFrom(other.ConnectionRef);
      }
      if (other.HasServerVersion) {
        ServerVersion = other.ServerVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            VersionName = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            Query = input.ReadString();
            break;
          }
          case 34: {
            ServerType = input.ReadString();
            break;
          }
          case 42: {
            ConnectionString = input.ReadString();
            break;
          }
          case 50: {
            if (connectionRef_ == null) {
              ConnectionRef = new global::K8S.Io.Api.Core.V1.ObjectReference();
            }
            input.ReadMessage(ConnectionRef);
            break;
          }
          case 58: {
            ServerVersion = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            VersionName = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            Query = input.ReadString();
            break;
          }
          case 34: {
            ServerType = input.ReadString();
            break;
          }
          case 42: {
            ConnectionString = input.ReadString();
            break;
          }
          case 50: {
            if (connectionRef_ == null) {
              ConnectionRef = new global::K8S.Io.Api.Core.V1.ObjectReference();
            }
            input.ReadMessage(ConnectionRef);
            break;
          }
          case 58: {
            ServerVersion = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TimeSeriesSchema : pb::IMessage<TimeSeriesSchema>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TimeSeriesSchema> _parser = new pb::MessageParser<TimeSeriesSchema>(() => new TimeSeriesSchema());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TimeSeriesSchema> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Github.Com.Metaprov.Modelaapi.Pkg.Apis.Data.V1Alpha1.GeneratedReflection.Descriptor.MessageTypes[95]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeSeriesSchema() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeSeriesSchema(TimeSeriesSchema other) : this() {
      freq_ = other.freq_;
      country_ = other.country_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeSeriesSchema Clone() {
      return new TimeSeriesSchema(this);
    }

    /// <summary>Field number for the "freq" field.</summary>
    public const int FreqFieldNumber = 1;
    private readonly static string FreqDefaultValue = "";

    private string freq_;
    /// <summary>
    /// The time series frequency
    /// required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Freq {
      get { return freq_ ?? FreqDefaultValue; }
      set {
        freq_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "freq" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFreq {
      get { return freq_ != null; }
    }
    /// <summary>Clears the value of the "freq" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFreq() {
      freq_ = null;
    }

    /// <summary>Field number for the "country" field.</summary>
    public const int CountryFieldNumber = 2;
    private readonly static string CountryDefaultValue = "";

    private string country_;
    /// <summary>
    /// take holiday into account
    /// required
    /// default is US
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Country {
      get { return country_ ?? CountryDefaultValue; }
      set {
        country_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "country" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCountry {
      get { return country_ != null; }
    }
    /// <summary>Clears the value of the "country" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCountry() {
      country_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TimeSeriesSchema);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TimeSeriesSchema other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Freq != other.Freq) return false;
      if (Country != other.Country) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasFreq) hash ^= Freq.GetHashCode();
      if (HasCountry) hash ^= Country.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasFreq) {
        output.WriteRawTag(10);
        output.WriteString(Freq);
      }
      if (HasCountry) {
        output.WriteRawTag(18);
        output.WriteString(Country);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasFreq) {
        output.WriteRawTag(10);
        output.WriteString(Freq);
      }
      if (HasCountry) {
        output.WriteRawTag(18);
        output.WriteString(Country);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasFreq) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Freq);
      }
      if (HasCountry) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Country);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TimeSeriesSchema other) {
      if (other == null) {
        return;
      }
      if (other.HasFreq) {
        Freq = other.Freq;
      }
      if (other.HasCountry) {
        Country = other.Country;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Freq = input.ReadString();
            break;
          }
          case 18: {
            Country = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Freq = input.ReadString();
            break;
          }
          case 18: {
            Country = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
