// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: github.com/metaprov/modeldapi/services/license/v1/license.proto

package github.com.metaprov.modeldapi.services.license.v1;

public final class License {
  private License() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ListLicensesRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:github.com.metaprov.modeldapi.services.license.v1.ListLicensesRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string namespace = 1;</code>
     * @return The namespace.
     */
    java.lang.String getNamespace();
    /**
     * <code>string namespace = 1;</code>
     * @return The bytes for namespace.
     */
    com.google.protobuf.ByteString
        getNamespaceBytes();

    /**
     * <code>map&lt;string, string&gt; labels = 3;</code>
     */
    int getLabelsCount();
    /**
     * <code>map&lt;string, string&gt; labels = 3;</code>
     */
    boolean containsLabels(
        java.lang.String key);
    /**
     * Use {@link #getLabelsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getLabels();
    /**
     * <code>map&lt;string, string&gt; labels = 3;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getLabelsMap();
    /**
     * <code>map&lt;string, string&gt; labels = 3;</code>
     */

    java.lang.String getLabelsOrDefault(
        java.lang.String key,
        java.lang.String defaultValue);
    /**
     * <code>map&lt;string, string&gt; labels = 3;</code>
     */

    java.lang.String getLabelsOrThrow(
        java.lang.String key);
  }
  /**
   * Protobuf type {@code github.com.metaprov.modeldapi.services.license.v1.ListLicensesRequest}
   */
  public static final class ListLicensesRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:github.com.metaprov.modeldapi.services.license.v1.ListLicensesRequest)
      ListLicensesRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ListLicensesRequest.newBuilder() to construct.
    private ListLicensesRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ListLicensesRequest() {
      namespace_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ListLicensesRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ListLicensesRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              namespace_ = s;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                labels_ = com.google.protobuf.MapField.newMapField(
                    LabelsDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              labels__ = input.readMessage(
                  LabelsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              labels_.getMutableMap().put(
                  labels__.getKey(), labels__.getValue());
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_ListLicensesRequest_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 3:
          return internalGetLabels();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_ListLicensesRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesRequest.class, github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesRequest.Builder.class);
    }

    public static final int NAMESPACE_FIELD_NUMBER = 1;
    private volatile java.lang.Object namespace_;
    /**
     * <code>string namespace = 1;</code>
     * @return The namespace.
     */
    @java.lang.Override
    public java.lang.String getNamespace() {
      java.lang.Object ref = namespace_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        namespace_ = s;
        return s;
      }
    }
    /**
     * <code>string namespace = 1;</code>
     * @return The bytes for namespace.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNamespaceBytes() {
      java.lang.Object ref = namespace_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        namespace_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LABELS_FIELD_NUMBER = 3;
    private static final class LabelsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_ListLicensesRequest_LabelsEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> labels_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetLabels() {
      if (labels_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            LabelsDefaultEntryHolder.defaultEntry);
      }
      return labels_;
    }

    public int getLabelsCount() {
      return internalGetLabels().getMap().size();
    }
    /**
     * <code>map&lt;string, string&gt; labels = 3;</code>
     */

    @java.lang.Override
    public boolean containsLabels(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetLabels().getMap().containsKey(key);
    }
    /**
     * Use {@link #getLabelsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getLabels() {
      return getLabelsMap();
    }
    /**
     * <code>map&lt;string, string&gt; labels = 3;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, java.lang.String> getLabelsMap() {
      return internalGetLabels().getMap();
    }
    /**
     * <code>map&lt;string, string&gt; labels = 3;</code>
     */
    @java.lang.Override

    public java.lang.String getLabelsOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetLabels().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, string&gt; labels = 3;</code>
     */
    @java.lang.Override

    public java.lang.String getLabelsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetLabels().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNamespaceBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, namespace_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetLabels(),
          LabelsDefaultEntryHolder.defaultEntry,
          3);
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNamespaceBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, namespace_);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetLabels().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        labels__ = LabelsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, labels__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesRequest)) {
        return super.equals(obj);
      }
      github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesRequest other = (github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesRequest) obj;

      if (!getNamespace()
          .equals(other.getNamespace())) return false;
      if (!internalGetLabels().equals(
          other.internalGetLabels())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAMESPACE_FIELD_NUMBER;
      hash = (53 * hash) + getNamespace().hashCode();
      if (!internalGetLabels().getMap().isEmpty()) {
        hash = (37 * hash) + LABELS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetLabels().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code github.com.metaprov.modeldapi.services.license.v1.ListLicensesRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:github.com.metaprov.modeldapi.services.license.v1.ListLicensesRequest)
        github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_ListLicensesRequest_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 3:
            return internalGetLabels();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 3:
            return internalGetMutableLabels();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_ListLicensesRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesRequest.class, github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesRequest.Builder.class);
      }

      // Construct using github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        namespace_ = "";

        internalGetMutableLabels().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_ListLicensesRequest_descriptor;
      }

      @java.lang.Override
      public github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesRequest getDefaultInstanceForType() {
        return github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesRequest.getDefaultInstance();
      }

      @java.lang.Override
      public github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesRequest build() {
        github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesRequest buildPartial() {
        github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesRequest result = new github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesRequest(this);
        int from_bitField0_ = bitField0_;
        result.namespace_ = namespace_;
        result.labels_ = internalGetLabels();
        result.labels_.makeImmutable();
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesRequest) {
          return mergeFrom((github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesRequest other) {
        if (other == github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesRequest.getDefaultInstance()) return this;
        if (!other.getNamespace().isEmpty()) {
          namespace_ = other.namespace_;
          onChanged();
        }
        internalGetMutableLabels().mergeFrom(
            other.internalGetLabels());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object namespace_ = "";
      /**
       * <code>string namespace = 1;</code>
       * @return The namespace.
       */
      public java.lang.String getNamespace() {
        java.lang.Object ref = namespace_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          namespace_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string namespace = 1;</code>
       * @return The bytes for namespace.
       */
      public com.google.protobuf.ByteString
          getNamespaceBytes() {
        java.lang.Object ref = namespace_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          namespace_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string namespace = 1;</code>
       * @param value The namespace to set.
       * @return This builder for chaining.
       */
      public Builder setNamespace(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        namespace_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string namespace = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearNamespace() {
        
        namespace_ = getDefaultInstance().getNamespace();
        onChanged();
        return this;
      }
      /**
       * <code>string namespace = 1;</code>
       * @param value The bytes for namespace to set.
       * @return This builder for chaining.
       */
      public Builder setNamespaceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        namespace_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> labels_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetLabels() {
        if (labels_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              LabelsDefaultEntryHolder.defaultEntry);
        }
        return labels_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMutableLabels() {
        onChanged();;
        if (labels_ == null) {
          labels_ = com.google.protobuf.MapField.newMapField(
              LabelsDefaultEntryHolder.defaultEntry);
        }
        if (!labels_.isMutable()) {
          labels_ = labels_.copy();
        }
        return labels_;
      }

      public int getLabelsCount() {
        return internalGetLabels().getMap().size();
      }
      /**
       * <code>map&lt;string, string&gt; labels = 3;</code>
       */

      @java.lang.Override
      public boolean containsLabels(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetLabels().getMap().containsKey(key);
      }
      /**
       * Use {@link #getLabelsMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getLabels() {
        return getLabelsMap();
      }
      /**
       * <code>map&lt;string, string&gt; labels = 3;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.String, java.lang.String> getLabelsMap() {
        return internalGetLabels().getMap();
      }
      /**
       * <code>map&lt;string, string&gt; labels = 3;</code>
       */
      @java.lang.Override

      public java.lang.String getLabelsOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetLabels().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, string&gt; labels = 3;</code>
       */
      @java.lang.Override

      public java.lang.String getLabelsOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetLabels().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearLabels() {
        internalGetMutableLabels().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, string&gt; labels = 3;</code>
       */

      public Builder removeLabels(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableLabels().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
      getMutableLabels() {
        return internalGetMutableLabels().getMutableMap();
      }
      /**
       * <code>map&lt;string, string&gt; labels = 3;</code>
       */
      public Builder putLabels(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableLabels().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, string&gt; labels = 3;</code>
       */

      public Builder putAllLabels(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableLabels().getMutableMap()
            .putAll(values);
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:github.com.metaprov.modeldapi.services.license.v1.ListLicensesRequest)
    }

    // @@protoc_insertion_point(class_scope:github.com.metaprov.modeldapi.services.license.v1.ListLicensesRequest)
    private static final github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesRequest();
    }

    public static github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ListLicensesRequest>
        PARSER = new com.google.protobuf.AbstractParser<ListLicensesRequest>() {
      @java.lang.Override
      public ListLicensesRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ListLicensesRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ListLicensesRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ListLicensesRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ListLicensesResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:github.com.metaprov.modeldapi.services.license.v1.ListLicensesResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.LicenseList items = 1;</code>
     * @return Whether the items field is set.
     */
    boolean hasItems();
    /**
     * <code>.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.LicenseList items = 1;</code>
     * @return The items.
     */
    github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.LicenseList getItems();
    /**
     * <code>.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.LicenseList items = 1;</code>
     */
    github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.LicenseListOrBuilder getItemsOrBuilder();
  }
  /**
   * Protobuf type {@code github.com.metaprov.modeldapi.services.license.v1.ListLicensesResponse}
   */
  public static final class ListLicensesResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:github.com.metaprov.modeldapi.services.license.v1.ListLicensesResponse)
      ListLicensesResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ListLicensesResponse.newBuilder() to construct.
    private ListLicensesResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ListLicensesResponse() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ListLicensesResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ListLicensesResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.LicenseList.Builder subBuilder = null;
              if (items_ != null) {
                subBuilder = items_.toBuilder();
              }
              items_ = input.readMessage(github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.LicenseList.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(items_);
                items_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_ListLicensesResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_ListLicensesResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesResponse.class, github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesResponse.Builder.class);
    }

    public static final int ITEMS_FIELD_NUMBER = 1;
    private github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.LicenseList items_;
    /**
     * <code>.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.LicenseList items = 1;</code>
     * @return Whether the items field is set.
     */
    @java.lang.Override
    public boolean hasItems() {
      return items_ != null;
    }
    /**
     * <code>.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.LicenseList items = 1;</code>
     * @return The items.
     */
    @java.lang.Override
    public github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.LicenseList getItems() {
      return items_ == null ? github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.LicenseList.getDefaultInstance() : items_;
    }
    /**
     * <code>.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.LicenseList items = 1;</code>
     */
    @java.lang.Override
    public github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.LicenseListOrBuilder getItemsOrBuilder() {
      return getItems();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (items_ != null) {
        output.writeMessage(1, getItems());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (items_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getItems());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesResponse)) {
        return super.equals(obj);
      }
      github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesResponse other = (github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesResponse) obj;

      if (hasItems() != other.hasItems()) return false;
      if (hasItems()) {
        if (!getItems()
            .equals(other.getItems())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasItems()) {
        hash = (37 * hash) + ITEMS_FIELD_NUMBER;
        hash = (53 * hash) + getItems().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code github.com.metaprov.modeldapi.services.license.v1.ListLicensesResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:github.com.metaprov.modeldapi.services.license.v1.ListLicensesResponse)
        github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_ListLicensesResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_ListLicensesResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesResponse.class, github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesResponse.Builder.class);
      }

      // Construct using github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (itemsBuilder_ == null) {
          items_ = null;
        } else {
          items_ = null;
          itemsBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_ListLicensesResponse_descriptor;
      }

      @java.lang.Override
      public github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesResponse getDefaultInstanceForType() {
        return github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesResponse.getDefaultInstance();
      }

      @java.lang.Override
      public github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesResponse build() {
        github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesResponse buildPartial() {
        github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesResponse result = new github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesResponse(this);
        if (itemsBuilder_ == null) {
          result.items_ = items_;
        } else {
          result.items_ = itemsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesResponse) {
          return mergeFrom((github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesResponse other) {
        if (other == github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesResponse.getDefaultInstance()) return this;
        if (other.hasItems()) {
          mergeItems(other.getItems());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.LicenseList items_;
      private com.google.protobuf.SingleFieldBuilderV3<
          github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.LicenseList, github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.LicenseList.Builder, github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.LicenseListOrBuilder> itemsBuilder_;
      /**
       * <code>.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.LicenseList items = 1;</code>
       * @return Whether the items field is set.
       */
      public boolean hasItems() {
        return itemsBuilder_ != null || items_ != null;
      }
      /**
       * <code>.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.LicenseList items = 1;</code>
       * @return The items.
       */
      public github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.LicenseList getItems() {
        if (itemsBuilder_ == null) {
          return items_ == null ? github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.LicenseList.getDefaultInstance() : items_;
        } else {
          return itemsBuilder_.getMessage();
        }
      }
      /**
       * <code>.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.LicenseList items = 1;</code>
       */
      public Builder setItems(github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.LicenseList value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          items_ = value;
          onChanged();
        } else {
          itemsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.LicenseList items = 1;</code>
       */
      public Builder setItems(
          github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.LicenseList.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          items_ = builderForValue.build();
          onChanged();
        } else {
          itemsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.LicenseList items = 1;</code>
       */
      public Builder mergeItems(github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.LicenseList value) {
        if (itemsBuilder_ == null) {
          if (items_ != null) {
            items_ =
              github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.LicenseList.newBuilder(items_).mergeFrom(value).buildPartial();
          } else {
            items_ = value;
          }
          onChanged();
        } else {
          itemsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.LicenseList items = 1;</code>
       */
      public Builder clearItems() {
        if (itemsBuilder_ == null) {
          items_ = null;
          onChanged();
        } else {
          items_ = null;
          itemsBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.LicenseList items = 1;</code>
       */
      public github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.LicenseList.Builder getItemsBuilder() {
        
        onChanged();
        return getItemsFieldBuilder().getBuilder();
      }
      /**
       * <code>.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.LicenseList items = 1;</code>
       */
      public github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.LicenseListOrBuilder getItemsOrBuilder() {
        if (itemsBuilder_ != null) {
          return itemsBuilder_.getMessageOrBuilder();
        } else {
          return items_ == null ?
              github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.LicenseList.getDefaultInstance() : items_;
        }
      }
      /**
       * <code>.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.LicenseList items = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.LicenseList, github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.LicenseList.Builder, github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.LicenseListOrBuilder> 
          getItemsFieldBuilder() {
        if (itemsBuilder_ == null) {
          itemsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.LicenseList, github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.LicenseList.Builder, github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.LicenseListOrBuilder>(
                  getItems(),
                  getParentForChildren(),
                  isClean());
          items_ = null;
        }
        return itemsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:github.com.metaprov.modeldapi.services.license.v1.ListLicensesResponse)
    }

    // @@protoc_insertion_point(class_scope:github.com.metaprov.modeldapi.services.license.v1.ListLicensesResponse)
    private static final github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesResponse();
    }

    public static github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ListLicensesResponse>
        PARSER = new com.google.protobuf.AbstractParser<ListLicensesResponse>() {
      @java.lang.Override
      public ListLicensesResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ListLicensesResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ListLicensesResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ListLicensesResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public github.com.metaprov.modeldapi.services.license.v1.License.ListLicensesResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LicenseResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:github.com.metaprov.modeldapi.services.license.v1.LicenseResponse)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code github.com.metaprov.modeldapi.services.license.v1.LicenseResponse}
   */
  public static final class LicenseResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:github.com.metaprov.modeldapi.services.license.v1.LicenseResponse)
      LicenseResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use LicenseResponse.newBuilder() to construct.
    private LicenseResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LicenseResponse() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new LicenseResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private LicenseResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_LicenseResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_LicenseResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              github.com.metaprov.modeldapi.services.license.v1.License.LicenseResponse.class, github.com.metaprov.modeldapi.services.license.v1.License.LicenseResponse.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof github.com.metaprov.modeldapi.services.license.v1.License.LicenseResponse)) {
        return super.equals(obj);
      }
      github.com.metaprov.modeldapi.services.license.v1.License.LicenseResponse other = (github.com.metaprov.modeldapi.services.license.v1.License.LicenseResponse) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static github.com.metaprov.modeldapi.services.license.v1.License.LicenseResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.LicenseResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.LicenseResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.LicenseResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.LicenseResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.LicenseResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.LicenseResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.LicenseResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.LicenseResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.LicenseResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.LicenseResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.LicenseResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(github.com.metaprov.modeldapi.services.license.v1.License.LicenseResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code github.com.metaprov.modeldapi.services.license.v1.LicenseResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:github.com.metaprov.modeldapi.services.license.v1.LicenseResponse)
        github.com.metaprov.modeldapi.services.license.v1.License.LicenseResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_LicenseResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_LicenseResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                github.com.metaprov.modeldapi.services.license.v1.License.LicenseResponse.class, github.com.metaprov.modeldapi.services.license.v1.License.LicenseResponse.Builder.class);
      }

      // Construct using github.com.metaprov.modeldapi.services.license.v1.License.LicenseResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_LicenseResponse_descriptor;
      }

      @java.lang.Override
      public github.com.metaprov.modeldapi.services.license.v1.License.LicenseResponse getDefaultInstanceForType() {
        return github.com.metaprov.modeldapi.services.license.v1.License.LicenseResponse.getDefaultInstance();
      }

      @java.lang.Override
      public github.com.metaprov.modeldapi.services.license.v1.License.LicenseResponse build() {
        github.com.metaprov.modeldapi.services.license.v1.License.LicenseResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public github.com.metaprov.modeldapi.services.license.v1.License.LicenseResponse buildPartial() {
        github.com.metaprov.modeldapi.services.license.v1.License.LicenseResponse result = new github.com.metaprov.modeldapi.services.license.v1.License.LicenseResponse(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof github.com.metaprov.modeldapi.services.license.v1.License.LicenseResponse) {
          return mergeFrom((github.com.metaprov.modeldapi.services.license.v1.License.LicenseResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(github.com.metaprov.modeldapi.services.license.v1.License.LicenseResponse other) {
        if (other == github.com.metaprov.modeldapi.services.license.v1.License.LicenseResponse.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        github.com.metaprov.modeldapi.services.license.v1.License.LicenseResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (github.com.metaprov.modeldapi.services.license.v1.License.LicenseResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:github.com.metaprov.modeldapi.services.license.v1.LicenseResponse)
    }

    // @@protoc_insertion_point(class_scope:github.com.metaprov.modeldapi.services.license.v1.LicenseResponse)
    private static final github.com.metaprov.modeldapi.services.license.v1.License.LicenseResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new github.com.metaprov.modeldapi.services.license.v1.License.LicenseResponse();
    }

    public static github.com.metaprov.modeldapi.services.license.v1.License.LicenseResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<LicenseResponse>
        PARSER = new com.google.protobuf.AbstractParser<LicenseResponse>() {
      @java.lang.Override
      public LicenseResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LicenseResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<LicenseResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LicenseResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public github.com.metaprov.modeldapi.services.license.v1.License.LicenseResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CreateLicenseRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:github.com.metaprov.modeldapi.services.license.v1.CreateLicenseRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.License item = 1;</code>
     * @return Whether the item field is set.
     */
    boolean hasItem();
    /**
     * <code>.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.License item = 1;</code>
     * @return The item.
     */
    github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License getItem();
    /**
     * <code>.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.License item = 1;</code>
     */
    github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.LicenseOrBuilder getItemOrBuilder();
  }
  /**
   * Protobuf type {@code github.com.metaprov.modeldapi.services.license.v1.CreateLicenseRequest}
   */
  public static final class CreateLicenseRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:github.com.metaprov.modeldapi.services.license.v1.CreateLicenseRequest)
      CreateLicenseRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CreateLicenseRequest.newBuilder() to construct.
    private CreateLicenseRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CreateLicenseRequest() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CreateLicenseRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CreateLicenseRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License.Builder subBuilder = null;
              if (item_ != null) {
                subBuilder = item_.toBuilder();
              }
              item_ = input.readMessage(github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(item_);
                item_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_CreateLicenseRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_CreateLicenseRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseRequest.class, github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseRequest.Builder.class);
    }

    public static final int ITEM_FIELD_NUMBER = 1;
    private github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License item_;
    /**
     * <code>.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.License item = 1;</code>
     * @return Whether the item field is set.
     */
    @java.lang.Override
    public boolean hasItem() {
      return item_ != null;
    }
    /**
     * <code>.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.License item = 1;</code>
     * @return The item.
     */
    @java.lang.Override
    public github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License getItem() {
      return item_ == null ? github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License.getDefaultInstance() : item_;
    }
    /**
     * <code>.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.License item = 1;</code>
     */
    @java.lang.Override
    public github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.LicenseOrBuilder getItemOrBuilder() {
      return getItem();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (item_ != null) {
        output.writeMessage(1, getItem());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (item_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getItem());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseRequest)) {
        return super.equals(obj);
      }
      github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseRequest other = (github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseRequest) obj;

      if (hasItem() != other.hasItem()) return false;
      if (hasItem()) {
        if (!getItem()
            .equals(other.getItem())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasItem()) {
        hash = (37 * hash) + ITEM_FIELD_NUMBER;
        hash = (53 * hash) + getItem().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code github.com.metaprov.modeldapi.services.license.v1.CreateLicenseRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:github.com.metaprov.modeldapi.services.license.v1.CreateLicenseRequest)
        github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_CreateLicenseRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_CreateLicenseRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseRequest.class, github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseRequest.Builder.class);
      }

      // Construct using github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (itemBuilder_ == null) {
          item_ = null;
        } else {
          item_ = null;
          itemBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_CreateLicenseRequest_descriptor;
      }

      @java.lang.Override
      public github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseRequest getDefaultInstanceForType() {
        return github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseRequest.getDefaultInstance();
      }

      @java.lang.Override
      public github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseRequest build() {
        github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseRequest buildPartial() {
        github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseRequest result = new github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseRequest(this);
        if (itemBuilder_ == null) {
          result.item_ = item_;
        } else {
          result.item_ = itemBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseRequest) {
          return mergeFrom((github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseRequest other) {
        if (other == github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseRequest.getDefaultInstance()) return this;
        if (other.hasItem()) {
          mergeItem(other.getItem());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License item_;
      private com.google.protobuf.SingleFieldBuilderV3<
          github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License, github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License.Builder, github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.LicenseOrBuilder> itemBuilder_;
      /**
       * <code>.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.License item = 1;</code>
       * @return Whether the item field is set.
       */
      public boolean hasItem() {
        return itemBuilder_ != null || item_ != null;
      }
      /**
       * <code>.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.License item = 1;</code>
       * @return The item.
       */
      public github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License getItem() {
        if (itemBuilder_ == null) {
          return item_ == null ? github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License.getDefaultInstance() : item_;
        } else {
          return itemBuilder_.getMessage();
        }
      }
      /**
       * <code>.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.License item = 1;</code>
       */
      public Builder setItem(github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License value) {
        if (itemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          item_ = value;
          onChanged();
        } else {
          itemBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.License item = 1;</code>
       */
      public Builder setItem(
          github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License.Builder builderForValue) {
        if (itemBuilder_ == null) {
          item_ = builderForValue.build();
          onChanged();
        } else {
          itemBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.License item = 1;</code>
       */
      public Builder mergeItem(github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License value) {
        if (itemBuilder_ == null) {
          if (item_ != null) {
            item_ =
              github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License.newBuilder(item_).mergeFrom(value).buildPartial();
          } else {
            item_ = value;
          }
          onChanged();
        } else {
          itemBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.License item = 1;</code>
       */
      public Builder clearItem() {
        if (itemBuilder_ == null) {
          item_ = null;
          onChanged();
        } else {
          item_ = null;
          itemBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.License item = 1;</code>
       */
      public github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License.Builder getItemBuilder() {
        
        onChanged();
        return getItemFieldBuilder().getBuilder();
      }
      /**
       * <code>.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.License item = 1;</code>
       */
      public github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.LicenseOrBuilder getItemOrBuilder() {
        if (itemBuilder_ != null) {
          return itemBuilder_.getMessageOrBuilder();
        } else {
          return item_ == null ?
              github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License.getDefaultInstance() : item_;
        }
      }
      /**
       * <code>.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.License item = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License, github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License.Builder, github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.LicenseOrBuilder> 
          getItemFieldBuilder() {
        if (itemBuilder_ == null) {
          itemBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License, github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License.Builder, github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.LicenseOrBuilder>(
                  getItem(),
                  getParentForChildren(),
                  isClean());
          item_ = null;
        }
        return itemBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:github.com.metaprov.modeldapi.services.license.v1.CreateLicenseRequest)
    }

    // @@protoc_insertion_point(class_scope:github.com.metaprov.modeldapi.services.license.v1.CreateLicenseRequest)
    private static final github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseRequest();
    }

    public static github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CreateLicenseRequest>
        PARSER = new com.google.protobuf.AbstractParser<CreateLicenseRequest>() {
      @java.lang.Override
      public CreateLicenseRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CreateLicenseRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CreateLicenseRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CreateLicenseRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CreateLicenseFromKeyRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:github.com.metaprov.modeldapi.services.license.v1.CreateLicenseFromKeyRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string key = 1;</code>
     * @return The key.
     */
    java.lang.String getKey();
    /**
     * <code>string key = 1;</code>
     * @return The bytes for key.
     */
    com.google.protobuf.ByteString
        getKeyBytes();
  }
  /**
   * Protobuf type {@code github.com.metaprov.modeldapi.services.license.v1.CreateLicenseFromKeyRequest}
   */
  public static final class CreateLicenseFromKeyRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:github.com.metaprov.modeldapi.services.license.v1.CreateLicenseFromKeyRequest)
      CreateLicenseFromKeyRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CreateLicenseFromKeyRequest.newBuilder() to construct.
    private CreateLicenseFromKeyRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CreateLicenseFromKeyRequest() {
      key_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CreateLicenseFromKeyRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CreateLicenseFromKeyRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              key_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_CreateLicenseFromKeyRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_CreateLicenseFromKeyRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseFromKeyRequest.class, github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseFromKeyRequest.Builder.class);
    }

    public static final int KEY_FIELD_NUMBER = 1;
    private volatile java.lang.Object key_;
    /**
     * <code>string key = 1;</code>
     * @return The key.
     */
    @java.lang.Override
    public java.lang.String getKey() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        key_ = s;
        return s;
      }
    }
    /**
     * <code>string key = 1;</code>
     * @return The bytes for key.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getKeyBytes() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        key_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getKeyBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, key_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getKeyBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, key_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseFromKeyRequest)) {
        return super.equals(obj);
      }
      github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseFromKeyRequest other = (github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseFromKeyRequest) obj;

      if (!getKey()
          .equals(other.getKey())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + KEY_FIELD_NUMBER;
      hash = (53 * hash) + getKey().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseFromKeyRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseFromKeyRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseFromKeyRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseFromKeyRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseFromKeyRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseFromKeyRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseFromKeyRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseFromKeyRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseFromKeyRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseFromKeyRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseFromKeyRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseFromKeyRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseFromKeyRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code github.com.metaprov.modeldapi.services.license.v1.CreateLicenseFromKeyRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:github.com.metaprov.modeldapi.services.license.v1.CreateLicenseFromKeyRequest)
        github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseFromKeyRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_CreateLicenseFromKeyRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_CreateLicenseFromKeyRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseFromKeyRequest.class, github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseFromKeyRequest.Builder.class);
      }

      // Construct using github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseFromKeyRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        key_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_CreateLicenseFromKeyRequest_descriptor;
      }

      @java.lang.Override
      public github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseFromKeyRequest getDefaultInstanceForType() {
        return github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseFromKeyRequest.getDefaultInstance();
      }

      @java.lang.Override
      public github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseFromKeyRequest build() {
        github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseFromKeyRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseFromKeyRequest buildPartial() {
        github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseFromKeyRequest result = new github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseFromKeyRequest(this);
        result.key_ = key_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseFromKeyRequest) {
          return mergeFrom((github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseFromKeyRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseFromKeyRequest other) {
        if (other == github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseFromKeyRequest.getDefaultInstance()) return this;
        if (!other.getKey().isEmpty()) {
          key_ = other.key_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseFromKeyRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseFromKeyRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object key_ = "";
      /**
       * <code>string key = 1;</code>
       * @return The key.
       */
      public java.lang.String getKey() {
        java.lang.Object ref = key_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          key_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string key = 1;</code>
       * @return The bytes for key.
       */
      public com.google.protobuf.ByteString
          getKeyBytes() {
        java.lang.Object ref = key_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          key_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string key = 1;</code>
       * @param value The key to set.
       * @return This builder for chaining.
       */
      public Builder setKey(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        key_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string key = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearKey() {
        
        key_ = getDefaultInstance().getKey();
        onChanged();
        return this;
      }
      /**
       * <code>string key = 1;</code>
       * @param value The bytes for key to set.
       * @return This builder for chaining.
       */
      public Builder setKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        key_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:github.com.metaprov.modeldapi.services.license.v1.CreateLicenseFromKeyRequest)
    }

    // @@protoc_insertion_point(class_scope:github.com.metaprov.modeldapi.services.license.v1.CreateLicenseFromKeyRequest)
    private static final github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseFromKeyRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseFromKeyRequest();
    }

    public static github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseFromKeyRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CreateLicenseFromKeyRequest>
        PARSER = new com.google.protobuf.AbstractParser<CreateLicenseFromKeyRequest>() {
      @java.lang.Override
      public CreateLicenseFromKeyRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CreateLicenseFromKeyRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CreateLicenseFromKeyRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CreateLicenseFromKeyRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseFromKeyRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CreateLicenseResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:github.com.metaprov.modeldapi.services.license.v1.CreateLicenseResponse)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code github.com.metaprov.modeldapi.services.license.v1.CreateLicenseResponse}
   */
  public static final class CreateLicenseResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:github.com.metaprov.modeldapi.services.license.v1.CreateLicenseResponse)
      CreateLicenseResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CreateLicenseResponse.newBuilder() to construct.
    private CreateLicenseResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CreateLicenseResponse() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CreateLicenseResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CreateLicenseResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_CreateLicenseResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_CreateLicenseResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseResponse.class, github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseResponse.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseResponse)) {
        return super.equals(obj);
      }
      github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseResponse other = (github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseResponse) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code github.com.metaprov.modeldapi.services.license.v1.CreateLicenseResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:github.com.metaprov.modeldapi.services.license.v1.CreateLicenseResponse)
        github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_CreateLicenseResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_CreateLicenseResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseResponse.class, github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseResponse.Builder.class);
      }

      // Construct using github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_CreateLicenseResponse_descriptor;
      }

      @java.lang.Override
      public github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseResponse getDefaultInstanceForType() {
        return github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseResponse.getDefaultInstance();
      }

      @java.lang.Override
      public github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseResponse build() {
        github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseResponse buildPartial() {
        github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseResponse result = new github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseResponse(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseResponse) {
          return mergeFrom((github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseResponse other) {
        if (other == github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseResponse.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:github.com.metaprov.modeldapi.services.license.v1.CreateLicenseResponse)
    }

    // @@protoc_insertion_point(class_scope:github.com.metaprov.modeldapi.services.license.v1.CreateLicenseResponse)
    private static final github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseResponse();
    }

    public static github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CreateLicenseResponse>
        PARSER = new com.google.protobuf.AbstractParser<CreateLicenseResponse>() {
      @java.lang.Override
      public CreateLicenseResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CreateLicenseResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CreateLicenseResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CreateLicenseResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public github.com.metaprov.modeldapi.services.license.v1.License.CreateLicenseResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface UpdateLicenseRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:github.com.metaprov.modeldapi.services.license.v1.UpdateLicenseRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.License item = 5;</code>
     * @return Whether the item field is set.
     */
    boolean hasItem();
    /**
     * <code>.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.License item = 5;</code>
     * @return The item.
     */
    github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License getItem();
    /**
     * <code>.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.License item = 5;</code>
     */
    github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.LicenseOrBuilder getItemOrBuilder();
  }
  /**
   * Protobuf type {@code github.com.metaprov.modeldapi.services.license.v1.UpdateLicenseRequest}
   */
  public static final class UpdateLicenseRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:github.com.metaprov.modeldapi.services.license.v1.UpdateLicenseRequest)
      UpdateLicenseRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use UpdateLicenseRequest.newBuilder() to construct.
    private UpdateLicenseRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private UpdateLicenseRequest() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new UpdateLicenseRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private UpdateLicenseRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 42: {
              github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License.Builder subBuilder = null;
              if (item_ != null) {
                subBuilder = item_.toBuilder();
              }
              item_ = input.readMessage(github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(item_);
                item_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_UpdateLicenseRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_UpdateLicenseRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseRequest.class, github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseRequest.Builder.class);
    }

    public static final int ITEM_FIELD_NUMBER = 5;
    private github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License item_;
    /**
     * <code>.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.License item = 5;</code>
     * @return Whether the item field is set.
     */
    @java.lang.Override
    public boolean hasItem() {
      return item_ != null;
    }
    /**
     * <code>.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.License item = 5;</code>
     * @return The item.
     */
    @java.lang.Override
    public github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License getItem() {
      return item_ == null ? github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License.getDefaultInstance() : item_;
    }
    /**
     * <code>.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.License item = 5;</code>
     */
    @java.lang.Override
    public github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.LicenseOrBuilder getItemOrBuilder() {
      return getItem();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (item_ != null) {
        output.writeMessage(5, getItem());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (item_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getItem());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseRequest)) {
        return super.equals(obj);
      }
      github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseRequest other = (github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseRequest) obj;

      if (hasItem() != other.hasItem()) return false;
      if (hasItem()) {
        if (!getItem()
            .equals(other.getItem())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasItem()) {
        hash = (37 * hash) + ITEM_FIELD_NUMBER;
        hash = (53 * hash) + getItem().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code github.com.metaprov.modeldapi.services.license.v1.UpdateLicenseRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:github.com.metaprov.modeldapi.services.license.v1.UpdateLicenseRequest)
        github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_UpdateLicenseRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_UpdateLicenseRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseRequest.class, github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseRequest.Builder.class);
      }

      // Construct using github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (itemBuilder_ == null) {
          item_ = null;
        } else {
          item_ = null;
          itemBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_UpdateLicenseRequest_descriptor;
      }

      @java.lang.Override
      public github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseRequest getDefaultInstanceForType() {
        return github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseRequest.getDefaultInstance();
      }

      @java.lang.Override
      public github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseRequest build() {
        github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseRequest buildPartial() {
        github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseRequest result = new github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseRequest(this);
        if (itemBuilder_ == null) {
          result.item_ = item_;
        } else {
          result.item_ = itemBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseRequest) {
          return mergeFrom((github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseRequest other) {
        if (other == github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseRequest.getDefaultInstance()) return this;
        if (other.hasItem()) {
          mergeItem(other.getItem());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License item_;
      private com.google.protobuf.SingleFieldBuilderV3<
          github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License, github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License.Builder, github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.LicenseOrBuilder> itemBuilder_;
      /**
       * <code>.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.License item = 5;</code>
       * @return Whether the item field is set.
       */
      public boolean hasItem() {
        return itemBuilder_ != null || item_ != null;
      }
      /**
       * <code>.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.License item = 5;</code>
       * @return The item.
       */
      public github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License getItem() {
        if (itemBuilder_ == null) {
          return item_ == null ? github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License.getDefaultInstance() : item_;
        } else {
          return itemBuilder_.getMessage();
        }
      }
      /**
       * <code>.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.License item = 5;</code>
       */
      public Builder setItem(github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License value) {
        if (itemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          item_ = value;
          onChanged();
        } else {
          itemBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.License item = 5;</code>
       */
      public Builder setItem(
          github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License.Builder builderForValue) {
        if (itemBuilder_ == null) {
          item_ = builderForValue.build();
          onChanged();
        } else {
          itemBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.License item = 5;</code>
       */
      public Builder mergeItem(github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License value) {
        if (itemBuilder_ == null) {
          if (item_ != null) {
            item_ =
              github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License.newBuilder(item_).mergeFrom(value).buildPartial();
          } else {
            item_ = value;
          }
          onChanged();
        } else {
          itemBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.License item = 5;</code>
       */
      public Builder clearItem() {
        if (itemBuilder_ == null) {
          item_ = null;
          onChanged();
        } else {
          item_ = null;
          itemBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.License item = 5;</code>
       */
      public github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License.Builder getItemBuilder() {
        
        onChanged();
        return getItemFieldBuilder().getBuilder();
      }
      /**
       * <code>.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.License item = 5;</code>
       */
      public github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.LicenseOrBuilder getItemOrBuilder() {
        if (itemBuilder_ != null) {
          return itemBuilder_.getMessageOrBuilder();
        } else {
          return item_ == null ?
              github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License.getDefaultInstance() : item_;
        }
      }
      /**
       * <code>.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.License item = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License, github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License.Builder, github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.LicenseOrBuilder> 
          getItemFieldBuilder() {
        if (itemBuilder_ == null) {
          itemBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License, github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License.Builder, github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.LicenseOrBuilder>(
                  getItem(),
                  getParentForChildren(),
                  isClean());
          item_ = null;
        }
        return itemBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:github.com.metaprov.modeldapi.services.license.v1.UpdateLicenseRequest)
    }

    // @@protoc_insertion_point(class_scope:github.com.metaprov.modeldapi.services.license.v1.UpdateLicenseRequest)
    private static final github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseRequest();
    }

    public static github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<UpdateLicenseRequest>
        PARSER = new com.google.protobuf.AbstractParser<UpdateLicenseRequest>() {
      @java.lang.Override
      public UpdateLicenseRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UpdateLicenseRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<UpdateLicenseRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<UpdateLicenseRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface UpdateLicenseResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:github.com.metaprov.modeldapi.services.license.v1.UpdateLicenseResponse)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code github.com.metaprov.modeldapi.services.license.v1.UpdateLicenseResponse}
   */
  public static final class UpdateLicenseResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:github.com.metaprov.modeldapi.services.license.v1.UpdateLicenseResponse)
      UpdateLicenseResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use UpdateLicenseResponse.newBuilder() to construct.
    private UpdateLicenseResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private UpdateLicenseResponse() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new UpdateLicenseResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private UpdateLicenseResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_UpdateLicenseResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_UpdateLicenseResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseResponse.class, github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseResponse.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseResponse)) {
        return super.equals(obj);
      }
      github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseResponse other = (github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseResponse) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code github.com.metaprov.modeldapi.services.license.v1.UpdateLicenseResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:github.com.metaprov.modeldapi.services.license.v1.UpdateLicenseResponse)
        github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_UpdateLicenseResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_UpdateLicenseResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseResponse.class, github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseResponse.Builder.class);
      }

      // Construct using github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_UpdateLicenseResponse_descriptor;
      }

      @java.lang.Override
      public github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseResponse getDefaultInstanceForType() {
        return github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseResponse.getDefaultInstance();
      }

      @java.lang.Override
      public github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseResponse build() {
        github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseResponse buildPartial() {
        github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseResponse result = new github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseResponse(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseResponse) {
          return mergeFrom((github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseResponse other) {
        if (other == github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseResponse.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:github.com.metaprov.modeldapi.services.license.v1.UpdateLicenseResponse)
    }

    // @@protoc_insertion_point(class_scope:github.com.metaprov.modeldapi.services.license.v1.UpdateLicenseResponse)
    private static final github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseResponse();
    }

    public static github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<UpdateLicenseResponse>
        PARSER = new com.google.protobuf.AbstractParser<UpdateLicenseResponse>() {
      @java.lang.Override
      public UpdateLicenseResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UpdateLicenseResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<UpdateLicenseResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<UpdateLicenseResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public github.com.metaprov.modeldapi.services.license.v1.License.UpdateLicenseResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GetLicenseRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:github.com.metaprov.modeldapi.services.license.v1.GetLicenseRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string namespace = 1;</code>
     * @return The namespace.
     */
    java.lang.String getNamespace();
    /**
     * <code>string namespace = 1;</code>
     * @return The bytes for namespace.
     */
    com.google.protobuf.ByteString
        getNamespaceBytes();

    /**
     * <code>string name = 2;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <code>string name = 2;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();
  }
  /**
   * Protobuf type {@code github.com.metaprov.modeldapi.services.license.v1.GetLicenseRequest}
   */
  public static final class GetLicenseRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:github.com.metaprov.modeldapi.services.license.v1.GetLicenseRequest)
      GetLicenseRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GetLicenseRequest.newBuilder() to construct.
    private GetLicenseRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GetLicenseRequest() {
      namespace_ = "";
      name_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new GetLicenseRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GetLicenseRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              namespace_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_GetLicenseRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_GetLicenseRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseRequest.class, github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseRequest.Builder.class);
    }

    public static final int NAMESPACE_FIELD_NUMBER = 1;
    private volatile java.lang.Object namespace_;
    /**
     * <code>string namespace = 1;</code>
     * @return The namespace.
     */
    @java.lang.Override
    public java.lang.String getNamespace() {
      java.lang.Object ref = namespace_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        namespace_ = s;
        return s;
      }
    }
    /**
     * <code>string namespace = 1;</code>
     * @return The bytes for namespace.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNamespaceBytes() {
      java.lang.Object ref = namespace_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        namespace_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object name_;
    /**
     * <code>string name = 2;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 2;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNamespaceBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, namespace_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNamespaceBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, namespace_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseRequest)) {
        return super.equals(obj);
      }
      github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseRequest other = (github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseRequest) obj;

      if (!getNamespace()
          .equals(other.getNamespace())) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAMESPACE_FIELD_NUMBER;
      hash = (53 * hash) + getNamespace().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code github.com.metaprov.modeldapi.services.license.v1.GetLicenseRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:github.com.metaprov.modeldapi.services.license.v1.GetLicenseRequest)
        github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_GetLicenseRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_GetLicenseRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseRequest.class, github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseRequest.Builder.class);
      }

      // Construct using github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        namespace_ = "";

        name_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_GetLicenseRequest_descriptor;
      }

      @java.lang.Override
      public github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseRequest getDefaultInstanceForType() {
        return github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseRequest.getDefaultInstance();
      }

      @java.lang.Override
      public github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseRequest build() {
        github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseRequest buildPartial() {
        github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseRequest result = new github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseRequest(this);
        result.namespace_ = namespace_;
        result.name_ = name_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseRequest) {
          return mergeFrom((github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseRequest other) {
        if (other == github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseRequest.getDefaultInstance()) return this;
        if (!other.getNamespace().isEmpty()) {
          namespace_ = other.namespace_;
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object namespace_ = "";
      /**
       * <code>string namespace = 1;</code>
       * @return The namespace.
       */
      public java.lang.String getNamespace() {
        java.lang.Object ref = namespace_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          namespace_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string namespace = 1;</code>
       * @return The bytes for namespace.
       */
      public com.google.protobuf.ByteString
          getNamespaceBytes() {
        java.lang.Object ref = namespace_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          namespace_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string namespace = 1;</code>
       * @param value The namespace to set.
       * @return This builder for chaining.
       */
      public Builder setNamespace(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        namespace_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string namespace = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearNamespace() {
        
        namespace_ = getDefaultInstance().getNamespace();
        onChanged();
        return this;
      }
      /**
       * <code>string namespace = 1;</code>
       * @param value The bytes for namespace to set.
       * @return This builder for chaining.
       */
      public Builder setNamespaceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        namespace_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <code>string name = 2;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string name = 2;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 2;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>string name = 2;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:github.com.metaprov.modeldapi.services.license.v1.GetLicenseRequest)
    }

    // @@protoc_insertion_point(class_scope:github.com.metaprov.modeldapi.services.license.v1.GetLicenseRequest)
    private static final github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseRequest();
    }

    public static github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GetLicenseRequest>
        PARSER = new com.google.protobuf.AbstractParser<GetLicenseRequest>() {
      @java.lang.Override
      public GetLicenseRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetLicenseRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GetLicenseRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GetLicenseRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GetLicenseResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:github.com.metaprov.modeldapi.services.license.v1.GetLicenseResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.License license = 1;</code>
     * @return Whether the license field is set.
     */
    boolean hasLicense();
    /**
     * <code>.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.License license = 1;</code>
     * @return The license.
     */
    github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License getLicense();
    /**
     * <code>.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.License license = 1;</code>
     */
    github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.LicenseOrBuilder getLicenseOrBuilder();

    /**
     * <code>string yaml = 2;</code>
     * @return The yaml.
     */
    java.lang.String getYaml();
    /**
     * <code>string yaml = 2;</code>
     * @return The bytes for yaml.
     */
    com.google.protobuf.ByteString
        getYamlBytes();
  }
  /**
   * Protobuf type {@code github.com.metaprov.modeldapi.services.license.v1.GetLicenseResponse}
   */
  public static final class GetLicenseResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:github.com.metaprov.modeldapi.services.license.v1.GetLicenseResponse)
      GetLicenseResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GetLicenseResponse.newBuilder() to construct.
    private GetLicenseResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GetLicenseResponse() {
      yaml_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new GetLicenseResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GetLicenseResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License.Builder subBuilder = null;
              if (license_ != null) {
                subBuilder = license_.toBuilder();
              }
              license_ = input.readMessage(github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(license_);
                license_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              yaml_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_GetLicenseResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_GetLicenseResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseResponse.class, github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseResponse.Builder.class);
    }

    public static final int LICENSE_FIELD_NUMBER = 1;
    private github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License license_;
    /**
     * <code>.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.License license = 1;</code>
     * @return Whether the license field is set.
     */
    @java.lang.Override
    public boolean hasLicense() {
      return license_ != null;
    }
    /**
     * <code>.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.License license = 1;</code>
     * @return The license.
     */
    @java.lang.Override
    public github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License getLicense() {
      return license_ == null ? github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License.getDefaultInstance() : license_;
    }
    /**
     * <code>.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.License license = 1;</code>
     */
    @java.lang.Override
    public github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.LicenseOrBuilder getLicenseOrBuilder() {
      return getLicense();
    }

    public static final int YAML_FIELD_NUMBER = 2;
    private volatile java.lang.Object yaml_;
    /**
     * <code>string yaml = 2;</code>
     * @return The yaml.
     */
    @java.lang.Override
    public java.lang.String getYaml() {
      java.lang.Object ref = yaml_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        yaml_ = s;
        return s;
      }
    }
    /**
     * <code>string yaml = 2;</code>
     * @return The bytes for yaml.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getYamlBytes() {
      java.lang.Object ref = yaml_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        yaml_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (license_ != null) {
        output.writeMessage(1, getLicense());
      }
      if (!getYamlBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, yaml_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (license_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getLicense());
      }
      if (!getYamlBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, yaml_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseResponse)) {
        return super.equals(obj);
      }
      github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseResponse other = (github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseResponse) obj;

      if (hasLicense() != other.hasLicense()) return false;
      if (hasLicense()) {
        if (!getLicense()
            .equals(other.getLicense())) return false;
      }
      if (!getYaml()
          .equals(other.getYaml())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasLicense()) {
        hash = (37 * hash) + LICENSE_FIELD_NUMBER;
        hash = (53 * hash) + getLicense().hashCode();
      }
      hash = (37 * hash) + YAML_FIELD_NUMBER;
      hash = (53 * hash) + getYaml().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code github.com.metaprov.modeldapi.services.license.v1.GetLicenseResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:github.com.metaprov.modeldapi.services.license.v1.GetLicenseResponse)
        github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_GetLicenseResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_GetLicenseResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseResponse.class, github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseResponse.Builder.class);
      }

      // Construct using github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (licenseBuilder_ == null) {
          license_ = null;
        } else {
          license_ = null;
          licenseBuilder_ = null;
        }
        yaml_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_GetLicenseResponse_descriptor;
      }

      @java.lang.Override
      public github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseResponse getDefaultInstanceForType() {
        return github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseResponse.getDefaultInstance();
      }

      @java.lang.Override
      public github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseResponse build() {
        github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseResponse buildPartial() {
        github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseResponse result = new github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseResponse(this);
        if (licenseBuilder_ == null) {
          result.license_ = license_;
        } else {
          result.license_ = licenseBuilder_.build();
        }
        result.yaml_ = yaml_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseResponse) {
          return mergeFrom((github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseResponse other) {
        if (other == github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseResponse.getDefaultInstance()) return this;
        if (other.hasLicense()) {
          mergeLicense(other.getLicense());
        }
        if (!other.getYaml().isEmpty()) {
          yaml_ = other.yaml_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License license_;
      private com.google.protobuf.SingleFieldBuilderV3<
          github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License, github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License.Builder, github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.LicenseOrBuilder> licenseBuilder_;
      /**
       * <code>.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.License license = 1;</code>
       * @return Whether the license field is set.
       */
      public boolean hasLicense() {
        return licenseBuilder_ != null || license_ != null;
      }
      /**
       * <code>.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.License license = 1;</code>
       * @return The license.
       */
      public github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License getLicense() {
        if (licenseBuilder_ == null) {
          return license_ == null ? github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License.getDefaultInstance() : license_;
        } else {
          return licenseBuilder_.getMessage();
        }
      }
      /**
       * <code>.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.License license = 1;</code>
       */
      public Builder setLicense(github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License value) {
        if (licenseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          license_ = value;
          onChanged();
        } else {
          licenseBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.License license = 1;</code>
       */
      public Builder setLicense(
          github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License.Builder builderForValue) {
        if (licenseBuilder_ == null) {
          license_ = builderForValue.build();
          onChanged();
        } else {
          licenseBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.License license = 1;</code>
       */
      public Builder mergeLicense(github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License value) {
        if (licenseBuilder_ == null) {
          if (license_ != null) {
            license_ =
              github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License.newBuilder(license_).mergeFrom(value).buildPartial();
          } else {
            license_ = value;
          }
          onChanged();
        } else {
          licenseBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.License license = 1;</code>
       */
      public Builder clearLicense() {
        if (licenseBuilder_ == null) {
          license_ = null;
          onChanged();
        } else {
          license_ = null;
          licenseBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.License license = 1;</code>
       */
      public github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License.Builder getLicenseBuilder() {
        
        onChanged();
        return getLicenseFieldBuilder().getBuilder();
      }
      /**
       * <code>.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.License license = 1;</code>
       */
      public github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.LicenseOrBuilder getLicenseOrBuilder() {
        if (licenseBuilder_ != null) {
          return licenseBuilder_.getMessageOrBuilder();
        } else {
          return license_ == null ?
              github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License.getDefaultInstance() : license_;
        }
      }
      /**
       * <code>.github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.License license = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License, github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License.Builder, github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.LicenseOrBuilder> 
          getLicenseFieldBuilder() {
        if (licenseBuilder_ == null) {
          licenseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License, github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.License.Builder, github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.LicenseOrBuilder>(
                  getLicense(),
                  getParentForChildren(),
                  isClean());
          license_ = null;
        }
        return licenseBuilder_;
      }

      private java.lang.Object yaml_ = "";
      /**
       * <code>string yaml = 2;</code>
       * @return The yaml.
       */
      public java.lang.String getYaml() {
        java.lang.Object ref = yaml_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          yaml_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string yaml = 2;</code>
       * @return The bytes for yaml.
       */
      public com.google.protobuf.ByteString
          getYamlBytes() {
        java.lang.Object ref = yaml_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          yaml_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string yaml = 2;</code>
       * @param value The yaml to set.
       * @return This builder for chaining.
       */
      public Builder setYaml(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        yaml_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string yaml = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearYaml() {
        
        yaml_ = getDefaultInstance().getYaml();
        onChanged();
        return this;
      }
      /**
       * <code>string yaml = 2;</code>
       * @param value The bytes for yaml to set.
       * @return This builder for chaining.
       */
      public Builder setYamlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        yaml_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:github.com.metaprov.modeldapi.services.license.v1.GetLicenseResponse)
    }

    // @@protoc_insertion_point(class_scope:github.com.metaprov.modeldapi.services.license.v1.GetLicenseResponse)
    private static final github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseResponse();
    }

    public static github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GetLicenseResponse>
        PARSER = new com.google.protobuf.AbstractParser<GetLicenseResponse>() {
      @java.lang.Override
      public GetLicenseResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetLicenseResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GetLicenseResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GetLicenseResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GetLicenseNamespacesRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:github.com.metaprov.modeldapi.services.license.v1.GetLicenseNamespacesRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string namespace = 1;</code>
     * @return The namespace.
     */
    java.lang.String getNamespace();
    /**
     * <code>string namespace = 1;</code>
     * @return The bytes for namespace.
     */
    com.google.protobuf.ByteString
        getNamespaceBytes();

    /**
     * <code>string name = 2;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <code>string name = 2;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();
  }
  /**
   * Protobuf type {@code github.com.metaprov.modeldapi.services.license.v1.GetLicenseNamespacesRequest}
   */
  public static final class GetLicenseNamespacesRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:github.com.metaprov.modeldapi.services.license.v1.GetLicenseNamespacesRequest)
      GetLicenseNamespacesRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GetLicenseNamespacesRequest.newBuilder() to construct.
    private GetLicenseNamespacesRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GetLicenseNamespacesRequest() {
      namespace_ = "";
      name_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new GetLicenseNamespacesRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GetLicenseNamespacesRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              namespace_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_GetLicenseNamespacesRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_GetLicenseNamespacesRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesRequest.class, github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesRequest.Builder.class);
    }

    public static final int NAMESPACE_FIELD_NUMBER = 1;
    private volatile java.lang.Object namespace_;
    /**
     * <code>string namespace = 1;</code>
     * @return The namespace.
     */
    @java.lang.Override
    public java.lang.String getNamespace() {
      java.lang.Object ref = namespace_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        namespace_ = s;
        return s;
      }
    }
    /**
     * <code>string namespace = 1;</code>
     * @return The bytes for namespace.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNamespaceBytes() {
      java.lang.Object ref = namespace_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        namespace_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object name_;
    /**
     * <code>string name = 2;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 2;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNamespaceBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, namespace_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNamespaceBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, namespace_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesRequest)) {
        return super.equals(obj);
      }
      github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesRequest other = (github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesRequest) obj;

      if (!getNamespace()
          .equals(other.getNamespace())) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAMESPACE_FIELD_NUMBER;
      hash = (53 * hash) + getNamespace().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code github.com.metaprov.modeldapi.services.license.v1.GetLicenseNamespacesRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:github.com.metaprov.modeldapi.services.license.v1.GetLicenseNamespacesRequest)
        github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_GetLicenseNamespacesRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_GetLicenseNamespacesRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesRequest.class, github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesRequest.Builder.class);
      }

      // Construct using github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        namespace_ = "";

        name_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_GetLicenseNamespacesRequest_descriptor;
      }

      @java.lang.Override
      public github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesRequest getDefaultInstanceForType() {
        return github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesRequest.getDefaultInstance();
      }

      @java.lang.Override
      public github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesRequest build() {
        github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesRequest buildPartial() {
        github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesRequest result = new github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesRequest(this);
        result.namespace_ = namespace_;
        result.name_ = name_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesRequest) {
          return mergeFrom((github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesRequest other) {
        if (other == github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesRequest.getDefaultInstance()) return this;
        if (!other.getNamespace().isEmpty()) {
          namespace_ = other.namespace_;
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object namespace_ = "";
      /**
       * <code>string namespace = 1;</code>
       * @return The namespace.
       */
      public java.lang.String getNamespace() {
        java.lang.Object ref = namespace_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          namespace_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string namespace = 1;</code>
       * @return The bytes for namespace.
       */
      public com.google.protobuf.ByteString
          getNamespaceBytes() {
        java.lang.Object ref = namespace_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          namespace_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string namespace = 1;</code>
       * @param value The namespace to set.
       * @return This builder for chaining.
       */
      public Builder setNamespace(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        namespace_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string namespace = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearNamespace() {
        
        namespace_ = getDefaultInstance().getNamespace();
        onChanged();
        return this;
      }
      /**
       * <code>string namespace = 1;</code>
       * @param value The bytes for namespace to set.
       * @return This builder for chaining.
       */
      public Builder setNamespaceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        namespace_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <code>string name = 2;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string name = 2;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 2;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>string name = 2;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:github.com.metaprov.modeldapi.services.license.v1.GetLicenseNamespacesRequest)
    }

    // @@protoc_insertion_point(class_scope:github.com.metaprov.modeldapi.services.license.v1.GetLicenseNamespacesRequest)
    private static final github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesRequest();
    }

    public static github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GetLicenseNamespacesRequest>
        PARSER = new com.google.protobuf.AbstractParser<GetLicenseNamespacesRequest>() {
      @java.lang.Override
      public GetLicenseNamespacesRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetLicenseNamespacesRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GetLicenseNamespacesRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GetLicenseNamespacesRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GetLicenseNamespacesResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:github.com.metaprov.modeldapi.services.license.v1.GetLicenseNamespacesResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .github.com.metaprov.modeldapi.services.common.v1.NamespaceInfo namespaces = 1;</code>
     */
    java.util.List<github.com.metaprov.modeldapi.services.common.v1.Common.NamespaceInfo> 
        getNamespacesList();
    /**
     * <code>repeated .github.com.metaprov.modeldapi.services.common.v1.NamespaceInfo namespaces = 1;</code>
     */
    github.com.metaprov.modeldapi.services.common.v1.Common.NamespaceInfo getNamespaces(int index);
    /**
     * <code>repeated .github.com.metaprov.modeldapi.services.common.v1.NamespaceInfo namespaces = 1;</code>
     */
    int getNamespacesCount();
    /**
     * <code>repeated .github.com.metaprov.modeldapi.services.common.v1.NamespaceInfo namespaces = 1;</code>
     */
    java.util.List<? extends github.com.metaprov.modeldapi.services.common.v1.Common.NamespaceInfoOrBuilder> 
        getNamespacesOrBuilderList();
    /**
     * <code>repeated .github.com.metaprov.modeldapi.services.common.v1.NamespaceInfo namespaces = 1;</code>
     */
    github.com.metaprov.modeldapi.services.common.v1.Common.NamespaceInfoOrBuilder getNamespacesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code github.com.metaprov.modeldapi.services.license.v1.GetLicenseNamespacesResponse}
   */
  public static final class GetLicenseNamespacesResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:github.com.metaprov.modeldapi.services.license.v1.GetLicenseNamespacesResponse)
      GetLicenseNamespacesResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GetLicenseNamespacesResponse.newBuilder() to construct.
    private GetLicenseNamespacesResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GetLicenseNamespacesResponse() {
      namespaces_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new GetLicenseNamespacesResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GetLicenseNamespacesResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                namespaces_ = new java.util.ArrayList<github.com.metaprov.modeldapi.services.common.v1.Common.NamespaceInfo>();
                mutable_bitField0_ |= 0x00000001;
              }
              namespaces_.add(
                  input.readMessage(github.com.metaprov.modeldapi.services.common.v1.Common.NamespaceInfo.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          namespaces_ = java.util.Collections.unmodifiableList(namespaces_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_GetLicenseNamespacesResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_GetLicenseNamespacesResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesResponse.class, github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesResponse.Builder.class);
    }

    public static final int NAMESPACES_FIELD_NUMBER = 1;
    private java.util.List<github.com.metaprov.modeldapi.services.common.v1.Common.NamespaceInfo> namespaces_;
    /**
     * <code>repeated .github.com.metaprov.modeldapi.services.common.v1.NamespaceInfo namespaces = 1;</code>
     */
    @java.lang.Override
    public java.util.List<github.com.metaprov.modeldapi.services.common.v1.Common.NamespaceInfo> getNamespacesList() {
      return namespaces_;
    }
    /**
     * <code>repeated .github.com.metaprov.modeldapi.services.common.v1.NamespaceInfo namespaces = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends github.com.metaprov.modeldapi.services.common.v1.Common.NamespaceInfoOrBuilder> 
        getNamespacesOrBuilderList() {
      return namespaces_;
    }
    /**
     * <code>repeated .github.com.metaprov.modeldapi.services.common.v1.NamespaceInfo namespaces = 1;</code>
     */
    @java.lang.Override
    public int getNamespacesCount() {
      return namespaces_.size();
    }
    /**
     * <code>repeated .github.com.metaprov.modeldapi.services.common.v1.NamespaceInfo namespaces = 1;</code>
     */
    @java.lang.Override
    public github.com.metaprov.modeldapi.services.common.v1.Common.NamespaceInfo getNamespaces(int index) {
      return namespaces_.get(index);
    }
    /**
     * <code>repeated .github.com.metaprov.modeldapi.services.common.v1.NamespaceInfo namespaces = 1;</code>
     */
    @java.lang.Override
    public github.com.metaprov.modeldapi.services.common.v1.Common.NamespaceInfoOrBuilder getNamespacesOrBuilder(
        int index) {
      return namespaces_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < namespaces_.size(); i++) {
        output.writeMessage(1, namespaces_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < namespaces_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, namespaces_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesResponse)) {
        return super.equals(obj);
      }
      github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesResponse other = (github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesResponse) obj;

      if (!getNamespacesList()
          .equals(other.getNamespacesList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getNamespacesCount() > 0) {
        hash = (37 * hash) + NAMESPACES_FIELD_NUMBER;
        hash = (53 * hash) + getNamespacesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code github.com.metaprov.modeldapi.services.license.v1.GetLicenseNamespacesResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:github.com.metaprov.modeldapi.services.license.v1.GetLicenseNamespacesResponse)
        github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_GetLicenseNamespacesResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_GetLicenseNamespacesResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesResponse.class, github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesResponse.Builder.class);
      }

      // Construct using github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getNamespacesFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (namespacesBuilder_ == null) {
          namespaces_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          namespacesBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_GetLicenseNamespacesResponse_descriptor;
      }

      @java.lang.Override
      public github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesResponse getDefaultInstanceForType() {
        return github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesResponse.getDefaultInstance();
      }

      @java.lang.Override
      public github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesResponse build() {
        github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesResponse buildPartial() {
        github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesResponse result = new github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesResponse(this);
        int from_bitField0_ = bitField0_;
        if (namespacesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            namespaces_ = java.util.Collections.unmodifiableList(namespaces_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.namespaces_ = namespaces_;
        } else {
          result.namespaces_ = namespacesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesResponse) {
          return mergeFrom((github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesResponse other) {
        if (other == github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesResponse.getDefaultInstance()) return this;
        if (namespacesBuilder_ == null) {
          if (!other.namespaces_.isEmpty()) {
            if (namespaces_.isEmpty()) {
              namespaces_ = other.namespaces_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureNamespacesIsMutable();
              namespaces_.addAll(other.namespaces_);
            }
            onChanged();
          }
        } else {
          if (!other.namespaces_.isEmpty()) {
            if (namespacesBuilder_.isEmpty()) {
              namespacesBuilder_.dispose();
              namespacesBuilder_ = null;
              namespaces_ = other.namespaces_;
              bitField0_ = (bitField0_ & ~0x00000001);
              namespacesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getNamespacesFieldBuilder() : null;
            } else {
              namespacesBuilder_.addAllMessages(other.namespaces_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<github.com.metaprov.modeldapi.services.common.v1.Common.NamespaceInfo> namespaces_ =
        java.util.Collections.emptyList();
      private void ensureNamespacesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          namespaces_ = new java.util.ArrayList<github.com.metaprov.modeldapi.services.common.v1.Common.NamespaceInfo>(namespaces_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          github.com.metaprov.modeldapi.services.common.v1.Common.NamespaceInfo, github.com.metaprov.modeldapi.services.common.v1.Common.NamespaceInfo.Builder, github.com.metaprov.modeldapi.services.common.v1.Common.NamespaceInfoOrBuilder> namespacesBuilder_;

      /**
       * <code>repeated .github.com.metaprov.modeldapi.services.common.v1.NamespaceInfo namespaces = 1;</code>
       */
      public java.util.List<github.com.metaprov.modeldapi.services.common.v1.Common.NamespaceInfo> getNamespacesList() {
        if (namespacesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(namespaces_);
        } else {
          return namespacesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .github.com.metaprov.modeldapi.services.common.v1.NamespaceInfo namespaces = 1;</code>
       */
      public int getNamespacesCount() {
        if (namespacesBuilder_ == null) {
          return namespaces_.size();
        } else {
          return namespacesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .github.com.metaprov.modeldapi.services.common.v1.NamespaceInfo namespaces = 1;</code>
       */
      public github.com.metaprov.modeldapi.services.common.v1.Common.NamespaceInfo getNamespaces(int index) {
        if (namespacesBuilder_ == null) {
          return namespaces_.get(index);
        } else {
          return namespacesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .github.com.metaprov.modeldapi.services.common.v1.NamespaceInfo namespaces = 1;</code>
       */
      public Builder setNamespaces(
          int index, github.com.metaprov.modeldapi.services.common.v1.Common.NamespaceInfo value) {
        if (namespacesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNamespacesIsMutable();
          namespaces_.set(index, value);
          onChanged();
        } else {
          namespacesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .github.com.metaprov.modeldapi.services.common.v1.NamespaceInfo namespaces = 1;</code>
       */
      public Builder setNamespaces(
          int index, github.com.metaprov.modeldapi.services.common.v1.Common.NamespaceInfo.Builder builderForValue) {
        if (namespacesBuilder_ == null) {
          ensureNamespacesIsMutable();
          namespaces_.set(index, builderForValue.build());
          onChanged();
        } else {
          namespacesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .github.com.metaprov.modeldapi.services.common.v1.NamespaceInfo namespaces = 1;</code>
       */
      public Builder addNamespaces(github.com.metaprov.modeldapi.services.common.v1.Common.NamespaceInfo value) {
        if (namespacesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNamespacesIsMutable();
          namespaces_.add(value);
          onChanged();
        } else {
          namespacesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .github.com.metaprov.modeldapi.services.common.v1.NamespaceInfo namespaces = 1;</code>
       */
      public Builder addNamespaces(
          int index, github.com.metaprov.modeldapi.services.common.v1.Common.NamespaceInfo value) {
        if (namespacesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNamespacesIsMutable();
          namespaces_.add(index, value);
          onChanged();
        } else {
          namespacesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .github.com.metaprov.modeldapi.services.common.v1.NamespaceInfo namespaces = 1;</code>
       */
      public Builder addNamespaces(
          github.com.metaprov.modeldapi.services.common.v1.Common.NamespaceInfo.Builder builderForValue) {
        if (namespacesBuilder_ == null) {
          ensureNamespacesIsMutable();
          namespaces_.add(builderForValue.build());
          onChanged();
        } else {
          namespacesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .github.com.metaprov.modeldapi.services.common.v1.NamespaceInfo namespaces = 1;</code>
       */
      public Builder addNamespaces(
          int index, github.com.metaprov.modeldapi.services.common.v1.Common.NamespaceInfo.Builder builderForValue) {
        if (namespacesBuilder_ == null) {
          ensureNamespacesIsMutable();
          namespaces_.add(index, builderForValue.build());
          onChanged();
        } else {
          namespacesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .github.com.metaprov.modeldapi.services.common.v1.NamespaceInfo namespaces = 1;</code>
       */
      public Builder addAllNamespaces(
          java.lang.Iterable<? extends github.com.metaprov.modeldapi.services.common.v1.Common.NamespaceInfo> values) {
        if (namespacesBuilder_ == null) {
          ensureNamespacesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, namespaces_);
          onChanged();
        } else {
          namespacesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .github.com.metaprov.modeldapi.services.common.v1.NamespaceInfo namespaces = 1;</code>
       */
      public Builder clearNamespaces() {
        if (namespacesBuilder_ == null) {
          namespaces_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          namespacesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .github.com.metaprov.modeldapi.services.common.v1.NamespaceInfo namespaces = 1;</code>
       */
      public Builder removeNamespaces(int index) {
        if (namespacesBuilder_ == null) {
          ensureNamespacesIsMutable();
          namespaces_.remove(index);
          onChanged();
        } else {
          namespacesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .github.com.metaprov.modeldapi.services.common.v1.NamespaceInfo namespaces = 1;</code>
       */
      public github.com.metaprov.modeldapi.services.common.v1.Common.NamespaceInfo.Builder getNamespacesBuilder(
          int index) {
        return getNamespacesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .github.com.metaprov.modeldapi.services.common.v1.NamespaceInfo namespaces = 1;</code>
       */
      public github.com.metaprov.modeldapi.services.common.v1.Common.NamespaceInfoOrBuilder getNamespacesOrBuilder(
          int index) {
        if (namespacesBuilder_ == null) {
          return namespaces_.get(index);  } else {
          return namespacesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .github.com.metaprov.modeldapi.services.common.v1.NamespaceInfo namespaces = 1;</code>
       */
      public java.util.List<? extends github.com.metaprov.modeldapi.services.common.v1.Common.NamespaceInfoOrBuilder> 
           getNamespacesOrBuilderList() {
        if (namespacesBuilder_ != null) {
          return namespacesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(namespaces_);
        }
      }
      /**
       * <code>repeated .github.com.metaprov.modeldapi.services.common.v1.NamespaceInfo namespaces = 1;</code>
       */
      public github.com.metaprov.modeldapi.services.common.v1.Common.NamespaceInfo.Builder addNamespacesBuilder() {
        return getNamespacesFieldBuilder().addBuilder(
            github.com.metaprov.modeldapi.services.common.v1.Common.NamespaceInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .github.com.metaprov.modeldapi.services.common.v1.NamespaceInfo namespaces = 1;</code>
       */
      public github.com.metaprov.modeldapi.services.common.v1.Common.NamespaceInfo.Builder addNamespacesBuilder(
          int index) {
        return getNamespacesFieldBuilder().addBuilder(
            index, github.com.metaprov.modeldapi.services.common.v1.Common.NamespaceInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .github.com.metaprov.modeldapi.services.common.v1.NamespaceInfo namespaces = 1;</code>
       */
      public java.util.List<github.com.metaprov.modeldapi.services.common.v1.Common.NamespaceInfo.Builder> 
           getNamespacesBuilderList() {
        return getNamespacesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          github.com.metaprov.modeldapi.services.common.v1.Common.NamespaceInfo, github.com.metaprov.modeldapi.services.common.v1.Common.NamespaceInfo.Builder, github.com.metaprov.modeldapi.services.common.v1.Common.NamespaceInfoOrBuilder> 
          getNamespacesFieldBuilder() {
        if (namespacesBuilder_ == null) {
          namespacesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              github.com.metaprov.modeldapi.services.common.v1.Common.NamespaceInfo, github.com.metaprov.modeldapi.services.common.v1.Common.NamespaceInfo.Builder, github.com.metaprov.modeldapi.services.common.v1.Common.NamespaceInfoOrBuilder>(
                  namespaces_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          namespaces_ = null;
        }
        return namespacesBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:github.com.metaprov.modeldapi.services.license.v1.GetLicenseNamespacesResponse)
    }

    // @@protoc_insertion_point(class_scope:github.com.metaprov.modeldapi.services.license.v1.GetLicenseNamespacesResponse)
    private static final github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesResponse();
    }

    public static github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GetLicenseNamespacesResponse>
        PARSER = new com.google.protobuf.AbstractParser<GetLicenseNamespacesResponse>() {
      @java.lang.Override
      public GetLicenseNamespacesResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetLicenseNamespacesResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GetLicenseNamespacesResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GetLicenseNamespacesResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public github.com.metaprov.modeldapi.services.license.v1.License.GetLicenseNamespacesResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DeleteLicenseRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:github.com.metaprov.modeldapi.services.license.v1.DeleteLicenseRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string namespace = 1;</code>
     * @return The namespace.
     */
    java.lang.String getNamespace();
    /**
     * <code>string namespace = 1;</code>
     * @return The bytes for namespace.
     */
    com.google.protobuf.ByteString
        getNamespaceBytes();

    /**
     * <code>string name = 2;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <code>string name = 2;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();
  }
  /**
   * Protobuf type {@code github.com.metaprov.modeldapi.services.license.v1.DeleteLicenseRequest}
   */
  public static final class DeleteLicenseRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:github.com.metaprov.modeldapi.services.license.v1.DeleteLicenseRequest)
      DeleteLicenseRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DeleteLicenseRequest.newBuilder() to construct.
    private DeleteLicenseRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DeleteLicenseRequest() {
      namespace_ = "";
      name_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DeleteLicenseRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DeleteLicenseRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              namespace_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_DeleteLicenseRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_DeleteLicenseRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseRequest.class, github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseRequest.Builder.class);
    }

    public static final int NAMESPACE_FIELD_NUMBER = 1;
    private volatile java.lang.Object namespace_;
    /**
     * <code>string namespace = 1;</code>
     * @return The namespace.
     */
    @java.lang.Override
    public java.lang.String getNamespace() {
      java.lang.Object ref = namespace_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        namespace_ = s;
        return s;
      }
    }
    /**
     * <code>string namespace = 1;</code>
     * @return The bytes for namespace.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNamespaceBytes() {
      java.lang.Object ref = namespace_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        namespace_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object name_;
    /**
     * <code>string name = 2;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 2;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNamespaceBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, namespace_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNamespaceBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, namespace_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseRequest)) {
        return super.equals(obj);
      }
      github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseRequest other = (github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseRequest) obj;

      if (!getNamespace()
          .equals(other.getNamespace())) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAMESPACE_FIELD_NUMBER;
      hash = (53 * hash) + getNamespace().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code github.com.metaprov.modeldapi.services.license.v1.DeleteLicenseRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:github.com.metaprov.modeldapi.services.license.v1.DeleteLicenseRequest)
        github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_DeleteLicenseRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_DeleteLicenseRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseRequest.class, github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseRequest.Builder.class);
      }

      // Construct using github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        namespace_ = "";

        name_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_DeleteLicenseRequest_descriptor;
      }

      @java.lang.Override
      public github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseRequest getDefaultInstanceForType() {
        return github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseRequest.getDefaultInstance();
      }

      @java.lang.Override
      public github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseRequest build() {
        github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseRequest buildPartial() {
        github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseRequest result = new github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseRequest(this);
        result.namespace_ = namespace_;
        result.name_ = name_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseRequest) {
          return mergeFrom((github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseRequest other) {
        if (other == github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseRequest.getDefaultInstance()) return this;
        if (!other.getNamespace().isEmpty()) {
          namespace_ = other.namespace_;
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object namespace_ = "";
      /**
       * <code>string namespace = 1;</code>
       * @return The namespace.
       */
      public java.lang.String getNamespace() {
        java.lang.Object ref = namespace_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          namespace_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string namespace = 1;</code>
       * @return The bytes for namespace.
       */
      public com.google.protobuf.ByteString
          getNamespaceBytes() {
        java.lang.Object ref = namespace_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          namespace_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string namespace = 1;</code>
       * @param value The namespace to set.
       * @return This builder for chaining.
       */
      public Builder setNamespace(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        namespace_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string namespace = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearNamespace() {
        
        namespace_ = getDefaultInstance().getNamespace();
        onChanged();
        return this;
      }
      /**
       * <code>string namespace = 1;</code>
       * @param value The bytes for namespace to set.
       * @return This builder for chaining.
       */
      public Builder setNamespaceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        namespace_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <code>string name = 2;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string name = 2;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 2;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>string name = 2;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:github.com.metaprov.modeldapi.services.license.v1.DeleteLicenseRequest)
    }

    // @@protoc_insertion_point(class_scope:github.com.metaprov.modeldapi.services.license.v1.DeleteLicenseRequest)
    private static final github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseRequest();
    }

    public static github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DeleteLicenseRequest>
        PARSER = new com.google.protobuf.AbstractParser<DeleteLicenseRequest>() {
      @java.lang.Override
      public DeleteLicenseRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DeleteLicenseRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DeleteLicenseRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DeleteLicenseRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DeleteLicenseResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:github.com.metaprov.modeldapi.services.license.v1.DeleteLicenseResponse)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code github.com.metaprov.modeldapi.services.license.v1.DeleteLicenseResponse}
   */
  public static final class DeleteLicenseResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:github.com.metaprov.modeldapi.services.license.v1.DeleteLicenseResponse)
      DeleteLicenseResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DeleteLicenseResponse.newBuilder() to construct.
    private DeleteLicenseResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DeleteLicenseResponse() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DeleteLicenseResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DeleteLicenseResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_DeleteLicenseResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_DeleteLicenseResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseResponse.class, github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseResponse.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseResponse)) {
        return super.equals(obj);
      }
      github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseResponse other = (github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseResponse) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code github.com.metaprov.modeldapi.services.license.v1.DeleteLicenseResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:github.com.metaprov.modeldapi.services.license.v1.DeleteLicenseResponse)
        github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_DeleteLicenseResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_DeleteLicenseResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseResponse.class, github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseResponse.Builder.class);
      }

      // Construct using github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return github.com.metaprov.modeldapi.services.license.v1.License.internal_static_github_com_metaprov_modeldapi_services_license_v1_DeleteLicenseResponse_descriptor;
      }

      @java.lang.Override
      public github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseResponse getDefaultInstanceForType() {
        return github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseResponse.getDefaultInstance();
      }

      @java.lang.Override
      public github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseResponse build() {
        github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseResponse buildPartial() {
        github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseResponse result = new github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseResponse(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseResponse) {
          return mergeFrom((github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseResponse other) {
        if (other == github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseResponse.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:github.com.metaprov.modeldapi.services.license.v1.DeleteLicenseResponse)
    }

    // @@protoc_insertion_point(class_scope:github.com.metaprov.modeldapi.services.license.v1.DeleteLicenseResponse)
    private static final github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseResponse();
    }

    public static github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DeleteLicenseResponse>
        PARSER = new com.google.protobuf.AbstractParser<DeleteLicenseResponse>() {
      @java.lang.Override
      public DeleteLicenseResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DeleteLicenseResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DeleteLicenseResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DeleteLicenseResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public github.com.metaprov.modeldapi.services.license.v1.License.DeleteLicenseResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_github_com_metaprov_modeldapi_services_license_v1_ListLicensesRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_github_com_metaprov_modeldapi_services_license_v1_ListLicensesRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_github_com_metaprov_modeldapi_services_license_v1_ListLicensesRequest_LabelsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_github_com_metaprov_modeldapi_services_license_v1_ListLicensesRequest_LabelsEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_github_com_metaprov_modeldapi_services_license_v1_ListLicensesResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_github_com_metaprov_modeldapi_services_license_v1_ListLicensesResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_github_com_metaprov_modeldapi_services_license_v1_LicenseResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_github_com_metaprov_modeldapi_services_license_v1_LicenseResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_github_com_metaprov_modeldapi_services_license_v1_CreateLicenseRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_github_com_metaprov_modeldapi_services_license_v1_CreateLicenseRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_github_com_metaprov_modeldapi_services_license_v1_CreateLicenseFromKeyRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_github_com_metaprov_modeldapi_services_license_v1_CreateLicenseFromKeyRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_github_com_metaprov_modeldapi_services_license_v1_CreateLicenseResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_github_com_metaprov_modeldapi_services_license_v1_CreateLicenseResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_github_com_metaprov_modeldapi_services_license_v1_UpdateLicenseRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_github_com_metaprov_modeldapi_services_license_v1_UpdateLicenseRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_github_com_metaprov_modeldapi_services_license_v1_UpdateLicenseResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_github_com_metaprov_modeldapi_services_license_v1_UpdateLicenseResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_github_com_metaprov_modeldapi_services_license_v1_GetLicenseRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_github_com_metaprov_modeldapi_services_license_v1_GetLicenseRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_github_com_metaprov_modeldapi_services_license_v1_GetLicenseResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_github_com_metaprov_modeldapi_services_license_v1_GetLicenseResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_github_com_metaprov_modeldapi_services_license_v1_GetLicenseNamespacesRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_github_com_metaprov_modeldapi_services_license_v1_GetLicenseNamespacesRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_github_com_metaprov_modeldapi_services_license_v1_GetLicenseNamespacesResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_github_com_metaprov_modeldapi_services_license_v1_GetLicenseNamespacesResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_github_com_metaprov_modeldapi_services_license_v1_DeleteLicenseRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_github_com_metaprov_modeldapi_services_license_v1_DeleteLicenseRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_github_com_metaprov_modeldapi_services_license_v1_DeleteLicenseResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_github_com_metaprov_modeldapi_services_license_v1_DeleteLicenseResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n?github.com/metaprov/modeldapi/services" +
      "/license/v1/license.proto\0221github.com.me" +
      "taprov.modeldapi.services.license.v1\032\034go" +
      "ogle/api/annotations.proto\032Egithub.com/m" +
      "etaprov/modeldapi/pkg/apis/infra/v1alpha" +
      "1/generated.proto\032=github.com/metaprov/m" +
      "odeldapi/services/common/v1/common.proto" +
      "\"\273\001\n\023ListLicensesRequest\022\021\n\tnamespace\030\001 " +
      "\001(\t\022b\n\006labels\030\003 \003(\0132R.github.com.metapro" +
      "v.modeldapi.services.license.v1.ListLice" +
      "nsesRequest.LabelsEntry\032-\n\013LabelsEntry\022\013" +
      "\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"i\n\024ListLi" +
      "censesResponse\022Q\n\005items\030\001 \001(\0132B.github.c" +
      "om.metaprov.modeldapi.pkg.apis.infra.v1a" +
      "lpha1.LicenseList\"\021\n\017LicenseResponse\"d\n\024" +
      "CreateLicenseRequest\022L\n\004item\030\001 \001(\0132>.git" +
      "hub.com.metaprov.modeldapi.pkg.apis.infr" +
      "a.v1alpha1.License\"*\n\033CreateLicenseFromK" +
      "eyRequest\022\013\n\003key\030\001 \001(\t\"\027\n\025CreateLicenseR" +
      "esponse\"d\n\024UpdateLicenseRequest\022L\n\004item\030" +
      "\005 \001(\0132>.github.com.metaprov.modeldapi.pk" +
      "g.apis.infra.v1alpha1.License\"\027\n\025UpdateL" +
      "icenseResponse\"4\n\021GetLicenseRequest\022\021\n\tn" +
      "amespace\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\"s\n\022GetLicen" +
      "seResponse\022O\n\007license\030\001 \001(\0132>.github.com" +
      ".metaprov.modeldapi.pkg.apis.infra.v1alp" +
      "ha1.License\022\014\n\004yaml\030\002 \001(\t\">\n\033GetLicenseN" +
      "amespacesRequest\022\021\n\tnamespace\030\001 \001(\t\022\014\n\004n" +
      "ame\030\002 \001(\t\"s\n\034GetLicenseNamespacesRespons" +
      "e\022S\n\nnamespaces\030\001 \003(\0132?.github.com.metap" +
      "rov.modeldapi.services.common.v1.Namespa" +
      "ceInfo\"7\n\024DeleteLicenseRequest\022\021\n\tnamesp" +
      "ace\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\"\027\n\025DeleteLicense" +
      "Response2\261\t\n\016LicenseService\022\264\001\n\014ListLice" +
      "nses\022F.github.com.metaprov.modeldapi.ser" +
      "vices.license.v1.ListLicensesRequest\032G.g" +
      "ithub.com.metaprov.modeldapi.services.li" +
      "cense.v1.ListLicensesResponse\"\023\202\323\344\223\002\r\022\013v" +
      "1/licenses\022\273\001\n\rCreateLicense\022G.github.co" +
      "m.metaprov.modeldapi.services.license.v1" +
      ".CreateLicenseRequest\032H.github.com.metap" +
      "rov.modeldapi.services.license.v1.Create" +
      "LicenseResponse\"\027\202\323\344\223\002\021\"\014/v1/licenses:\001*" +
      "\022\311\001\n\024CreateLicenseFromKey\022N.github.com.m" +
      "etaprov.modeldapi.services.license.v1.Cr" +
      "eateLicenseFromKeyRequest\032H.github.com.m" +
      "etaprov.modeldapi.services.license.v1.Cr" +
      "eateLicenseResponse\"\027\202\323\344\223\002\021\"\014/v1/license" +
      "s:\001*\022\306\001\n\nGetLicense\022D.github.com.metapro" +
      "v.modeldapi.services.license.v1.GetLicen" +
      "seRequest\032E.github.com.metaprov.modeldap" +
      "i.services.license.v1.GetLicenseResponse" +
      "\"+\202\323\344\223\002%\022#v1/licenses/{license.metadata." +
      "name}\022\312\001\n\rUpdateLicense\022G.github.com.met" +
      "aprov.modeldapi.services.license.v1.Upda" +
      "teLicenseRequest\032H.github.com.metaprov.m" +
      "odeldapi.services.license.v1.UpdateLicen" +
      "seResponse\"&\202\323\344\223\002 \032\033/v1/licenses/{licens" +
      "e_name}:\001*\022\307\001\n\rDeleteLicense\022G.github.co" +
      "m.metaprov.modeldapi.services.license.v1" +
      ".DeleteLicenseRequest\032H.github.com.metap" +
      "rov.modeldapi.services.license.v1.Delete" +
      "LicenseResponse\"#\202\323\344\223\002\035*\033/v1/licenses/{l" +
      "icense_name}B3Z1github.com/metaprov/mode" +
      "ldapi/services/license/v1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.api.AnnotationsProto.getDescriptor(),
          github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.getDescriptor(),
          github.com.metaprov.modeldapi.services.common.v1.Common.getDescriptor(),
        });
    internal_static_github_com_metaprov_modeldapi_services_license_v1_ListLicensesRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_github_com_metaprov_modeldapi_services_license_v1_ListLicensesRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_github_com_metaprov_modeldapi_services_license_v1_ListLicensesRequest_descriptor,
        new java.lang.String[] { "Namespace", "Labels", });
    internal_static_github_com_metaprov_modeldapi_services_license_v1_ListLicensesRequest_LabelsEntry_descriptor =
      internal_static_github_com_metaprov_modeldapi_services_license_v1_ListLicensesRequest_descriptor.getNestedTypes().get(0);
    internal_static_github_com_metaprov_modeldapi_services_license_v1_ListLicensesRequest_LabelsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_github_com_metaprov_modeldapi_services_license_v1_ListLicensesRequest_LabelsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_github_com_metaprov_modeldapi_services_license_v1_ListLicensesResponse_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_github_com_metaprov_modeldapi_services_license_v1_ListLicensesResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_github_com_metaprov_modeldapi_services_license_v1_ListLicensesResponse_descriptor,
        new java.lang.String[] { "Items", });
    internal_static_github_com_metaprov_modeldapi_services_license_v1_LicenseResponse_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_github_com_metaprov_modeldapi_services_license_v1_LicenseResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_github_com_metaprov_modeldapi_services_license_v1_LicenseResponse_descriptor,
        new java.lang.String[] { });
    internal_static_github_com_metaprov_modeldapi_services_license_v1_CreateLicenseRequest_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_github_com_metaprov_modeldapi_services_license_v1_CreateLicenseRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_github_com_metaprov_modeldapi_services_license_v1_CreateLicenseRequest_descriptor,
        new java.lang.String[] { "Item", });
    internal_static_github_com_metaprov_modeldapi_services_license_v1_CreateLicenseFromKeyRequest_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_github_com_metaprov_modeldapi_services_license_v1_CreateLicenseFromKeyRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_github_com_metaprov_modeldapi_services_license_v1_CreateLicenseFromKeyRequest_descriptor,
        new java.lang.String[] { "Key", });
    internal_static_github_com_metaprov_modeldapi_services_license_v1_CreateLicenseResponse_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_github_com_metaprov_modeldapi_services_license_v1_CreateLicenseResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_github_com_metaprov_modeldapi_services_license_v1_CreateLicenseResponse_descriptor,
        new java.lang.String[] { });
    internal_static_github_com_metaprov_modeldapi_services_license_v1_UpdateLicenseRequest_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_github_com_metaprov_modeldapi_services_license_v1_UpdateLicenseRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_github_com_metaprov_modeldapi_services_license_v1_UpdateLicenseRequest_descriptor,
        new java.lang.String[] { "Item", });
    internal_static_github_com_metaprov_modeldapi_services_license_v1_UpdateLicenseResponse_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_github_com_metaprov_modeldapi_services_license_v1_UpdateLicenseResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_github_com_metaprov_modeldapi_services_license_v1_UpdateLicenseResponse_descriptor,
        new java.lang.String[] { });
    internal_static_github_com_metaprov_modeldapi_services_license_v1_GetLicenseRequest_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_github_com_metaprov_modeldapi_services_license_v1_GetLicenseRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_github_com_metaprov_modeldapi_services_license_v1_GetLicenseRequest_descriptor,
        new java.lang.String[] { "Namespace", "Name", });
    internal_static_github_com_metaprov_modeldapi_services_license_v1_GetLicenseResponse_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_github_com_metaprov_modeldapi_services_license_v1_GetLicenseResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_github_com_metaprov_modeldapi_services_license_v1_GetLicenseResponse_descriptor,
        new java.lang.String[] { "License", "Yaml", });
    internal_static_github_com_metaprov_modeldapi_services_license_v1_GetLicenseNamespacesRequest_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_github_com_metaprov_modeldapi_services_license_v1_GetLicenseNamespacesRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_github_com_metaprov_modeldapi_services_license_v1_GetLicenseNamespacesRequest_descriptor,
        new java.lang.String[] { "Namespace", "Name", });
    internal_static_github_com_metaprov_modeldapi_services_license_v1_GetLicenseNamespacesResponse_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_github_com_metaprov_modeldapi_services_license_v1_GetLicenseNamespacesResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_github_com_metaprov_modeldapi_services_license_v1_GetLicenseNamespacesResponse_descriptor,
        new java.lang.String[] { "Namespaces", });
    internal_static_github_com_metaprov_modeldapi_services_license_v1_DeleteLicenseRequest_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_github_com_metaprov_modeldapi_services_license_v1_DeleteLicenseRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_github_com_metaprov_modeldapi_services_license_v1_DeleteLicenseRequest_descriptor,
        new java.lang.String[] { "Namespace", "Name", });
    internal_static_github_com_metaprov_modeldapi_services_license_v1_DeleteLicenseResponse_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_github_com_metaprov_modeldapi_services_license_v1_DeleteLicenseResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_github_com_metaprov_modeldapi_services_license_v1_DeleteLicenseResponse_descriptor,
        new java.lang.String[] { });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.google.api.AnnotationsProto.http);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.google.api.AnnotationsProto.getDescriptor();
    github.com.metaprov.modeldapi.pkg.apis.infra.v1alpha1.Generated.getDescriptor();
    github.com.metaprov.modeldapi.services.common.v1.Common.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
