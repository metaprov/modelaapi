---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: predictions.inference.modela.ai
spec:
  group: inference.modela.ai
  names:
    categories:
    - inference
    - modela
    kind: Prediction
    listKind: PredictionList
    plural: predictions
    shortNames:
    - pred
    singular: prediction
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - jsonPath: .spec.owner
      name: Owner
      priority: 1
      type: string
    - jsonPath: .spec.predictorName
      name: Predictor
      type: string
    - jsonPath: .spec.datasetName
      name: Dataset
      type: string
    - jsonPath: .spec.labeled
      name: Labeled
      type: string
    - jsonPath: .spec.output.bucketName
      name: Bucket
      priority: 1
      type: string
    - jsonPath: .spec.output.path
      name: Key
      priority: 1
      type: string
    - jsonPath: .status.score
      name: Score
      type: string
    - jsonPath: .status.phase
      name: Status
      type: string
    - jsonPath: .status.rows
      name: Rows
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PredictionTemplate represents a prediction object
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PredictionSpec represent the desired state of Prediction
            properties:
              aborted:
                default: false
                description: Aborted is set when we want to abort the prediction
                type: boolean
              activeDeadlineSeconds:
                default: 600
                description: ActiveDeadlineSeconds is the deadline of a job for this
                  dataset.
                format: int64
                minimum: 0
                type: integer
              cronPredictorName:
                default: ""
                description: CronPredictionName refer to the cron prediction
                maxLength: 63
                type: string
              datasetName:
                default: ""
                type: string
              forecast:
                default: false
                description: If true, this prediction is a forecast
                type: boolean
              forecastInfo:
                description: If this is hierarchy forecast, holds the forecast details
                  for each columns
                properties:
                  hierarchyValues:
                    additionalProperties:
                      type: string
                    description: The Hierarchy spec, map from column to values
                    type: object
                  horizon:
                    description: Specify the interval for this forecast, we might
                      need to downsample or upsample
                    properties:
                      interval:
                        description: The period interval
                        enum:
                        - second
                        - minute
                        - hour
                        - day
                        - week
                        - month
                        - quarter
                        - year
                        type: string
                      length:
                        description: The windows end day
                        format: int32
                        type: integer
                      start:
                        default: 0
                        description: The number of intervals to start
                        format: int32
                        type: integer
                    type: object
                type: object
              input:
                description: Input is the location of the input file if not using
                  a dataset
                properties:
                  format:
                    default: csv
                    description: Format is the format of the input data
                    enum:
                    - csv
                    - json
                    - parquet
                    - tde
                    - sql
                    - table
                    - fwf
                    - excel
                    - sas
                    - spss
                    - auto
                    type: string
                  location:
                    description: Location of the generated data
                    properties:
                      bucketName:
                        default: ""
                        description: In the case of the location type being object
                          storage, BucketName is the name of the VirtualBucket resource
                          in the same tenant namespace as the resource. Modela will
                          access the object storage system and will pull from the
                          file path specified by the `Path` field
                        type: string
                      connectionName:
                        default: ""
                        description: In the case of the location type being a database,
                          ConnectionName is the name of the Connection resource in
                          the same tenant namespace as the resource which specifies
                          the DataLocation. Modela will connect to the database specified
                          by the Connection and execute the query specified by the
                          `SQL` field
                        type: string
                      database:
                        default: ""
                        description: The name of a database that exists inside a database
                          server that exists at the connection specified by the `ConnectionName`
                          field
                        type: string
                      path:
                        default: ""
                        description: "The path to a flat-file inside an object storage
                          system. When using the Modela API to upload files (through
                          the FileService API), Modela will upload the data to a predetermined
                          path with the following format: \n `\"modela/depot/tenants/{tenant}/dataproducts/{dataproduct}/dataproductversions/{version}/{resource_type}/{resource_name}/data/raw/{file_name}`
                          \n The path does not need to adhere to this format; you
                          can still pass the path of a file inside a bucket not managed
                          by Modela"
                        type: string
                      sql:
                        default: ""
                        description: The SQL statement to query data from a table
                        type: string
                      table:
                        default: ""
                        description: The name of a table inside a database, if applicable
                        type: string
                      topic:
                        default: ""
                        description: The name of the streaming topic (currently unsupported)
                        type: string
                      type:
                        default: object
                        description: The type of location where the data resides,
                          which can either be an object inside an object storage system
                          (i.e. Minio), a SQL location like a table or a view, a data
                          stream (i.e. Kafka, currently unsupported), or a web location
                          (currently unsupported)
                        type: string
                    type: object
                type: object
              labeled:
                default: false
                description: Labeled , true if this is labeled prediction request.
                  Used usually for unit testing
                type: boolean
              output:
                description: Output is the location of the output file.
                properties:
                  action:
                    default: upsert
                    description: Action define how the new data will be created
                    enum:
                    - upsert
                    - insert
                    - update
                    type: string
                  createTableIfNotExist:
                    description: Create the data source table on the target, if not
                      exist.
                    type: boolean
                  datasetName:
                    default: ""
                    description: DatasetName is the name of the dataset that will
                      be created. if nil, the system will not create the dataset.
                    type: string
                  detectOutliers:
                    default: false
                    description: Detect outlier in the prediction
                    type: boolean
                  format:
                    default: csv
                    description: Format is the format of the output data
                    enum:
                    - csv
                    - json
                    - parquet
                    - tde
                    - sql
                    - table
                    - fwf
                    - excel
                    - sas
                    - spss
                    - auto
                    type: string
                  includeFeatures:
                    default: false
                    description: Include the features in the results
                    type: boolean
                  location:
                    description: Location of the generated data
                    properties:
                      bucketName:
                        default: ""
                        description: In the case of the location type being object
                          storage, BucketName is the name of the VirtualBucket resource
                          in the same tenant namespace as the resource. Modela will
                          access the object storage system and will pull from the
                          file path specified by the `Path` field
                        type: string
                      connectionName:
                        default: ""
                        description: In the case of the location type being a database,
                          ConnectionName is the name of the Connection resource in
                          the same tenant namespace as the resource which specifies
                          the DataLocation. Modela will connect to the database specified
                          by the Connection and execute the query specified by the
                          `SQL` field
                        type: string
                      database:
                        default: ""
                        description: The name of a database that exists inside a database
                          server that exists at the connection specified by the `ConnectionName`
                          field
                        type: string
                      path:
                        default: ""
                        description: "The path to a flat-file inside an object storage
                          system. When using the Modela API to upload files (through
                          the FileService API), Modela will upload the data to a predetermined
                          path with the following format: \n `\"modela/depot/tenants/{tenant}/dataproducts/{dataproduct}/dataproductversions/{version}/{resource_type}/{resource_name}/data/raw/{file_name}`
                          \n The path does not need to adhere to this format; you
                          can still pass the path of a file inside a bucket not managed
                          by Modela"
                        type: string
                      sql:
                        default: ""
                        description: The SQL statement to query data from a table
                        type: string
                      table:
                        default: ""
                        description: The name of a table inside a database, if applicable
                        type: string
                      topic:
                        default: ""
                        description: The name of the streaming topic (currently unsupported)
                        type: string
                      type:
                        default: object
                        description: The type of location where the data resides,
                          which can either be an object inside an object storage system
                          (i.e. Minio), a SQL location like a table or a view, a data
                          stream (i.e. Kafka, currently unsupported), or a web location
                          (currently unsupported)
                        type: string
                    type: object
                  xai:
                    default: false
                    description: Generate XAI
                    type: boolean
                type: object
              owner:
                default: no-one
                description: The owner account name
                type: string
              predictorName:
                description: PredictorName refer to the predictor which would predict
                  the dataset of this prediction.
                maxLength: 63
                type: string
              priority:
                default: medium
                description: The priority of this prediction. The default is medium.
                enum:
                - low
                - medium
                - high
                - urgent
                type: string
              resources:
                description: Resources is the hardware resource req.
                properties:
                  cpuImage:
                    description: Reference to the managed CPU trainer image, used
                      internally
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                  gpuImage:
                    description: Reference to the managed GPU trainer image, used
                      internally
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                  requirements:
                    description: The custom resource requirements for the workload,
                      which are used if `WorkloadName` is not set
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  workloadName:
                    description: If this resource is based on the workload, this field
                      contain the name of the workload. The name of a WorkloadClass.
                      The system will use the resource requirements described by the
                      WorkloadClass
                    type: string
                type: object
              servingsiteRef:
                description: The serving site that hosts this predictor and the models
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
              tests:
                description: Tests is the list of metrics that we need to measure
                  if we are running a labeled prediction
                items:
                  enum:
                  - accuracy
                  - average-precision
                  - balanced-accuracy
                  - pr-auc
                  - pr-auc-micro
                  - pr-auc-macro
                  - pr-auc-weighted
                  - f1
                  - f1-micro
                  - f1-macro
                  - f1-weighted
                  - f1-samples
                  - precision
                  - precision-micro
                  - precision-macro
                  - precision-weighted
                  - precision-samples
                  - recall
                  - recall-macro
                  - recall-micro
                  - recall-weighted
                  - recall-samples
                  - log-loss
                  - auc
                  - auc-micro
                  - auc-macro
                  - auc-weighted
                  - zero-one
                  - hamming-loss
                  - hinge-loss
                  - jacquard-loss
                  - mcc
                  - fp
                  - fn
                  - tn
                  - tp
                  - tpr
                  - fpr
                  - tnr
                  - matthews-corr-coef
                  - explained-variance
                  - max-error
                  - mae
                  - mse
                  - msle
                  - rmse
                  - rmsle
                  - median-absolute-error
                  - r2
                  - adj-r2
                  - mean_poisson_deviance
                  - mean-gamma-deviance
                  - mean-tweedie-deviance
                  - mape
                  - maze
                  - mdape
                  - smape
                  - adjusted-mutual-info-score
                  - adjusted-rand-score
                  - completeness-score
                  - fowlkes-mallows-score
                  - homogeneity-score
                  - mutual-info-score
                  - normalized-mutual-info-score
                  - v-measure-score
                  - p50-latency
                  - p95-latency
                  - p99-latency
                  - cpu
                  - gpu
                  - mem
                  - gpu-mem
                  - req-per-sec
                  - uncertain-prediction-percent
                  - none
                  type: string
                type: array
              ttl:
                default: 0
                description: TTL.
                format: int32
                type: integer
              versionName:
                default: ""
                description: VersionName is the data product version of the data pipeline
                type: string
            type: object
          status:
            description: PredictionStatus is the observed state of a PredictionTemplate
            properties:
              conditions:
                items:
                  description: PredictionCondition describes the state of PredictionTemplate
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of  condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              endTime:
                description: EndTime is the end time of the prediction.
                format: date-time
                type: string
              failureMessage:
                description: Update in case of terminal failure message
                type: string
              failureReason:
                description: Update in case of terminal failure Borrowed from cluster
                  api controller
                type: string
              lastUpdated:
                description: Last time the object was updated
                format: date-time
                type: string
              logs:
                description: Holds the location of log paths
                properties:
                  bucketName:
                    description: The name of the VirtualBucket resource where the
                      logs are stored
                    type: string
                  containers:
                    description: The collection of ContainerLog objects that describe
                      the location of logs per container
                    items:
                      description: ContainerLog describes the location of logs for
                        a single Job
                      properties:
                        container:
                          description: The container name
                          type: string
                        job:
                          description: The name of the Job
                          type: string
                        key:
                          description: The path to the log in the bucket
                          type: string
                      type: object
                    type: array
                type: object
              observedGeneration:
                description: ObservedGeneration is the Last generation that was acted
                  on
                format: int64
                type: integer
              phase:
                default: Pending
                description: Phase is the current phase of the prediction
                type: string
              results:
                description: Results is the results of running the prediction with
                  a labeled dataset
                items:
                  description: Measurement is a value for a specific metric
                  properties:
                    metric:
                      description: The metric type name (e.g. F1 / Accuracy)
                      enum:
                      - accuracy
                      - average-precision
                      - balanced-accuracy
                      - pr-auc
                      - pr-auc-micro
                      - pr-auc-macro
                      - pr-auc-weighted
                      - f1
                      - f1-micro
                      - f1-macro
                      - f1-weighted
                      - f1-samples
                      - precision
                      - precision-micro
                      - precision-macro
                      - precision-weighted
                      - precision-samples
                      - recall
                      - recall-macro
                      - recall-micro
                      - recall-weighted
                      - recall-samples
                      - log-loss
                      - auc
                      - auc-micro
                      - auc-macro
                      - auc-weighted
                      - zero-one
                      - hamming-loss
                      - hinge-loss
                      - jacquard-loss
                      - mcc
                      - fp
                      - fn
                      - tn
                      - tp
                      - tpr
                      - fpr
                      - tnr
                      - matthews-corr-coef
                      - explained-variance
                      - max-error
                      - mae
                      - mse
                      - msle
                      - rmse
                      - rmsle
                      - median-absolute-error
                      - r2
                      - adj-r2
                      - mean_poisson_deviance
                      - mean-gamma-deviance
                      - mean-tweedie-deviance
                      - mape
                      - maze
                      - mdape
                      - smape
                      - adjusted-mutual-info-score
                      - adjusted-rand-score
                      - completeness-score
                      - fowlkes-mallows-score
                      - homogeneity-score
                      - mutual-info-score
                      - normalized-mutual-info-score
                      - v-measure-score
                      - p50-latency
                      - p95-latency
                      - p99-latency
                      - cpu
                      - gpu
                      - mem
                      - gpu-mem
                      - req-per-sec
                      - uncertain-prediction-percent
                      - none
                      type: string
                    value:
                      description: The value of the metric
                      type: number
                  required:
                  - metric
                  - value
                  type: object
                type: array
              rows:
                description: The number of rows in the predictions
                format: int32
                type: integer
              startTime:
                description: StartTime is the start time of the prediction.
                format: date-time
                type: string
              triggeredBy:
                description: What triggered the run
                enum:
                - on-demand
                - on-schedule
                - on-new-data
                - on-github-event
                - on-concept-drift
                - on-pref-degradation
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
