---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: predictions.inference.modela.ai
spec:
  group: inference.modela.ai
  names:
    categories:
    - inference
    - modela
    kind: Prediction
    listKind: PredictionList
    plural: predictions
    shortNames:
    - pred
    singular: prediction
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - jsonPath: .spec.owner
      name: Owner
      priority: 1
      type: string
    - jsonPath: .spec.predictorName
      name: Predictor
      type: string
    - jsonPath: .spec.datasetName
      name: Dataset
      type: string
    - jsonPath: .spec.labeled
      name: Labeled
      type: string
    - jsonPath: .spec.output.bucketName
      name: Bucket
      priority: 1
      type: string
    - jsonPath: .spec.output.path
      name: Key
      priority: 1
      type: string
    - jsonPath: .status.score
      name: Score
      type: string
    - jsonPath: .status.phase
      name: Status
      type: string
    - jsonPath: .status.rows
      name: Rows
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Prediction represents a single batch prediction on a dataset
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PredictionSpec represent the desired state of Prediction
            properties:
              aborted:
                default: false
                description: Indicates if the Prediction was aborted and should stop
                  execution
                type: boolean
              activeDeadlineSeconds:
                default: 600
                description: The deadline for the batch prediction Job to be completed
                  in seconds
                format: int64
                minimum: 0
                type: integer
              cronPredictorName:
                default: ""
                description: CronPredictionName specifies the name of the CronPrediction
                  that created the Prediction, if applicable
                maxLength: 63
                type: string
              datasetName:
                default: ""
                description: The name of the Dataset  which exists in the same DataProduct
                  namespace as the Prediction that will be downloaded to make predictions
                  on each row of its data
                type: string
              forecast:
                default: false
                description: Indicates if the prediction is a forecast
                type: boolean
              forecastInfo:
                description: The forecasting specification in the case that the predicted
                  model is a hierarchical forecast
                properties:
                  hierarchyValues:
                    additionalProperties:
                      type: string
                    description: The hierarchy specification, which maps columns to
                      values
                    type: object
                  horizon:
                    description: The interval of the forecast
                    properties:
                      interval:
                        description: The period interval
                        enum:
                        - second
                        - minute
                        - hour
                        - day
                        - week
                        - month
                        - quarter
                        - year
                        type: string
                      length:
                        description: The windows end day
                        format: int32
                        type: integer
                      start:
                        default: 0
                        description: The number of intervals to start
                        format: int32
                        type: integer
                    type: object
                type: object
              input:
                description: Input specifies the location of the input data, if not
                  using a Dataset resource
                properties:
                  format:
                    default: csv
                    description: The file format of the dataset, if applicable
                    enum:
                    - csv
                    - json
                    - parquet
                    - tde
                    - sql
                    - table
                    - fwf
                    - excel
                    - sas
                    - spss
                    - auto
                    type: string
                  location:
                    description: The physical location of the dataset
                    properties:
                      bucketName:
                        default: ""
                        description: In the case of the location type being an object
                          storage system, BucketName is the name of the VirtualBucket
                          resource that exists in the same tenant as the resource
                          specifying the DataLocation. Modela will connect to the
                          external object storage system, and will access the file
                          from the path specified by the Path field
                        type: string
                      connectionName:
                        default: ""
                        description: In the case of the type of location being a database,
                          ConnectionName specifies the name of the Connection resource
                          that exists in the same tenant as the resource specifying
                          the DataLocation. Modela will attempt to connect to the
                          database using the credentials specified in the Connection,
                          and will execute the query specified by the SQL field
                        type: string
                      database:
                        default: ""
                        description: The name of a database inside the database system
                          specified by the ConnectionName field
                        type: string
                      path:
                        default: ""
                        description: The path to a flat-file inside an object storage
                          system. When using the Modela API to upload files (through
                          the FileService API), Modela will upload the data to a predetermined
                          path based on the Tenant, DataProduct, DataProductVersion,
                          and resource type of the resource in relation to the file
                          being uploaded. The path does not need to adhere to this
                          format; you can still pass the path of a file inside a bucket
                          not managed by Modela
                        type: string
                      sql:
                        default: ""
                        description: The SQL statement which will be executed to query
                          data from the table specified by Table
                        type: string
                      table:
                        default: ""
                        description: The name of a table inside a database, if applicable
                        type: string
                      topic:
                        default: ""
                        description: The name of the streaming topic (currently unsupported)
                        type: string
                      type:
                        default: object
                        description: The type of location where the data resides,
                          which can either be an object inside an object storage system
                          (i.e. Minio), a SQL location like a table or a view, a data
                          stream (i.e. Kafka, currently unsupported), or a web location
                          (currently unsupported)
                        type: string
                    type: object
                type: object
              labeled:
                default: false
                description: If true, measurements for the metrics specified by the
                  `Tests` field will be computed for each prediction and stored in
                  the Prediction's status with the average result of all predictions
                  Used usually for unit testing
                type: boolean
              output:
                description: Output specifies the location where the predicted dataset
                  will be stored
                properties:
                  action:
                    default: upsert
                    description: The update strategy for the dataset in the case that
                      the output location already exists (i.e a database table) Upsert
                      will insert new records and update existing ones; Insert will
                      insert new records and not update existing ones; Update will
                      not insert new records and only update existing ones
                    enum:
                    - upsert
                    - insert
                    - update
                    type: string
                  createTableIfNotExist:
                    description: If true, the database table specified by Location
                      will be created if it does not exist
                    type: boolean
                  datasetName:
                    default: ""
                    description: DatasetName is the name of a new Dataset resource
                      that will be created. If empty, the system will save the dataset
                      to a file
                    type: string
                  detectOutliers:
                    default: false
                    description: If true, an additional column will be added to the
                      dataset which indicates if each predicted row was detected to
                      be an outlier
                    type: boolean
                  format:
                    default: csv
                    description: The format of the dataset, applicable if the output
                      location is a flat-file
                    enum:
                    - csv
                    - json
                    - parquet
                    - tde
                    - sql
                    - table
                    - fwf
                    - excel
                    - sas
                    - spss
                    - auto
                    type: string
                  includeFeatures:
                    default: true
                    description: Indicates if the features (i.e. all the columns)
                      of the input dataset, excluding the feature which was predicted
                      on, will be included in the output dataset
                    type: boolean
                  location:
                    description: The location where the dataset will be stored
                    properties:
                      bucketName:
                        default: ""
                        description: In the case of the location type being an object
                          storage system, BucketName is the name of the VirtualBucket
                          resource that exists in the same tenant as the resource
                          specifying the DataLocation. Modela will connect to the
                          external object storage system, and will access the file
                          from the path specified by the Path field
                        type: string
                      connectionName:
                        default: ""
                        description: In the case of the type of location being a database,
                          ConnectionName specifies the name of the Connection resource
                          that exists in the same tenant as the resource specifying
                          the DataLocation. Modela will attempt to connect to the
                          database using the credentials specified in the Connection,
                          and will execute the query specified by the SQL field
                        type: string
                      database:
                        default: ""
                        description: The name of a database inside the database system
                          specified by the ConnectionName field
                        type: string
                      path:
                        default: ""
                        description: The path to a flat-file inside an object storage
                          system. When using the Modela API to upload files (through
                          the FileService API), Modela will upload the data to a predetermined
                          path based on the Tenant, DataProduct, DataProductVersion,
                          and resource type of the resource in relation to the file
                          being uploaded. The path does not need to adhere to this
                          format; you can still pass the path of a file inside a bucket
                          not managed by Modela
                        type: string
                      sql:
                        default: ""
                        description: The SQL statement which will be executed to query
                          data from the table specified by Table
                        type: string
                      table:
                        default: ""
                        description: The name of a table inside a database, if applicable
                        type: string
                      topic:
                        default: ""
                        description: The name of the streaming topic (currently unsupported)
                        type: string
                      type:
                        default: object
                        description: The type of location where the data resides,
                          which can either be an object inside an object storage system
                          (i.e. Minio), a SQL location like a table or a view, a data
                          stream (i.e. Kafka, currently unsupported), or a web location
                          (currently unsupported)
                        type: string
                    type: object
                  xai:
                    default: false
                    description: If true, SHAP values for each predicted row will
                      be included as JSON as an additional column of the dataset
                    type: boolean
                type: object
              owner:
                default: no-one
                description: The name of the Account which created the object, which
                  exists in the same tenant as the object
                type: string
              predictorName:
                description: PredictorName is the name of the Predictor resource that
                  will be used to evaluate predictions for the unlabeled input dataset.
                  The Predictor must exist in the same DataProduct namespace as the
                  resource
                maxLength: 63
                type: string
              priority:
                default: medium
                description: The priority of the Kubernetes Job created by the Prediction
                  (medium, by default)
                enum:
                - low
                - medium
                - high
                - urgent
                type: string
              resources:
                description: Resources specifies the resource requirements that will
                  be allocated to the batch prediction Job
                properties:
                  cpuImage:
                    description: Reference to the managed CPU trainer image, used
                      internally
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                  custom:
                    default: false
                    description: If true, ignore the workload class name.
                    type: boolean
                  gpuImage:
                    description: Reference to the managed GPU trainer image, used
                      internally
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                  requirements:
                    description: The custom resource requirements for the workload,
                      which are used if `WorkloadName` is not set
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  workloadName:
                    description: If this resource is based on the workload, this field
                      contain the name of the workload. The name of a WorkloadClass.
                      The system will use the resource requirements described by the
                      WorkloadClass
                    type: string
                type: object
              servingsiteRef:
                description: The reference to the ServingSite resource that hosts
                  the Prediction
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
              tests:
                description: Tests specifies a collection of metrics that will be
                  computed for each prediction if the Labeled field of the Prediction
                  is enabled
                items:
                  enum:
                  - accuracy
                  - average-precision
                  - balanced-accuracy
                  - pr-auc
                  - pr-auc-micro
                  - pr-auc-macro
                  - pr-auc-weighted
                  - f1
                  - f1-micro
                  - f1-macro
                  - f1-weighted
                  - f1-samples
                  - precision
                  - precision-micro
                  - precision-macro
                  - precision-weighted
                  - precision-samples
                  - recall
                  - recall-macro
                  - recall-micro
                  - recall-weighted
                  - recall-samples
                  - log-loss
                  - auc
                  - auc-micro
                  - auc-macro
                  - auc-weighted
                  - zero-one
                  - hamming-loss
                  - hinge-loss
                  - jacquard-loss
                  - mcc
                  - fp
                  - fn
                  - tn
                  - tp
                  - tpr
                  - fpr
                  - tnr
                  - matthews-corr-coef
                  - explained-variance
                  - max-error
                  - mae
                  - mse
                  - msle
                  - rmse
                  - rmsle
                  - median-absolute-error
                  - r2
                  - adj-r2
                  - mean_poisson_deviance
                  - mean-gamma-deviance
                  - mean-tweedie-deviance
                  - mape
                  - maze
                  - mdape
                  - smape
                  - adjusted-mutual-info-score
                  - adjusted-rand-score
                  - completeness-score
                  - fowlkes-mallows-score
                  - homogeneity-score
                  - mutual-info-score
                  - normalized-mutual-info-score
                  - v-measure-score
                  - p50-latency
                  - p95-latency
                  - p99-latency
                  - cpu
                  - gpu
                  - mem
                  - gpu-mem
                  - req-per-sec
                  - uncertain-prediction-percent
                  - none
                  type: string
                type: array
              ttl:
                default: 0
                description: The time-to-live of the Prediction, after which the Prediction
                  will be archived
                format: int32
                type: integer
              versionName:
                default: ""
                description: The name of the DataProductVersion which describes the
                  version of the resource that exists in the same DataProduct namespace
                  as the resource
                type: string
            type: object
          status:
            description: PredictionStatus is the observed state of a Prediction
            properties:
              conditions:
                items:
                  description: PredictionCondition describes the state of a Prediction
                    at a certain point
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another
                      format: date-time
                      type: string
                    message:
                      description: A human-readable message indicating details about
                        the transition
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown
                      type: string
                    type:
                      description: Type of Prediction condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              endTime:
                description: EndTime denotes the time when the batch prediction Job
                  completed or failed
                format: date-time
                type: string
              failureMessage:
                description: In the case of failure, the Prediction resource controller
                  will set this field with a failure message
                type: string
              failureReason:
                description: In the case of failure, the Prediction resource controller
                  will set this field with a failure reason
                type: string
              lastUpdated:
                description: The last time the object was updated
                format: date-time
                type: string
              logs:
                description: The location of logs produced by the batch prediction
                  Job
                properties:
                  bucketName:
                    description: The name of the VirtualBucket resource where the
                      logs are stored
                    type: string
                  containers:
                    description: The collection of ContainerLog objects that describe
                      the location of logs per container
                    items:
                      description: ContainerLog describes the location of logs for
                        a single Job
                      properties:
                        container:
                          description: The container name
                          type: string
                        job:
                          description: The name of the Job
                          type: string
                        key:
                          description: The path to the log in the bucket
                          type: string
                      type: object
                    type: array
                type: object
              observedGeneration:
                description: ObservedGeneration is the last generation that was acted
                  on
                format: int64
                type: integer
              phase:
                default: Pending
                description: The current phase of the prediction
                type: string
              results:
                description: The collection of metrics that represent the average
                  measurement across all predictions for each metric specified by
                  the Tests field of the Predictor
                items:
                  description: Measurement is a value for a specific metric
                  properties:
                    metric:
                      description: The metric type name (e.g. F1 / Accuracy)
                      enum:
                      - accuracy
                      - average-precision
                      - balanced-accuracy
                      - pr-auc
                      - pr-auc-micro
                      - pr-auc-macro
                      - pr-auc-weighted
                      - f1
                      - f1-micro
                      - f1-macro
                      - f1-weighted
                      - f1-samples
                      - precision
                      - precision-micro
                      - precision-macro
                      - precision-weighted
                      - precision-samples
                      - recall
                      - recall-macro
                      - recall-micro
                      - recall-weighted
                      - recall-samples
                      - log-loss
                      - auc
                      - auc-micro
                      - auc-macro
                      - auc-weighted
                      - zero-one
                      - hamming-loss
                      - hinge-loss
                      - jacquard-loss
                      - mcc
                      - fp
                      - fn
                      - tn
                      - tp
                      - tpr
                      - fpr
                      - tnr
                      - matthews-corr-coef
                      - explained-variance
                      - max-error
                      - mae
                      - mse
                      - msle
                      - rmse
                      - rmsle
                      - median-absolute-error
                      - r2
                      - adj-r2
                      - mean_poisson_deviance
                      - mean-gamma-deviance
                      - mean-tweedie-deviance
                      - mape
                      - maze
                      - mdape
                      - smape
                      - adjusted-mutual-info-score
                      - adjusted-rand-score
                      - completeness-score
                      - fowlkes-mallows-score
                      - homogeneity-score
                      - mutual-info-score
                      - normalized-mutual-info-score
                      - v-measure-score
                      - p50-latency
                      - p95-latency
                      - p99-latency
                      - cpu
                      - gpu
                      - mem
                      - gpu-mem
                      - req-per-sec
                      - uncertain-prediction-percent
                      - none
                      type: string
                    value:
                      description: The value of the metric
                      type: number
                  required:
                  - metric
                  - value
                  type: object
                type: array
              rows:
                description: The number of rows predicted
                format: int32
                type: integer
              startTime:
                description: StartTime denotes the time when the batch prediction
                  Job started
                format: date-time
                type: string
              triggeredBy:
                description: The trigger that started the batch prediction
                enum:
                - on-demand
                - on-schedule
                - on-new-data
                - on-github-event
                - on-concept-drift
                - on-pref-degradation
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
