---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: recipes.data.modela.ai
spec:
  group: data.modela.ai
  names:
    categories:
    - data
    - modela
    - all
    kind: Recipe
    listKind: RecipeList
    plural: recipes
    shortNames:
    - rc
    singular: recipe
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - jsonPath: .spec.owner
      name: Owner
      type: string
    - jsonPath: .spec.versionName
      name: Version
      type: string
    - jsonPath: .spec.description
      name: Description
      type: string
    - jsonPath: .status.lastRun.at
      name: Last Run
      type: date
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Recipe represents a single batch of data
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RecipeSpec defines the desired state of a dataset
            properties:
              activeDeadlineSeconds:
                default: 600
                description: ActiveDeadlineSeconds is the deadline setup on jobs for
                  this recipe.
                format: int64
                type: integer
              description:
                default: ""
                description: Description is the user provided description
                maxLength: 512
                type: string
              input:
                description: Input is the input recipe spec
                properties:
                  datasetName:
                    default: ""
                    description: DatasetName is the name of the dataset
                    type: string
                  format:
                    default: csv
                    description: Format is the dataset format
                    enum:
                    - csv
                    - json
                    - parquet
                    - tde
                    - sql
                    - table
                    - fwf
                    - excel
                    - sas
                    - spss
                    - auto
                    type: string
                  location:
                    description: Location is the folder of the actual data resides,
                      if not using dataset
                    properties:
                      bucketName:
                        default: ""
                        description: In the case of the location type being an object
                          storage system, BucketName is the name of the VirtualBucket
                          resource that exists in the same tenant as the resource
                          specifying the DataLocation. Modela will connect to the
                          external object storage system, and will access the file
                          from the path specified by the Path field
                        type: string
                      connectionName:
                        default: ""
                        description: In the case of the type of location being a database,
                          ConnectionName specifies the name of the Connection resource
                          that exists in the same tenant as the resource specifying
                          the DataLocation. Modela will attempt to connect to the
                          database using the credentials specified in the Connection,
                          and will execute the query specified by the SQL field
                        type: string
                      database:
                        default: ""
                        description: The name of a database inside the database system
                          specified by the ConnectionName field
                        type: string
                      path:
                        default: ""
                        description: The path to a flat-file inside an object storage
                          system. When using the Modela API to upload files (through
                          the FileService API), Modela will upload the data to a predetermined
                          path based on the Tenant, DataProduct, DataProductVersion,
                          and resource type of the resource in relation to the file
                          being uploaded. The path does not need to adhere to this
                          format; you can still pass the path of a file inside a bucket
                          not managed by Modela
                        type: string
                      sql:
                        default: ""
                        description: The SQL statement which will be executed to query
                          data from the table specified by Table
                        type: string
                      table:
                        default: ""
                        description: The name of a table inside a database, if applicable
                        type: string
                      topic:
                        default: ""
                        description: The name of the streaming topic (currently unsupported)
                        type: string
                      type:
                        default: object
                        description: The type of location where the data resides,
                          which can either be an object inside an object storage system
                          (i.e. Minio), a SQL location like a table or a view, a data
                          stream (i.e. Kafka, currently unsupported), or a web location
                          (currently unsupported)
                        type: string
                    type: object
                type: object
              output:
                description: Output is the desired output
                properties:
                  createDataset:
                    default: false
                    description: CreateDataset if true, create a new dataset when
                      the recipe is done.
                    type: boolean
                  datasetName:
                    default: ""
                    description: DatasetName is the name of the dataset output to
                      the recipe
                    type: string
                  location:
                    description: Location is the data location folder of the actual
                      data resides.
                    properties:
                      bucketName:
                        default: ""
                        description: In the case of the location type being an object
                          storage system, BucketName is the name of the VirtualBucket
                          resource that exists in the same tenant as the resource
                          specifying the DataLocation. Modela will connect to the
                          external object storage system, and will access the file
                          from the path specified by the Path field
                        type: string
                      connectionName:
                        default: ""
                        description: In the case of the type of location being a database,
                          ConnectionName specifies the name of the Connection resource
                          that exists in the same tenant as the resource specifying
                          the DataLocation. Modela will attempt to connect to the
                          database using the credentials specified in the Connection,
                          and will execute the query specified by the SQL field
                        type: string
                      database:
                        default: ""
                        description: The name of a database inside the database system
                          specified by the ConnectionName field
                        type: string
                      path:
                        default: ""
                        description: The path to a flat-file inside an object storage
                          system. When using the Modela API to upload files (through
                          the FileService API), Modela will upload the data to a predetermined
                          path based on the Tenant, DataProduct, DataProductVersion,
                          and resource type of the resource in relation to the file
                          being uploaded. The path does not need to adhere to this
                          format; you can still pass the path of a file inside a bucket
                          not managed by Modela
                        type: string
                      sql:
                        default: ""
                        description: The SQL statement which will be executed to query
                          data from the table specified by Table
                        type: string
                      table:
                        default: ""
                        description: The name of a table inside a database, if applicable
                        type: string
                      topic:
                        default: ""
                        description: The name of the streaming topic (currently unsupported)
                        type: string
                      type:
                        default: object
                        description: The type of location where the data resides,
                          which can either be an object inside an object storage system
                          (i.e. Minio), a SQL location like a table or a view, a data
                          stream (i.e. Kafka, currently unsupported), or a web location
                          (currently unsupported)
                        type: string
                    type: object
                type: object
              owner:
                default: no-one
                description: Owner is the owner of the recipe
                type: string
              resources:
                description: Resource define the resource requirements to run the
                  recipe
                properties:
                  cpuImage:
                    description: Reference to the managed CPU trainer image, used
                      internally
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                  gpuImage:
                    description: Reference to the managed GPU trainer image, used
                      internally
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                  requirements:
                    description: The custom resource requirements for the workload,
                      which are used if `WorkloadName` is not set
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  workloadName:
                    description: If this resource is based on the workload, this field
                      contain the name of the workload. The name of a WorkloadClass.
                      The system will use the resource requirements described by the
                      WorkloadClass
                    type: string
                type: object
              sample:
                description: Sample specify the sampling paramters when viewing the
                  recipe
                properties:
                  column:
                    default: ""
                    description: The name of the column to be used for stratified
                      sampling
                    type: string
                  enabled:
                    default: false
                    description: Indicates if sampling is enabled
                    type: boolean
                  filter:
                    default: ""
                    description: The filter formula, valid only if the sample type
                      is a filter
                    type: string
                  percent:
                    default: 100
                    description: The percentage of rows to sample
                    format: int32
                    minimum: 0
                    type: integer
                  rows:
                    default: 500
                    description: The number of rows to sample (by default, 500)
                    format: int32
                    minimum: 0
                    type: integer
                  type:
                    default: random
                    description: The type of sampling (random sampling, by default)
                    enum:
                    - header
                    - random
                    - filter
                    - anomaly
                    - stratified
                    type: string
                type: object
              steps:
                description: Steps are the list of recipe steps
                items:
                  description: RecipeStep defines one step in the recipe
                  properties:
                    op:
                      description: RecipeStepOperation is the operation name of one
                        step in the recipe
                      type: string
                    parameters:
                      items:
                        description: RecipeStepParam is a key value parameter of the
                          recipe
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                        type: object
                      type: array
                  type: object
                type: array
              ttl:
                default: 0
                description: TTL.
                format: int32
                type: integer
              versionName:
                default: ""
                description: VersionName is the data product version of the recipe
                  required.
                maxLength: 63
                type: string
            type: object
          status:
            description: RecipeStatus defines the observed state of Recipe
            properties:
              conditions:
                items:
                  description: RecipeCondition describes the state of a dataset at
                    a certain point.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: RecipeConditionType is the condition on the Recipe
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              failureMessage:
                description: Update in case of terminal failure message
                type: string
              failureReason:
                description: Update in case of terminal failure Borrowed from cluster
                  api controller
                type: string
              lastRun:
                description: Last run is the last time a data pipeline run was created
                properties:
                  completionTime:
                    description: The time at which the run concluded
                    format: date-time
                    type: string
                  duration:
                    description: The duration of the run in seconds
                    format: int32
                    type: integer
                  failureMessage:
                    description: In the case of failure, the resource controller which
                      created the run will set this field with a failure message
                    type: string
                  failureReason:
                    description: In the case of failure, the resource controller which
                      created the run will set this field with a failure reason
                    type: string
                  name:
                    description: The name of the run
                    type: string
                  status:
                    description: The status of the last run
                    type: string
                type: object
              lastUpdated:
                description: Last time the object was updated
                format: date-time
                type: string
              nextRun:
                description: The time of the next schedule run
                format: date-time
                type: string
              observedGeneration:
                description: ObservedGeneration is the Last generation that was acted
                  on
                format: int64
                type: integer
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
