---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: virtualclusters.infra.modela.ai
spec:
  group: infra.modela.ai
  names:
    categories:
    - infra
    - modela
    kind: VirtualCluster
    listKind: VirtualClusterList
    plural: virtualclusters
    singular: virtualcluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - description: cluster owner account
      jsonPath: .spec.ownerName
      name: Owner
      type: string
    - description: virtual bucket connections
      jsonPath: .spec.connectionName
      name: Nodes
      type: integer
    - description: virtual bucket connections
      jsonPath: .spec.connectionName
      name: Node Class
      type: string
    - description: virtual bucket connections
      jsonPath: .spec.connectionName
      name: Gpus
      type: integer
    - description: virtual bucket connections
      jsonPath: .spec.connectionName
      name: Gpu Class
      type: string
    - description: virtual bucket connections
      jsonPath: .spec.connectionName
      name: Connection
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: VirtualCluster defined a running kubernetes cluster with N nodes
          and GPU. The study can create or destroy virtual clusters during training.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              connectionName:
                default: ""
                description: ConnectionName refer to the name of the provider connection
                type: string
              description.omitempty:
                default: ""
                description: Description is the user provided description
                type: string
              gpuClassName:
                default: ""
                description: GpuClassName is the The class of gpu.
                type: string
              gpus:
                default: 0
                description: Gpus is the desired number of gpus
                format: int32
                maximum: 10
                minimum: 0
                type: integer
              limits:
                description: Specify resource limits for the virtual cluster
                properties:
                  enabled:
                    default: false
                    description: Enabled, set to true if you want to
                    type: boolean
                  limitRange:
                    description: LimitRangeSpec defines a min/max usage limit for
                      resources that match on kind.
                    properties:
                      limits:
                        description: Limits is the list of LimitRangeItem objects
                          that are enforced.
                        items:
                          description: LimitRangeItem defines a min/max usage limit
                            for any resource that matches on kind.
                          properties:
                            default:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: Default resource requirement limit value
                                by resource name if resource limit is omitted.
                              type: object
                            defaultRequest:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: DefaultRequest is the default resource
                                requirement request value by resource name if resource
                                request is omitted.
                              type: object
                            max:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: Max usage constraints on this kind by resource
                                name.
                              type: object
                            maxLimitRequestRatio:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: MaxLimitRequestRatio if specified, the
                                named resource must have a request and limit that
                                are both non-zero where limit divided by request is
                                less than or equal to the enumerated value; this represents
                                the max burst for the named resource.
                              type: object
                            min:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: Min usage constraints on this kind by resource
                                name.
                              type: object
                            type:
                              description: Type of resource that this limit applies
                                to.
                              type: string
                          required:
                          - type
                          type: object
                        type: array
                    required:
                    - limits
                    type: object
                  maxCpu:
                    anyOf:
                    - type: integer
                    - type: string
                    description: High level req.
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  maxMem:
                    anyOf:
                    - type: integer
                    - type: string
                    description: High level max memory provider
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  maxPods:
                    description: Max number of pods
                    format: int32
                    type: integer
                  maxPvc:
                    description: Max number of pvc
                    format: int32
                    type: integer
                  quota:
                    description: Low level spec. QuotaSpec is quoute specification
                      for the lab namespace.
                    properties:
                      hard:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'hard is the set of desired hard limits for each
                          named resource. More info: https://kubernetes.io/docs/concepts/policy/resource-quotas/'
                        type: object
                      scopeSelector:
                        description: scopeSelector is also a collection of filters
                          like scopes that must match each object tracked by a quota
                          but expressed using ScopeSelectorOperator in combination
                          with possible values. For a resource to match, both scopes
                          AND scopeSelector (if specified in spec), must be matched.
                        properties:
                          matchExpressions:
                            description: A list of scope selector requirements by
                              scope of the resources.
                            items:
                              description: A scoped-resource selector requirement
                                is a selector that contains values, a scope name,
                                and an operator that relates the scope name and values.
                              properties:
                                operator:
                                  description: Represents a scope's relationship to
                                    a set of values. Valid operators are In, NotIn,
                                    Exists, DoesNotExist.
                                  type: string
                                scopeName:
                                  description: The name of the scope that the selector
                                    applies to.
                                  type: string
                                values:
                                  description: An array of string values. If the operator
                                    is In or NotIn, the values array must be non-empty.
                                    If the operator is Exists or DoesNotExist, the
                                    values array must be empty. This array is replaced
                                    during a strategic merge patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - operator
                              - scopeName
                              type: object
                            type: array
                        type: object
                      scopes:
                        description: A collection of filters that must match each
                          object tracked by a quota. If not specified, the quota matches
                          all objects.
                        items:
                          description: A ResourceQuotaScope defines a filter that
                            must match each object tracked by a quota
                          type: string
                        type: array
                    type: object
                type: object
              nodeClassName:
                default: ""
                description: NodeClassName is the class of nodes or vm
                type: string
              nodes:
                default: 1
                description: Nodes is the desired number of nodes
                format: int32
                maximum: 10
                minimum: 1
                type: integer
              owner:
                default: no-one
                description: Owner is the account name of the owner of this cluster
                type: string
              spot:
                default: false
                description: Spot indicate if we should we use spot instances.
                type: boolean
              tenantRef:
                description: The owner of the virtual bucket
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
              volumeSize:
                default: 0
                description: VolumeSize is the size of the volume that would be mounted
                  on all the node of the cluster
                format: int32
                maximum: 10
                minimum: 0
                type: integer
            type: object
          status:
            properties:
              availableGpus:
                description: Number of available Gpus
                format: int32
                minimum: 0
                type: integer
              availableNodes:
                format: int32
                minimum: 0
                type: integer
              conditions:
                items:
                  description: VirtualClusterCondition describes the state of a virtual
                    cluster at a certain point.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of account condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              failureMessage:
                description: Update in case of terminal failure message
                type: string
              failureReason:
                description: Update in case of terminal failure Borrowed from cluster
                  api controller
                type: string
              lastUpdated:
                description: Last time the object was updated
                format: date-time
                type: string
              observedGeneration:
                description: ObservedGeneration is the Last generation that was acted
                  on
                format: int64
                type: integer
            type: object
        required:
        - metadata
        - spec
        - status
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
