---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: licenses.infra.modela.ai
spec:
  group: infra.modela.ai
  names:
    categories:
    - infra
    - modela
    kind: License
    listKind: LicenseList
    plural: licenses
    singular: license
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Valid")].status
      name: Ready
      type: string
    - jsonPath: .spec.owner
      name: Owner
      type: string
    - jsonPath: .spec.secretRef.name
      name: Secret
      type: string
    - jsonPath: .spec.trialStart
      name: Trial Start
      type: string
    - jsonPath: .spec.trialEnd
      name: Trial End
      type: string
    - jsonPath: .spec.maxTrainers
      name: Max Trainers
      priority: 1
      type: string
    - jsonPath: .spec.maxServers
      name: Max Nodes
      priority: 1
      type: string
    - jsonPath: .spec.maxUsers
      name: Max Users
      priority: 1
      type: string
    - jsonPath: .spec.expireAt
      name: Expire At
      type: date
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: License represents the license key and limitations of a cluster-wide
          license obtained from Modela.ai
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: LicenseSpec defines the details of a License. The contents
              of the specification are derived from the actual license key, and changing
              the specification has no effect on the limitations of the license
            properties:
              chatbot:
                default: false
                description: Chatbot indicates if chatbot models are supported
                type: boolean
              email:
                default: ""
                description: The e-mail address of the Modela.ai account which owns
                  the license
                type: string
              expireAt:
                description: The date at which the license expires
                format: date-time
                type: string
              forecast:
                default: false
                description: Forecast indicates if Modela can generate forecasting
                  models
                type: boolean
              maxDataPlanes:
                description: MaxDataPlanes specifies the maximum number of data plane
                  replicas that may exist at once
                format: int32
                minimum: 0
                type: integer
              maxProducts:
                description: MaxProducts specifies the maximum number of DataProduct
                  across the cluster
                format: int32
                minimum: 0
                type: integer
              maxServers:
                description: MaxServers specifies the maximum number of Kubernetes
                  nodes that may be utilized at once
                format: int32
                minimum: 0
                type: integer
              maxTrainers:
                description: MaxTrainers specifies the maximum number of parallel
                  trainers that can be active at once
                format: int32
                minimum: 0
                type: integer
              maxUsers:
                description: MaxUsers specifies the maximum number of Accounts that
                  can be created across all tenants
                format: int32
                minimum: 0
                type: integer
              nlp:
                default: false
                description: NLP indicates if natural language processing models are
                  supported
                type: boolean
              notifierName:
                description: The reference to a Notifier resource that receives Alerts
                  for license expiration
                type: string
              priceName:
                description: The name of the license price, internal to Modela.ai
                type: string
              productName:
                default: ""
                description: The name of the license product, internal to Modela.ai
                type: string
              secretRef:
                description: The reference to the secret containing the license token
                properties:
                  name:
                    description: name is unique within a namespace to reference a
                      secret resource.
                    type: string
                  namespace:
                    description: namespace defines the space within which the secret
                      name must be unique.
                    type: string
                type: object
              trialEnd:
                description: TrialEnd specifies when the free trial expires, if active
                format: date-time
                type: string
              trialStart:
                description: TrialStart is the start date for of the free trial period,
                  if active
                format: date-time
                type: string
              vision:
                default: false
                description: Vision indicates if computer vision models are supported
                type: boolean
            type: object
          status:
            description: LicenseStatus is the observed state of a License
            properties:
              conditions:
                items:
                  description: LicenseCondition describes the state of the license
                    at a certain point
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              failureMessage:
                description: In the case of failure, the License resource controller
                  will set this field with a failure message
                type: string
              failureReason:
                description: In the case of failure, the License resource controller
                  will set this field with a failure reason
                type: string
              lastUpdated:
                description: The last time the object was updated
                format: date-time
                type: string
              observedGeneration:
                description: ObservedGeneration is the last generation that was acted
                  on
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
