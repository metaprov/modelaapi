
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.5.0
  creationTimestamp: null
  name: predictions.inference.modeld.io
spec:
  group: inference.modeld.io
  names:
    categories:
    - inference
    - modeld
    kind: Prediction
    listKind: PredictionList
    plural: predictions
    shortNames:
    - pred
    singular: prediction
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - jsonPath: .spec.owner
      name: Owner
      priority: 1
      type: string
    - jsonPath: .spec.predictorName
      name: Predictor
      type: string
    - jsonPath: .spec.datasetName
      name: Dataset
      type: string
    - jsonPath: .spec.labeled
      name: Labeled
      type: string
    - jsonPath: .spec.output.bucketName
      name: Bucket
      priority: 1
      type: string
    - jsonPath: .spec.output.path
      name: Key
      priority: 1
      type: string
    - jsonPath: .status.score
      name: Score
      type: string
    - jsonPath: .status.phase
      name: Status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PredictionTemplate represents a prediction object
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PredictionSpec represent the desired state of Prediction
            properties:
              activeDeadlineSeconds:
                default: 600
                description: ActiveDeadlineSeconds is the deadline of a job for this
                  dataset.
                format: int64
                minimum: 0
                type: integer
              datasetName:
                type: string
              input:
                description: Input is the location of the input file if not using
                  a dataset
                properties:
                  bucketName:
                    type: string
                  path:
                    description: Path to the full data file (e.g. csv file).
                    type: string
                required:
                - bucketName
                - path
                type: object
              labeled:
                default: false
                description: Labeled , true if this is labeled prediction request.
                  Used usally for unit testing
                type: boolean
              output:
                description: Output is the location of the output file.
                properties:
                  bucketName:
                    type: string
                  path:
                    description: Path to the full data file (e.g. csv file).
                    type: string
                required:
                - bucketName
                - path
                type: object
              owner:
                default: no-one
                description: The owner account name
                type: string
              predictorName:
                description: PredictorName refer to the predictor which would predict
                  the dataset of this prediction.
                maxLength: 63
                minLength: 1
                type: string
              tests:
                description: Tests is the list of metrics that we need to measure
                  if we are running a labeled prediction
                items:
                  description: Metric is the machine learning metric used to evaluate
                    a model performance.
                  enum:
                  - accuracy
                  - average-precision
                  - balanced-accuracy
                  - brier-score-loss
                  - f1
                  - f1-macro
                  - f1-micro
                  - f1-weighted
                  - log-loss
                  - precision
                  - precision-micro
                  - precision-macro
                  - precision-weighted
                  - recall
                  - recall-macro
                  - recall-micro
                  - recall-weighted
                  - auc
                  - fp
                  - fn
                  - tn
                  - tp
                  - explained_variance
                  - mae
                  - mse
                  - msle
                  - median-absolute-error
                  - r2
                  - adjusted-mutual-info-score
                  - adjusted-rand-score
                  - completeness-score
                  - fowlkes-mallows-score
                  - homogeneity-score
                  - mutual-info-score
                  - normalized-mutual-info-score
                  - v-measure-score
                  - rmse
                  - unknown
                  - mape
                  - smape
                  - mdape
                  type: string
                type: array
              versionName:
                description: VersionName is the data product version of the data pipeline
                type: string
              workloadClassName:
                default: default-prediction-workload-class
                description: A reference to the workload class that is used for training
                type: string
            type: object
          status:
            description: PredictionStatus is the observed state of a PredictionTemplate
            properties:
              completionTime:
                description: EndTime is the end time of the prediction.
                format: date-time
                type: string
              conditions:
                items:
                  description: PredictionCondition describes the state of PredictionTemplate
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of  condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: ObservedGeneration is the Last generation that was acted
                  on
                format: int64
                type: integer
              phase:
                description: Phase is the current phase of the prediction
                type: string
              results:
                description: Results is the results of running the prediction with
                  a labeled dataset
                items:
                  description: Measurement is a value for a specific metric
                  properties:
                    metric:
                      description: The metric type name (e.g. F1 / Accuracy)
                      enum:
                      - accuracy
                      - average-precision
                      - balanced-accuracy
                      - brier-score-loss
                      - f1
                      - f1-macro
                      - f1-micro
                      - f1-weighted
                      - log-loss
                      - precision
                      - precision-micro
                      - precision-macro
                      - precision-weighted
                      - recall
                      - recall-macro
                      - recall-micro
                      - recall-weighted
                      - auc
                      - fp
                      - fn
                      - tn
                      - tp
                      - explained_variance
                      - mae
                      - mse
                      - msle
                      - median-absolute-error
                      - r2
                      - adjusted-mutual-info-score
                      - adjusted-rand-score
                      - completeness-score
                      - fowlkes-mallows-score
                      - homogeneity-score
                      - mutual-info-score
                      - normalized-mutual-info-score
                      - v-measure-score
                      - rmse
                      - unknown
                      - mape
                      - smape
                      - mdape
                      type: string
                    value:
                      description: The value for this model
                      type: number
                  required:
                  - metric
                  - value
                  type: object
                type: array
              startTime:
                description: StartTime is the start time of the prediction.
                format: date-time
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
