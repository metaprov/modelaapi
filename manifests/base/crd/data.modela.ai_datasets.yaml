---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: datasets.data.modela.ai
spec:
  group: data.modela.ai
  names:
    categories:
    - data
    - modela
    - all
    kind: Dataset
    listKind: DatasetList
    plural: datasets
    shortNames:
    - dset
    singular: dataset
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Status
      type: string
    - jsonPath: .spec.owner
      name: Owner
      type: string
    - jsonPath: .spec.versionName
      name: Version
      type: string
    - jsonPath: .spec.datasourceName
      name: Data Source
      type: string
    - jsonPath: .spec.type
      name: Type
      type: string
    - jsonPath: .status.statistics.rows
      name: Rows
      type: integer
    - jsonPath: .status.statistics.cols
      name: Columns
      type: integer
    - jsonPath: .status.statistics.fileSize
      name: Size
      type: integer
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Dataset represents a chunk of data that has been analyzed and
          stored inside a managed bucket
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DatasetSpec defines the desired state of the Dataset
            properties:
              activeDeadlineSeconds:
                default: 600
                description: The deadline in seconds for all Jobs created by the Dataset
                format: int64
                type: integer
              correlation:
                description: The specification for how to find the correlations of
                  the Dataset's features during the profiling phase. Based on the
                  specification, the data plane will compute the correlation between
                  each feature and will store the highest-scoring
                properties:
                  cutoff:
                    default: 50
                    description: The minimum value of a computed correlation to be
                      stored as a result
                    type: number
                  method:
                    default: pearson
                    description: The method to be used when computing correlations
                    type: string
                  top:
                    default: 10
                    description: The number of top correlations to be included in
                      the correlation results
                    format: int32
                    type: integer
                type: object
              datasourceName:
                default: ""
                description: The reference to the Data Source resource which exists
                  in the same Data Product namespace as the object. The Data Source
                  must represent the columns and the task type of the Dataset. The
                  validation rules associated with the Data Source will be validated
                  against the raw data of the Dataset once it is created
                maxLength: 63
                type: string
              description:
                default: ""
                description: User-provided description of the object
                maxLength: 512
                type: string
              displayName:
                default: ""
                description: User-provided display name of the object
                type: string
              fast:
                default: false
                description: Indicates if the Dataset should be quickly processed.
                  If enabled, the validation, profiling, and reporting phases will
                  be skipped.
                type: boolean
              labRef:
                description: 'ObjectReference contains enough information to let you
                  inspect or modify the referred object. --- New uses of this type
                  are discouraged because of difficulty describing its usage when
                  embedded in APIs. 1. Ignored fields.  It includes many fields which
                  are not generally honored.  For instance, ResourceVersion and FieldPath
                  are both very rarely valid in actual usage. 2. Invalid usage help.  It
                  is impossible to add specific help for individual usage.  In most
                  embedded usages, there are particular restrictions like, "must refer
                  only to types A and B" or "UID not honored" or "name must be restricted".
                  Those cannot be well described when embedded. 3. Inconsistent validation.  Because
                  the usages are different, the validation rules are different by
                  usage, which makes it hard for users to predict what will happen.
                  4. The fields are both imprecise and overly precise.  Kind is not
                  a precise mapping to a URL. This can produce ambiguity during interpretation
                  and require a REST mapping.  In most cases, the dependency is on
                  the group,resource tuple and the version of the actual struct is
                  irrelevant. 5. We cannot easily change it.  Because this type is
                  embedded in many locations, updates to this type will affect numerous
                  schemas.  Don''t make new APIs embed an underspecified API type
                  they do not control. Instead of using this type, create a locally
                  provided and used type that is well-focused on your reference. For
                  example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                  .'
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
              labeled:
                default: true
                description: Indicates if the data is labeled or not
                type: boolean
              location:
                description: Location is the final location of the data which was
                  copied from the `Origin` location during the ingestion phase. This
                  field is set by the Dataset resource controller and should not be
                  changed by any end-users
                properties:
                  bucketName:
                    default: ""
                    description: In the case of the location type being object storage,
                      BucketName is the name of the VirtualBucket resource that exists
                      in the same tenant as the resource specifying the DataLocation.
                      Modela will connect to the external object storage system and
                      pull the file from the path specified by the Path field
                    type: string
                  connectionName:
                    default: ""
                    description: In the case of the location type being a database,
                      ConnectionName is the name of the Connection resource in the
                      same tenant namespace as the resource which specifies the DataLocation.
                      Modela will connect to the database specified by the Connection
                      and execute the query specified by the `SQL` field
                    type: string
                  database:
                    default: ""
                    description: The name of a database that exists inside a database
                      server that exists at the connection specified by the `ConnectionName`
                      field
                    type: string
                  path:
                    default: ""
                    description: "The path to a flat-file inside an object storage
                      system. When using the Modela API to upload files (through the
                      FileService API), Modela will upload the data to a predetermined
                      path with the following format: \n `\"modela/depot/tenants/{tenant}/dataproducts/{dataproduct}/dataproductversions/{version}/{resource_type}/{resource_name}/data/raw/{file_name}`
                      \n The path does not need to adhere to this format; you can
                      still pass the path of a file inside a bucket not managed by
                      Modela"
                    type: string
                  sql:
                    default: ""
                    description: The SQL statement which will be executed to query
                      data from a table
                    type: string
                  table:
                    default: ""
                    description: The name of a table inside a database, if applicable
                    type: string
                  topic:
                    default: ""
                    description: The name of the streaming topic (currently unsupported)
                    type: string
                  type:
                    default: object
                    description: The type of location where the data resides, which
                      can either be an object inside an object storage system (i.e.
                      Minio), a SQL location like a table or a view, a data stream
                      (i.e. Kafka, currently unsupported), or a web location (currently
                      unsupported)
                    type: string
                type: object
              notification:
                description: The notification specification that determines which
                  notifiers will receive Alerts generated by the object
                properties:
                  errorTTL:
                    default: 3600
                    description: Time-to-live for error messages, in seconds
                    format: int32
                    type: integer
                  notifierName:
                    default: ""
                    description: The name of the Notifier which exists in the same
                      tenant as the resource specifying the NotificationSpec
                    type: string
                  selector:
                    additionalProperties:
                      type: string
                    description: The labels which will be searched for in all Notifiers
                      to determine the target Notifiers
                    type: object
                  successTTL:
                    default: 3600
                    description: Time-to-live for success messages. In seconds
                    format: int32
                    type: integer
                type: object
              origin:
                description: Origin is the location of the data file or database query
                  which holds the raw data of the Dataset. When the Dataset is created,
                  the resource controller will retrieve the data from the location,
                  validate it against its Data Source if applicable, and store it
                  inside the `live` section of the Virtual Bucket resource specified
                  by the location
                properties:
                  bucketName:
                    default: ""
                    description: In the case of the location type being object storage,
                      BucketName is the name of the VirtualBucket resource that exists
                      in the same tenant as the resource specifying the DataLocation.
                      Modela will connect to the external object storage system and
                      pull the file from the path specified by the Path field
                    type: string
                  connectionName:
                    default: ""
                    description: In the case of the location type being a database,
                      ConnectionName is the name of the Connection resource in the
                      same tenant namespace as the resource which specifies the DataLocation.
                      Modela will connect to the database specified by the Connection
                      and execute the query specified by the `SQL` field
                    type: string
                  database:
                    default: ""
                    description: The name of a database that exists inside a database
                      server that exists at the connection specified by the `ConnectionName`
                      field
                    type: string
                  path:
                    default: ""
                    description: "The path to a flat-file inside an object storage
                      system. When using the Modela API to upload files (through the
                      FileService API), Modela will upload the data to a predetermined
                      path with the following format: \n `\"modela/depot/tenants/{tenant}/dataproducts/{dataproduct}/dataproductversions/{version}/{resource_type}/{resource_name}/data/raw/{file_name}`
                      \n The path does not need to adhere to this format; you can
                      still pass the path of a file inside a bucket not managed by
                      Modela"
                    type: string
                  sql:
                    default: ""
                    description: The SQL statement which will be executed to query
                      data from a table
                    type: string
                  table:
                    default: ""
                    description: The name of a table inside a database, if applicable
                    type: string
                  topic:
                    default: ""
                    description: The name of the streaming topic (currently unsupported)
                    type: string
                  type:
                    default: object
                    description: The type of location where the data resides, which
                      can either be an object inside an object storage system (i.e.
                      Minio), a SQL location like a table or a view, a data stream
                      (i.e. Kafka, currently unsupported), or a web location (currently
                      unsupported)
                    type: string
                type: object
              owner:
                default: no-one
                description: The name of the Account which created the object, which
                  exists in the same tenant as the object
                type: string
              reported:
                default: true
                description: Indicates if a PDF report containing the Dataset's profile
                  should be generated
                type: boolean
              resources:
                description: Resources specifies the resource requirements which the
                  Dataset will request when creating Jobs to analyze the data
                properties:
                  cpuImage:
                    description: Reference to the managed CPU trainer image, used
                      internally
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                  gpuImage:
                    description: Reference to the managed GPU trainer image, used
                      internally
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                  requirements:
                    description: The custom resource requirements for the workload,
                      which are used if `WorkloadName` is not set
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  workloadName:
                    description: If this resource is based on the workload, this field
                      contain the name of the workload. The name of a WorkloadClass.
                      The system will use the resource requirements described by the
                      WorkloadClass
                    type: string
                type: object
              sample:
                description: The specification for how the data should be sampled,
                  if applicable. Sampling may improve dataset and model creation time
                  in the case of very large datasets that are being rapidly prototyped
                  and iterated on
                properties:
                  column:
                    default: ""
                    description: The name of the column to be used for stratified
                      sampling
                    type: string
                  enabled:
                    default: false
                    description: Indicates if sampling is enabled
                    type: boolean
                  filter:
                    default: ""
                    description: The filter formula, valid only if the sample type
                      is a filter
                    type: string
                  percent:
                    default: 100
                    description: The percentage of rows to sample
                    format: int32
                    minimum: 0
                    type: integer
                  rows:
                    default: 500
                    description: The number of rows to sample (by default, 500)
                    format: int32
                    minimum: 0
                    type: integer
                  type:
                    default: random
                    description: The type of sampling (random sampling, by default)
                    enum:
                    - header
                    - random
                    - filter
                    - anomaly
                    - stratified
                    type: string
                type: object
              snapshotted:
                default: false
                description: Indicates if the resource controller has created a snapshot
                  of the data in the case that it is being read directly from a database,
                  and must be converted to a flat-file type such as a CSV as a result
                type: boolean
              synthetic:
                default: false
                description: Indicates if synthetic data should be generated (not
                  implemented as of the current release)
                type: boolean
              syntheticRows:
                default: 0
                description: If `Synthetic` is set to true, indicates how many synthetic
                  rows should be generated
                format: int32
                type: integer
              task:
                description: The machine learning task relevant to the Dataset. This
                  field *must* be the same as the Data Source of the object
                enum:
                - binary-classification
                - multi-classification
                - multi-label-classification
                - forecasting
                - regression
                - clustering
                - recommendation
                - outlier-detection
                - novelty-detection
                - topic-modeling
                - video-action-recognition
                - video-classification
                - video-object-tracking
                - image-classification
                - image-multi-classification
                - image-object-detection
                - image-segmentation
                - auto
                - text-ner
                - text-classification
                - text-summarization
                - text-qa
                - text-sentiment-analysis
                - text-generation
                - text-code-generation
                - text-translation
                - text-lang-detection
                - text-grammer-correction
                - text-paraphrasing
                - text-intent-classification
                - text-semantic-similarity
                - text-keyword-extraction
                - text-pos
                - text-tokenization
                - text-lemma
                - unknown
                type: string
              type:
                default: tabular
                description: The type of dataset which was uploaded. `tabular` is
                  the only supported type as of the current release
                enum:
                - tabular
                - image
                - text
                - video
                - audio
                type: string
              validate:
                default: true
                description: Indicates if the Dataset should be checked against the
                  validation rules of its Data Source
                type: boolean
              versionName:
                default: ""
                description: The reference to the DataProductVersion resource that
                  describes the version of the object
                maxLength: 63
                type: string
            type: object
          status:
            description: DatasetStatus defines the observed state of a Dataset object
            properties:
              conditions:
                items:
                  description: DatasetCondition describes the state of a dataset at
                    a certain point
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown
                      type: string
                    type:
                      description: Condition on the dataset
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              derivedFromDataset:
                description: If the dataset is derived, the name of the Dataset that
                  the object is derived from
                type: string
              endTime:
                description: The time that the Dataset finished processing, either
                  due to completion or failure
                format: date-time
                type: string
              failureMessage:
                description: In the case of failure, the Dataset resource controller
                  will set this field with a failure message
                type: string
              failureReason:
                description: In the case of failure, the Dataset resource controller
                  will set this field with a failure reason
                type: string
              hash:
                default: ""
                description: Sha256 signature of the raw data. Intended for internal
                  use
                type: string
              images:
                description: The Docker images used during the analysis of the Dataset
                properties:
                  dataImage:
                    description: The image used for data operations
                    type: string
                  publisherImage:
                    description: The image used to deploy models
                    type: string
                  trainerImage:
                    description: The image used during training
                    type: string
                type: object
              imbalanced:
                description: Whether or not the data was detected as imbalanced
                type: boolean
              lastStudyTime:
                description: Last time the Dataset was used with a Study
                format: date-time
                type: string
              lastUpdated:
                description: The last time the object was updated
                format: date-time
                type: string
              logs:
                description: The log file specification that determines the location
                  of all logs produced by the object
                properties:
                  bucketName:
                    description: The name of the VirtualBucket resource where the
                      logs are stored
                    type: string
                  containers:
                    description: The collection of ContainerLog objects that describe
                      the location of logs per container
                    items:
                      description: ContainerLog describes the location of logs for
                        a single Job
                      properties:
                        container:
                          description: The container name
                          type: string
                        job:
                          description: The name of the Job
                          type: string
                        key:
                          description: The path to the log in the bucket
                          type: string
                      type: object
                    type: array
                type: object
              observedGeneration:
                description: ObservedGeneration is the last generation that was acted
                  on
                format: int64
                type: integer
              phase:
                default: Pending
                description: The current phase of the Dataset progress
                type: string
              profileUri:
                description: The location of raw profile data. This field is intended
                  for internal use
                type: string
              progress:
                default: 0
                description: The current progress of the Dataset, with a maximum of
                  100, that is associated with the current phase
                format: int32
                type: integer
              reportName:
                description: Reference to the report object that was generated for
                  the dataset, which exists in the same Data Product namespace as
                  the object
                type: string
              reportUri:
                description: The location of report generated during the reporting
                  phase. This field is intended for internal use
                type: string
              startTime:
                description: The time that the system started processing the Dataset,
                  usually after the creation of the object
                format: date-time
                type: string
              statistics:
                description: Statistics for each column of the Dataset, which are
                  generated during the profiling phase.
                properties:
                  cols:
                    description: Number of columns observed from the data
                    format: int32
                    type: integer
                  columns:
                    description: Columns contains the collection of statistics for
                      each feature
                    items:
                      description: ColumnStatistics contains statistical parameters
                        for a single feature from a dataset
                      properties:
                        completeness:
                          description: The ratio between non-null and null values
                            in the column
                          type: number
                        constant:
                          type: boolean
                        corrToTarget:
                          description: Correlation to the target feature
                          type: number
                        count:
                          description: Amount of rows which contain a value for the
                            feature
                          type: number
                        datatype:
                          description: The data type of the column
                          enum:
                          - boolean
                          - datetime
                          - number
                          - categorical
                          - ordinal
                          - text
                          - json
                          - number-list
                          - categorical-list
                          - text-list
                          type: string
                        distinct:
                          description: Amount of unique values present in the column
                          format: int32
                          type: integer
                        distinctValueCount:
                          description: The ratio between unique values and non-unique
                            values in the column
                          type: number
                        duplicate:
                          description: Indicates if the column is a duplicate of another
                            column
                          type: boolean
                        highCardinality:
                          description: Indicates if the column has high cardinality
                            and should use the high cardinality encoder during feature
                            engineering
                          type: boolean
                        highCorrWithOtherFeatures:
                          description: Indicates if the column has high correlation
                            with another feature, and that it should be dropped
                          type: boolean
                        highMissingPct:
                          description: Indicates if the column has a high percentage
                            of missing values, and that it should be dropped
                          type: boolean
                        histogram:
                          description: Histogram data representing the distribution
                            of the values in the column
                          properties:
                            bins:
                              description: The bins if the histogram describes continous
                                variables
                              items:
                                type: number
                              type: array
                            categories:
                              description: The name of the categories, one per bin
                                if this is a categorical histogram
                              items:
                                type: string
                              type: array
                            values:
                              description: The set of values per bin
                              items:
                                type: number
                              type: array
                          type: object
                        id:
                          description: Indicates if the column is an ID column, such
                            as a primary key
                          type: boolean
                        ignore:
                          description: Indicates if the column should be ignored,
                            as specified by the Dataset's DataSource
                          type: boolean
                        importance:
                          description: The feature importance of the column
                          type: number
                        indexOfPeculiarity:
                          description: Used for text attributes
                          type: number
                        invalid:
                          description: The number of invalid values in the column
                          format: int32
                          type: integer
                        iqr:
                          description: The interquartile range of the columns values
                          type: number
                        kurtosis:
                          description: The computed kurtosis, which measures the peakedness
                            of the distribution of values in the column
                          type: number
                        lowCorrWithTarget:
                          description: Indicate that the feature has low correlation
                            with the target feature, and that it should be dropped
                          type: boolean
                        mad:
                          description: The sum of all values in the column
                          type: number
                        max:
                          description: The maximum value of all values in the column
                          type: number
                        mean:
                          description: The mean of all values in the column, if the
                            column data type is a number
                          type: number
                        min:
                          description: The minimum value of all values in the column
                          type: number
                        missing:
                          description: Amount of missing values present in the column
                          format: int32
                          type: integer
                        mode:
                          description: The mode value of the column, also known as
                            the most frequent value
                          type: string
                        mostFreqValuesRatio:
                          description: The ratio between most the most frequent value
                            to the number of total values in the column
                          type: number
                        name:
                          description: The name of the column
                          type: string
                        nullable:
                          description: Indicates if the column may contain null values,
                            as specified by the Dataset's DataSource
                          type: boolean
                        outliers:
                          description: The amount of outliers detected in the columns
                            values
                          format: int32
                          type: integer
                        p25:
                          description: The 25% point of all the values of the column
                            in order
                          type: number
                        p50:
                          description: The 50% point of all the values of the column
                            in order, also known as the median
                          type: number
                        p75:
                          description: The 75% point of all the values of the column
                            in order
                          type: number
                        percentMissing:
                          description: Percentage of missing values in the column
                          type: number
                        reserved:
                          description: Indicates if the column is reserved and must
                            be a feature included in model training
                          type: boolean
                        skewed:
                          description: "Marks that the column is skewed and would
                            require a power transform. \n If skewness is less than
                            -1 or greater than 1, the distribution is highly skewed.
                            If skewness is between -1 and -0.5 or between 0.5 and
                            1, the distribution is moderately skewed. If skewness
                            is between -0.5 and 0.5, the distribution is approximately
                            symmetric"
                          type: boolean
                        skewness:
                          description: The computed skewness, which measures the asymmetry
                            of the distribution of values in the column
                          type: number
                        stddev:
                          description: The standard deviation of the columns values
                          type: number
                        sum:
                          description: Skewness is the standard deviation value of
                            the attribute
                          type: number
                        target:
                          description: Indicates if the feature is the target attribute
                            for a Study, as specified by the Dataset's DataSource
                          type: boolean
                        variance:
                          description: The variability of the columns values from
                            the columns mean
                          type: number
                        zeros:
                          description: The number of zero values in the column
                          type: number
                      type: object
                    type: array
                  correlationsWithTarget:
                    description: The top correlations between all features and the
                      target feature
                    items:
                      description: Correlation records the correlation between two
                        features in a Dataset
                      properties:
                        feature1:
                          description: The first feature name
                          type: string
                        feature2:
                          description: The second feature name
                          type: string
                        method:
                          description: How the value was calculated
                          type: string
                        value:
                          description: The correlation value
                          type: number
                      required:
                      - feature1
                      - feature2
                      type: object
                    type: array
                  fileSize:
                    description: The file size of the data in bytes
                    format: int32
                    type: integer
                  rows:
                    description: Number of rows observed from the data
                    format: int32
                    type: integer
                  topCorrelations:
                    description: The top correlations between features, computed per
                      the CorrelationSpec of the parent Dataset
                    items:
                      description: Correlation records the correlation between two
                        features in a Dataset
                      properties:
                        feature1:
                          description: The first feature name
                          type: string
                        feature2:
                          description: The second feature name
                          type: string
                        method:
                          description: How the value was calculated
                          type: string
                        value:
                          description: The correlation value
                          type: number
                      required:
                      - feature1
                      - feature2
                      type: object
                    type: array
                type: object
              validationResults:
                description: List of validation results which are generated for every
                  validation rule associated with the Dataset's Data Source
                items:
                  properties:
                    column:
                      type: string
                    error:
                      type: string
                    passed:
                      type: boolean
                    type:
                      type: string
                  required:
                  - column
                  - error
                  - passed
                  - type
                  type: object
                type: array
            required:
            - logs
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
