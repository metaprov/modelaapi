---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: modelpipelines.training.modela.ai
spec:
  group: training.modela.ai
  names:
    categories:
    - training
    - modela
    - all
    kind: ModelPipeline
    listKind: ModelPipelineList
    plural: modelpipelines
    shortNames:
    - pipe
    singular: modelpipeline
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - jsonPath: .spec.schedule
      name: Schedule
      type: string
    - jsonPath: .status.lastRun
      name: Last Run
      type: date
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ModelPipeline represent a CI/CD machine learning pipeline definition
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ModelPipelineSpec define the desired state of the ModelPipeline
              resource.
            properties:
              approverAccountName:
                description: ApproverAccountName is the name of the approver for stages
                  that need approvals.
                type: string
              baselineModelName:
                description: BaselineModelName is the name of the model which is used
                  to compare with this pipeline results.
                type: string
              capacity:
                description: Capacity stage for capacity
                properties:
                  enabled:
                    default: false
                    description: Enabled indicates that the stage is enabled
                    type: boolean
                  resources:
                    description: Resource define the hardware resources req.
                    properties:
                      cpuImage:
                        description: Reference to the managed CPU trainer image, used
                          internally
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                      custom:
                        default: false
                        description: If true, ignore the workload class name.
                        type: boolean
                      gpuImage:
                        description: Reference to the managed GPU trainer image, used
                          internally
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                      requirements:
                        description: The custom resource requirements for the workload,
                          which are used if `WorkloadName` is not set
                        properties:
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                      workloadName:
                        description: If this resource is based on the workload, this
                          field contain the name of the workload. The name of a WorkloadClass.
                          The system will use the resource requirements described
                          by the WorkloadClass
                        type: string
                    type: object
                  servingSiteName:
                    description: ServingSiteName is the serving site for the testing
                      during the capacity stage If the serving site is empty or null,
                      the system will skip the capacity stage unit tests.
                    type: string
                  validations:
                    description: Validations is the specification of tests to run
                      in this stage
                    items:
                      description: ModelValidation defines a single validation to
                        be run against a model
                      properties:
                        agg:
                          description: Agg specifies the type of aggregate when measuring
                            aggregate performance (e.g. median, average)
                          enum:
                          - min
                          - max
                          - avg
                          - median
                          type: string
                        column:
                          type: string
                        datasetName:
                          description: The name of a labeled dataset used to test
                            the model, when measuring a performance metric
                          type: string
                        driftFreq:
                          description: / The Horizon unit
                          enum:
                          - second
                          - minute
                          - hour
                          - day
                          - week
                          - month
                          - quarter
                          - year
                          type: string
                        driftInterval:
                          format: int32
                          type: integer
                        max:
                          type: number
                        maxPercent:
                          type: number
                        metric:
                          enum:
                          - accuracy
                          - average-precision
                          - balanced-accuracy
                          - pr-auc
                          - pr-auc-micro
                          - pr-auc-macro
                          - pr-auc-weighted
                          - f1
                          - f1-micro
                          - f1-macro
                          - f1-weighted
                          - f1-samples
                          - precision
                          - precision-micro
                          - precision-macro
                          - precision-weighted
                          - precision-samples
                          - recall
                          - recall-macro
                          - recall-micro
                          - recall-weighted
                          - recall-samples
                          - log-loss
                          - auc
                          - auc-micro
                          - auc-macro
                          - auc-weighted
                          - zero-one
                          - hamming-loss
                          - hinge-loss
                          - jacquard-loss
                          - mcc
                          - fp
                          - fn
                          - tn
                          - tp
                          - tpr
                          - fpr
                          - tnr
                          - matthews-corr-coef
                          - explained-variance
                          - max-error
                          - mae
                          - mse
                          - msle
                          - rmse
                          - rmsle
                          - median-absolute-error
                          - r2
                          - adj-r2
                          - mean_poisson_deviance
                          - mean-gamma-deviance
                          - mean-tweedie-deviance
                          - mape
                          - maze
                          - mdape
                          - smape
                          - adjusted-mutual-info-score
                          - adjusted-rand-score
                          - completeness-score
                          - fowlkes-mallows-score
                          - homogeneity-score
                          - mutual-info-score
                          - normalized-mutual-info-score
                          - v-measure-score
                          - p50-latency
                          - p95-latency
                          - p99-latency
                          - cpu
                          - gpu
                          - mem
                          - gpu-mem
                          - req-per-sec
                          - uncertain-prediction-percent
                          - none
                          type: string
                        min:
                          type: number
                        minPercent:
                          type: number
                        prevModel:
                          description: PrevModel specifies a previous model to compare
                            against
                          type: string
                        type:
                          description: The type of model validation
                          type: string
                      type: object
                    type: array
                type: object
              data:
                description: Datastage build new dataset from the data sources.
                properties:
                  dataPipelineName:
                    description: If not null, run the data pipeline and create a dataset.
                      else, use the data in the data location
                    type: string
                  dockerImage:
                    description: If Not null, run a docker image is used in order
                      to generate the data. The data must reside in location after
                      the container run Not supported in first release.
                    type: string
                  enabled:
                    default: true
                    description: Enabled indicates that the stage is enabled
                    type: boolean
                  labName:
                    description: LabName is the lab that execute processing of the
                      data pipeline
                    type: string
                type: object
              datasetSelector:
                additionalProperties:
                  type: string
                description: DatasetSelector is used to select dataset for training
                type: object
              deployment:
                description: Deployment stage define how to place the model into production.
                properties:
                  enabled:
                    default: true
                    description: Enabled indicates that we want to release the model
                      into production
                    type: boolean
                  manualApproval:
                    default: true
                    description: ManualApproval dentoes if we need manual approval
                      before advancing from deployed to released By default a user
                      is needed to approve the release to production
                    type: boolean
                  resources:
                    description: Resource define the hardware resources req.
                    properties:
                      cpuImage:
                        description: Reference to the managed CPU trainer image, used
                          internally
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                      custom:
                        default: false
                        description: If true, ignore the workload class name.
                        type: boolean
                      gpuImage:
                        description: Reference to the managed GPU trainer image, used
                          internally
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                      requirements:
                        description: The custom resource requirements for the workload,
                          which are used if `WorkloadName` is not set
                        properties:
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                      workloadName:
                        description: If this resource is based on the workload, this
                          field contain the name of the workload. The name of a WorkloadClass.
                          The system will use the resource requirements described
                          by the WorkloadClass
                        type: string
                    type: object
                  servingSiteName:
                    description: ServingSiteName is the serving site for the release,
                      if empty, the system will use the default serving site name
                    type: string
                  validations:
                    description: Validations is the specification of tests to run
                      in this stage
                    items:
                      description: ModelValidation defines a single validation to
                        be run against a model
                      properties:
                        agg:
                          description: Agg specifies the type of aggregate when measuring
                            aggregate performance (e.g. median, average)
                          enum:
                          - min
                          - max
                          - avg
                          - median
                          type: string
                        column:
                          type: string
                        datasetName:
                          description: The name of a labeled dataset used to test
                            the model, when measuring a performance metric
                          type: string
                        driftFreq:
                          description: / The Horizon unit
                          enum:
                          - second
                          - minute
                          - hour
                          - day
                          - week
                          - month
                          - quarter
                          - year
                          type: string
                        driftInterval:
                          format: int32
                          type: integer
                        max:
                          type: number
                        maxPercent:
                          type: number
                        metric:
                          enum:
                          - accuracy
                          - average-precision
                          - balanced-accuracy
                          - pr-auc
                          - pr-auc-micro
                          - pr-auc-macro
                          - pr-auc-weighted
                          - f1
                          - f1-micro
                          - f1-macro
                          - f1-weighted
                          - f1-samples
                          - precision
                          - precision-micro
                          - precision-macro
                          - precision-weighted
                          - precision-samples
                          - recall
                          - recall-macro
                          - recall-micro
                          - recall-weighted
                          - recall-samples
                          - log-loss
                          - auc
                          - auc-micro
                          - auc-macro
                          - auc-weighted
                          - zero-one
                          - hamming-loss
                          - hinge-loss
                          - jacquard-loss
                          - mcc
                          - fp
                          - fn
                          - tn
                          - tp
                          - tpr
                          - fpr
                          - tnr
                          - matthews-corr-coef
                          - explained-variance
                          - max-error
                          - mae
                          - mse
                          - msle
                          - rmse
                          - rmsle
                          - median-absolute-error
                          - r2
                          - adj-r2
                          - mean_poisson_deviance
                          - mean-gamma-deviance
                          - mean-tweedie-deviance
                          - mape
                          - maze
                          - mdape
                          - smape
                          - adjusted-mutual-info-score
                          - adjusted-rand-score
                          - completeness-score
                          - fowlkes-mallows-score
                          - homogeneity-score
                          - mutual-info-score
                          - normalized-mutual-info-score
                          - v-measure-score
                          - p50-latency
                          - p95-latency
                          - p99-latency
                          - cpu
                          - gpu
                          - mem
                          - gpu-mem
                          - req-per-sec
                          - uncertain-prediction-percent
                          - none
                          type: string
                        min:
                          type: number
                        minPercent:
                          type: number
                        prevModel:
                          description: PrevModel specifies a previous model to compare
                            against
                          type: string
                        type:
                          description: The type of model validation
                          type: string
                      type: object
                    type: array
                type: object
              description:
                description: User provided description
                type: string
              notification:
                description: Notification specification.
                properties:
                  errorTTL:
                    default: 3600
                    description: Time-to-live for error messages, in seconds
                    format: int32
                    type: integer
                  notifierName:
                    default: ""
                    description: The name of the Notifier which exists in the same
                      tenant as the resource specifying the NotificationSpec
                    type: string
                  selector:
                    additionalProperties:
                      type: string
                    description: The labels which will be searched for in all Notifiers
                      to determine the target Notifiers
                    type: object
                  successTTL:
                    default: 3600
                    description: Time-to-live for success messages. In seconds
                    format: int32
                    type: integer
                type: object
              owner:
                default: no-one
                description: The owner of the run, set to the owner of the pipeline
                pattern: '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'
                type: string
              paused:
                default: false
                description: Pause the pipeline cron job.
                type: boolean
              priority:
                default: medium
                description: The priority of this pipeline. The default is medium.
                enum:
                - low
                - medium
                - high
                - urgent
                type: string
              release:
                description: Deployment stage define how to place the model into production.
                properties:
                  enabled:
                    default: true
                    description: Enabled indicates that we want to release the model
                      into production
                    type: boolean
                  manualApproval:
                    default: true
                    description: ManualApproval dentoes if we need manual approval
                      before advancing from deployed to released By default a user
                      is needed to approve the release to production
                    type: boolean
                  predictorName:
                    description: PredictorName is the release predictor. The predictor
                      will be created if it does not exist.
                    type: string
                  resources:
                    description: Resource define the hardware resources req.
                    properties:
                      cpuImage:
                        description: Reference to the managed CPU trainer image, used
                          internally
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                      custom:
                        default: false
                        description: If true, ignore the workload class name.
                        type: boolean
                      gpuImage:
                        description: Reference to the managed GPU trainer image, used
                          internally
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                      requirements:
                        description: The custom resource requirements for the workload,
                          which are used if `WorkloadName` is not set
                        properties:
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                      workloadName:
                        description: If this resource is based on the workload, this
                          field contain the name of the workload. The name of a WorkloadClass.
                          The system will use the resource requirements described
                          by the WorkloadClass
                        type: string
                    type: object
                  servingSiteName:
                    description: ServingSiteName is the serving site for the release,
                      if empty, the system will use the default serving site name
                    type: string
                  template:
                    description: Template defines the default model deployment for
                      this model
                    properties:
                      canary:
                        default: false
                        description: Canary denotes if this deployment is a staged
                          release. A staged release will serve traffic in increments
                        type: boolean
                      canaryMetrics:
                        description: 'If the deployment is canary, the metric define
                          how to evaluate the canary. Default: none'
                        items:
                          description: CanaryMetric is used when testing the canary
                          enum:
                          - cpu
                          - mem
                          - latency
                          - crash
                          type: string
                        type: array
                      deployed:
                        default: false
                        description: A deployed model is a model whose containers
                          are up, but does not serve production traffic
                        type: boolean
                      maxTraffic:
                        description: The maximum percentage of traffic that will be
                          served by the model
                        format: int32
                        maximum: 100
                        minimum: 0
                        type: integer
                      modelName:
                        description: The name of a model, which is fully complete
                          and packaged, that exists in the same DataProduct namespace
                          as the resource which specifies the ModelDeploymentSpec
                        type: string
                      modelVersion:
                        description: The version of the model
                        type: string
                      mountTar:
                        default: true
                        description: MountTar means that we would mount the model
                          tar file. Else we would use baked image.
                        type: boolean
                      released:
                        default: false
                        description: A released model is a model that should serve
                          production traffic
                        type: boolean
                      shadow:
                        default: false
                        description: Shadow denotes if the model is running in shadow
                          mode. A shadow model face the production traffic, however,
                          the predictions are not served back to the client
                        type: boolean
                      traffic:
                        description: The minimum percentage of traffic that will be
                          served by the model
                        format: int32
                        maximum: 100
                        minimum: 0
                        type: integer
                      trafficSelector:
                        description: TrafficSelector is a filter on the traffic to
                          this model
                        type: string
                    type: object
                  validations:
                    description: Validations is the List of expectation run against
                      the deployed model before moving production traffic to the model
                    items:
                      description: ModelValidation defines a single validation to
                        be run against a model
                      properties:
                        agg:
                          description: Agg specifies the type of aggregate when measuring
                            aggregate performance (e.g. median, average)
                          enum:
                          - min
                          - max
                          - avg
                          - median
                          type: string
                        column:
                          type: string
                        datasetName:
                          description: The name of a labeled dataset used to test
                            the model, when measuring a performance metric
                          type: string
                        driftFreq:
                          description: / The Horizon unit
                          enum:
                          - second
                          - minute
                          - hour
                          - day
                          - week
                          - month
                          - quarter
                          - year
                          type: string
                        driftInterval:
                          format: int32
                          type: integer
                        max:
                          type: number
                        maxPercent:
                          type: number
                        metric:
                          enum:
                          - accuracy
                          - average-precision
                          - balanced-accuracy
                          - pr-auc
                          - pr-auc-micro
                          - pr-auc-macro
                          - pr-auc-weighted
                          - f1
                          - f1-micro
                          - f1-macro
                          - f1-weighted
                          - f1-samples
                          - precision
                          - precision-micro
                          - precision-macro
                          - precision-weighted
                          - precision-samples
                          - recall
                          - recall-macro
                          - recall-micro
                          - recall-weighted
                          - recall-samples
                          - log-loss
                          - auc
                          - auc-micro
                          - auc-macro
                          - auc-weighted
                          - zero-one
                          - hamming-loss
                          - hinge-loss
                          - jacquard-loss
                          - mcc
                          - fp
                          - fn
                          - tn
                          - tp
                          - tpr
                          - fpr
                          - tnr
                          - matthews-corr-coef
                          - explained-variance
                          - max-error
                          - mae
                          - mse
                          - msle
                          - rmse
                          - rmsle
                          - median-absolute-error
                          - r2
                          - adj-r2
                          - mean_poisson_deviance
                          - mean-gamma-deviance
                          - mean-tweedie-deviance
                          - mape
                          - maze
                          - mdape
                          - smape
                          - adjusted-mutual-info-score
                          - adjusted-rand-score
                          - completeness-score
                          - fowlkes-mallows-score
                          - homogeneity-score
                          - mutual-info-score
                          - normalized-mutual-info-score
                          - v-measure-score
                          - p50-latency
                          - p95-latency
                          - p99-latency
                          - cpu
                          - gpu
                          - mem
                          - gpu-mem
                          - req-per-sec
                          - uncertain-prediction-percent
                          - none
                          type: string
                        min:
                          type: number
                        minPercent:
                          type: number
                        prevModel:
                          description: PrevModel specifies a previous model to compare
                            against
                          type: string
                        type:
                          description: The type of model validation
                          type: string
                      type: object
                    type: array
                type: object
              schedule:
                description: Schedule for running the pipeline
                properties:
                  cron:
                    description: The cron string of the schedule. See https://docs.oracle.com/cd/E12058_01/doc/doc.1014/e12030/cron_expressions.htm
                      for more information
                    type: string
                  enabled:
                    default: false
                    description: Indicates if the schedule is enabled and the Jobs
                      associated it will be created at the specified time
                    type: boolean
                  endTime:
                    description: The time of the day when the schedule is expected
                      to conclude
                    format: date-time
                    type: string
                  startTime:
                    description: The time of the day when the schedule will be executed
                    format: date-time
                    type: string
                  type:
                    description: The type of schedule, which can be a frequency interval
                      or a cron expression
                    enum:
                    - now
                    - once
                    - hourly
                    - daily
                    - weekly
                    - monthly
                    - yearly
                    - cron
                    type: string
                type: object
              training:
                description: TrainingSpec stage
                properties:
                  enabled:
                    default: true
                    description: Enabled indicates that the stage is enabled
                    type: boolean
                  labName:
                    description: LabName is the name of the lab used for training.
                      If empty, the system will use the default lab assigned to the
                      data product
                    type: string
                  notebookName:
                    description: NotebookName specify the notebook to run before training.
                    type: string
                  studyTemplateName:
                    description: StudyName is the name of a study template. The actual
                      study will clone the study template and will use the dataset
                      created in the data stage.
                    type: string
                  validations:
                    description: Validations defines the machine learning test cases
                      to run against the new trained model.
                    items:
                      description: ModelValidation defines a single validation to
                        be run against a model
                      properties:
                        agg:
                          description: Agg specifies the type of aggregate when measuring
                            aggregate performance (e.g. median, average)
                          enum:
                          - min
                          - max
                          - avg
                          - median
                          type: string
                        column:
                          type: string
                        datasetName:
                          description: The name of a labeled dataset used to test
                            the model, when measuring a performance metric
                          type: string
                        driftFreq:
                          description: / The Horizon unit
                          enum:
                          - second
                          - minute
                          - hour
                          - day
                          - week
                          - month
                          - quarter
                          - year
                          type: string
                        driftInterval:
                          format: int32
                          type: integer
                        max:
                          type: number
                        maxPercent:
                          type: number
                        metric:
                          enum:
                          - accuracy
                          - average-precision
                          - balanced-accuracy
                          - pr-auc
                          - pr-auc-micro
                          - pr-auc-macro
                          - pr-auc-weighted
                          - f1
                          - f1-micro
                          - f1-macro
                          - f1-weighted
                          - f1-samples
                          - precision
                          - precision-micro
                          - precision-macro
                          - precision-weighted
                          - precision-samples
                          - recall
                          - recall-macro
                          - recall-micro
                          - recall-weighted
                          - recall-samples
                          - log-loss
                          - auc
                          - auc-micro
                          - auc-macro
                          - auc-weighted
                          - zero-one
                          - hamming-loss
                          - hinge-loss
                          - jacquard-loss
                          - mcc
                          - fp
                          - fn
                          - tn
                          - tp
                          - tpr
                          - fpr
                          - tnr
                          - matthews-corr-coef
                          - explained-variance
                          - max-error
                          - mae
                          - mse
                          - msle
                          - rmse
                          - rmsle
                          - median-absolute-error
                          - r2
                          - adj-r2
                          - mean_poisson_deviance
                          - mean-gamma-deviance
                          - mean-tweedie-deviance
                          - mape
                          - maze
                          - mdape
                          - smape
                          - adjusted-mutual-info-score
                          - adjusted-rand-score
                          - completeness-score
                          - fowlkes-mallows-score
                          - homogeneity-score
                          - mutual-info-score
                          - normalized-mutual-info-score
                          - v-measure-score
                          - p50-latency
                          - p95-latency
                          - p99-latency
                          - cpu
                          - gpu
                          - mem
                          - gpu-mem
                          - req-per-sec
                          - uncertain-prediction-percent
                          - none
                          type: string
                        min:
                          type: number
                        minPercent:
                          type: number
                        prevModel:
                          description: PrevModel specifies a previous model to compare
                            against
                          type: string
                        type:
                          description: The type of model validation
                          type: string
                      type: object
                    type: array
                type: object
              uat:
                description: Acceptance stage is used for further testing
                properties:
                  enabled:
                    default: false
                    description: Enabled indicates that the stage is enabled
                    type: boolean
                  resources:
                    description: Resource define the hardware resources req.
                    properties:
                      cpuImage:
                        description: Reference to the managed CPU trainer image, used
                          internally
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                      custom:
                        default: false
                        description: If true, ignore the workload class name.
                        type: boolean
                      gpuImage:
                        description: Reference to the managed GPU trainer image, used
                          internally
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                      requirements:
                        description: The custom resource requirements for the workload,
                          which are used if `WorkloadName` is not set
                        properties:
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                      workloadName:
                        description: If this resource is based on the workload, this
                          field contain the name of the workload. The name of a WorkloadClass.
                          The system will use the resource requirements described
                          by the WorkloadClass
                        type: string
                    type: object
                  servingSiteName:
                    description: The serving site (name space) used for running the
                      uat tests. If the serving site is empty, the system will skip
                      the uat stage
                    type: string
                  validations:
                    description: Validations defines the machine learning test cases
                      to run against the new trained model.
                    items:
                      description: ModelValidation defines a single validation to
                        be run against a model
                      properties:
                        agg:
                          description: Agg specifies the type of aggregate when measuring
                            aggregate performance (e.g. median, average)
                          enum:
                          - min
                          - max
                          - avg
                          - median
                          type: string
                        column:
                          type: string
                        datasetName:
                          description: The name of a labeled dataset used to test
                            the model, when measuring a performance metric
                          type: string
                        driftFreq:
                          description: / The Horizon unit
                          enum:
                          - second
                          - minute
                          - hour
                          - day
                          - week
                          - month
                          - quarter
                          - year
                          type: string
                        driftInterval:
                          format: int32
                          type: integer
                        max:
                          type: number
                        maxPercent:
                          type: number
                        metric:
                          enum:
                          - accuracy
                          - average-precision
                          - balanced-accuracy
                          - pr-auc
                          - pr-auc-micro
                          - pr-auc-macro
                          - pr-auc-weighted
                          - f1
                          - f1-micro
                          - f1-macro
                          - f1-weighted
                          - f1-samples
                          - precision
                          - precision-micro
                          - precision-macro
                          - precision-weighted
                          - precision-samples
                          - recall
                          - recall-macro
                          - recall-micro
                          - recall-weighted
                          - recall-samples
                          - log-loss
                          - auc
                          - auc-micro
                          - auc-macro
                          - auc-weighted
                          - zero-one
                          - hamming-loss
                          - hinge-loss
                          - jacquard-loss
                          - mcc
                          - fp
                          - fn
                          - tn
                          - tp
                          - tpr
                          - fpr
                          - tnr
                          - matthews-corr-coef
                          - explained-variance
                          - max-error
                          - mae
                          - mse
                          - msle
                          - rmse
                          - rmsle
                          - median-absolute-error
                          - r2
                          - adj-r2
                          - mean_poisson_deviance
                          - mean-gamma-deviance
                          - mean-tweedie-deviance
                          - mape
                          - maze
                          - mdape
                          - smape
                          - adjusted-mutual-info-score
                          - adjusted-rand-score
                          - completeness-score
                          - fowlkes-mallows-score
                          - homogeneity-score
                          - mutual-info-score
                          - normalized-mutual-info-score
                          - v-measure-score
                          - p50-latency
                          - p95-latency
                          - p99-latency
                          - cpu
                          - gpu
                          - mem
                          - gpu-mem
                          - req-per-sec
                          - uncertain-prediction-percent
                          - none
                          type: string
                        min:
                          type: number
                        minPercent:
                          type: number
                        prevModel:
                          description: PrevModel specifies a previous model to compare
                            against
                          type: string
                        type:
                          description: The type of model validation
                          type: string
                      type: object
                    type: array
                type: object
              versionName:
                description: The product version of the resource
                type: string
            type: object
          status:
            description: ModelPipelineStatus define the observed state of the pipeline
            properties:
              conditions:
                items:
                  description: ModelPipelineCondition describes the state of a pipeline
                    at a certain point.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of account condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              failureMessage:
                description: Update in case of terminal failure message
                type: string
              failureReason:
                description: Update in case of terminal failure Borrowed from cluster
                  api controller
                type: string
              lastRun:
                description: Last run is the last time a model pipeline run was created
                properties:
                  completionTime:
                    description: The time at which the run concluded
                    format: date-time
                    type: string
                  duration:
                    description: The duration of the run in seconds
                    format: int32
                    type: integer
                  failureMessage:
                    description: In the case of failure, the resource controller which
                      created the run will set this field with a failure message
                    type: string
                  failureReason:
                    description: In the case of failure, the resource controller which
                      created the run will set this field with a failure reason
                    type: string
                  name:
                    description: The name of the run
                    type: string
                  status:
                    description: The status of the last run
                    type: string
                type: object
              lastUpdated:
                description: Last time the object was updated
                format: date-time
                type: string
              nextRun:
                description: The time of the next schedule run
                format: date-time
                type: string
              observedGeneration:
                description: ObservedGeneration is the Last generation that was acted
                  on
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
