---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: dataapps.inference.modela.ai
spec:
  group: inference.modela.ai
  names:
    categories:
    - data
    - modela
    kind: DataApp
    listKind: DataAppList
    plural: dataapps
    singular: dataapp
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - jsonPath: .spec.owner
      name: Owner
      type: string
    - jsonPath: .spec.versionName
      name: Version
      type: string
    - jsonPath: .spec.path
      name: Path
      type: string
    - jsonPath: .spec.modelName
      name: Model
      type: string
    - jsonPath: .spec.replicas
      name: Replicas
      type: string
    - jsonPath: .spec.port
      name: Port
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DataApp represents a live dashboard for a single model
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DataAppSpec defines the desired state of a DataApp
            properties:
              accessType:
                default: cluster-ip
                description: The Kubernetes-native access method which specifies how
                  the Kubernetes Service created by the DataApp will be exposed. See
                  https://modela.ai/docs/docs/serving/production/#access-method for
                  a detailed description of each access type (defaults to cluster-ip)
                enum:
                - cluster-ip
                - node-port
                - load-balancer
                - ingress
                - mesh
                - none
                type: string
              custom:
                description: The specification to create a custom data application
                  (currently unimplemented)
                properties:
                  owner:
                    default: false
                    description: Indicates if custom pages are enabled
                    type: boolean
                  pages:
                    description: The app pages
                    items:
                      properties:
                        rows:
                          items:
                            properties:
                              cols:
                                items:
                                  description: The spec for a column in the row. A
                                    column can span multiple grid based columns
                                  properties:
                                    barChart:
                                      description: Bar Chart
                                      properties:
                                        datasetName:
                                          description: Dataset is the name of the
                                            dataset
                                          type: string
                                        legend:
                                          description: Show borther
                                          type: boolean
                                        sort:
                                          description: Show borther
                                          type: boolean
                                        x:
                                          description: name of the X column
                                          type: string
                                        "y":
                                          description: Y column
                                          type: string
                                      type: object
                                    footer:
                                      type: string
                                    gauge:
                                      properties:
                                        column:
                                          description: Column is the name of the column
                                          type: string
                                        datasetName:
                                          description: Dataset is the name of the
                                            dataset
                                          type: string
                                        row:
                                          description: Row is the row number
                                          format: int32
                                          type: integer
                                        scalar:
                                          description: Scalar the a const value
                                          type: string
                                      type: object
                                    histogram:
                                      properties:
                                        bins:
                                          description: Show borther
                                          format: int32
                                          type: integer
                                        datasetName:
                                          description: Dataset is the name of the
                                            dataset
                                          type: string
                                        x:
                                          description: name of the X column
                                          type: string
                                      type: object
                                    lineChart:
                                      properties:
                                        datasetName:
                                          description: Dataset is the name of the
                                            dataset
                                          type: string
                                        legend:
                                          description: Show borther
                                          type: boolean
                                        x:
                                          description: name of the X column
                                          type: string
                                        "y":
                                          description: Y column
                                          type: string
                                      type: object
                                    metric:
                                      properties:
                                        column:
                                          description: Column is the name of the column
                                          type: string
                                        datasetName:
                                          description: Dataset is the name of the
                                            dataset
                                          type: string
                                        row:
                                          description: Row is the row number
                                          format: int32
                                          type: integer
                                        scalar:
                                          description: Scalar the a const value
                                          type: string
                                      type: object
                                    scatterPlot:
                                      properties:
                                        datasetName:
                                          description: Dataset is the name of the
                                            dataset
                                          type: string
                                        x:
                                          description: name of the X column
                                          type: string
                                        "y":
                                          description: name of the Y axis columns
                                          type: string
                                      type: object
                                    spacer:
                                      default: false
                                      description: If true this column is an empty
                                        spacer
                                      type: boolean
                                    subtitle:
                                      type: string
                                    table:
                                      properties:
                                        border:
                                          default: false
                                          description: Show borther
                                          type: boolean
                                        columns:
                                          description: List of table columns, if empty
                                            use call the columns
                                          items:
                                            type: string
                                          type: array
                                        datasetName:
                                          description: Dataset is the name of the
                                            dataset
                                          type: string
                                        filters:
                                          description: one or more filters
                                          items:
                                            type: string
                                          type: array
                                        groupby:
                                          description: Groupby columns
                                          items:
                                            type: string
                                          type: array
                                        rows:
                                          description: Row is the row number
                                          format: int32
                                          type: integer
                                        showIndex:
                                          default: false
                                          description: Show index column
                                          type: boolean
                                      type: object
                                    title:
                                      type: string
                                    width:
                                      description: The width in columns, each row
                                        is divided into 12 columns
                                      format: int32
                                      type: integer
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  title:
                    default: ""
                    description: The app title
                    type: string
                type: object
              description:
                default: ""
                description: The user-provided description of the DataApp
                type: string
              modelName:
                default: ""
                description: The name of the predictive app model. The model will
                  be used
                type: string
              nodePort:
                description: The port number that will be exposed on the external
                  address of every node on the cluster, in the case of the DataApps's
                  access type being NodePort. Traffic from the port will be served
                  the DataApp's web application
                format: int32
                maximum: 65535
                minimum: 1
                type: integer
              owner:
                default: no-one
                description: The name of the Account which created the object, which
                  exists in the same tenant as the object
                type: string
              path:
                default: ""
                description: The URL where the DataApp web application can be accessed.
                  If the access type is ClusterIP, it will be a cluster-internal DNS
                  name (i.e. data-app.default-serving-site.svc.cluster.local). In
                  the case of the Ingress access type, the URL will be given its own
                  path based on the FQDN of the host ServingSite (i.e. apps.default-serving-site.modela.ai/data-app).
                type: string
              port:
                default: 3000
                description: The port number that will be exposed on the DataApp's
                  Pods to serve the web-based dashboard application. The Kubernetes
                  Service created by the DataApp will expose the port and forward
                  HTTP traffic to the backend pods
                format: int32
                maximum: 65535
                minimum: 1
                type: integer
              productRef:
                description: The reference to the DataProduct that the resource exists
                  under
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
              replicas:
                default: 1
                description: The number of replicas for the Kubernetes Deployment
                  associated with the DataApp, which will instantiate multiple copies
                  of the service in the case that automatic scaling is disabled
                format: int32
                type: integer
              resources:
                description: Resources specifies the resource requirements allocated
                  to the DataApp's web server
                properties:
                  cpuImage:
                    description: Reference to the managed CPU trainer image, used
                      internally
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                  custom:
                    default: false
                    description: If true, ignore the workload class name.
                    type: boolean
                  gpuImage:
                    description: Reference to the managed GPU trainer image, used
                      internally
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                  requirements:
                    description: The custom resource requirements for the workload,
                      which are used if `WorkloadName` is not set
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  workloadName:
                    default: general-large
                    description: If this resource is based on the workload, this field
                      contain the name of the workload. The name of a WorkloadClass.
                      The system will use the resource requirements described by the
                      WorkloadClass
                    type: string
                type: object
              servingsiteRef:
                description: The reference to the ServingSite resource that hosts
                  the Predictor
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
              versionName:
                default: ""
                description: The name of the DataProductVersion which describes the
                  version of the resource that exists in the same DataProduct namespace
                  as the resource
                type: string
            type: object
          status:
            description: DataAppStatus defines the observed state of DataApp
            properties:
              conditions:
                items:
                  description: DataAppCondition describes the state of a DataApp at
                    a certain point
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown
                      type: string
                    type:
                      description: Type of DataApp condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              deploymentStatus:
                description: The reference to the Kubernetes Deployment associated
                  with the DataApp
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
              failureMessage:
                description: In the case of failure, the DataApp resource controller
                  will set this field with a failure message
                type: string
              failureReason:
                description: In the case of failure, the DataApp resource controller
                  will set this field with a failure reason
                type: string
              lastUpdated:
                description: The last time the object was updated
                format: date-time
                type: string
              observedGeneration:
                description: ObservedGeneration is the last generation that was acted
                  on
                format: int64
                type: integer
              serviceStatus:
                description: The status of the Kubernetes Service associated with
                  the DataApp
                properties:
                  conditions:
                    description: Current service state
                    items:
                      description: "Condition contains details for one aspect of the
                        current state of this API Resource. --- This struct is intended
                        for direct use as an array at the field path .status.conditions.
                        \ For example, type FooStatus struct{ // Represents the observations
                        of a foo's current state. // Known .status.conditions.type
                        are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type
                        // +patchStrategy=merge // +listType=map // +listMapKey=type
                        Conditions []metav1.Condition `json:\"conditions,omitempty\"
                        patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                        \n // other fields }"
                      properties:
                        lastTransitionTime:
                          description: lastTransitionTime is the last time the condition
                            transitioned from one status to another. This should be
                            when the underlying condition changed.  If that is not
                            known, then using the time when the API field changed
                            is acceptable.
                          format: date-time
                          type: string
                        message:
                          description: message is a human readable message indicating
                            details about the transition. This may be an empty string.
                          maxLength: 32768
                          type: string
                        observedGeneration:
                          description: observedGeneration represents the .metadata.generation
                            that the condition was set based upon. For instance, if
                            .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                            is 9, the condition is out of date with respect to the
                            current state of the instance.
                          format: int64
                          minimum: 0
                          type: integer
                        reason:
                          description: reason contains a programmatic identifier indicating
                            the reason for the condition's last transition. Producers
                            of specific condition types may define expected values
                            and meanings for this field, and whether the values are
                            considered a guaranteed API. The value should be a CamelCase
                            string. This field may not be empty.
                          maxLength: 1024
                          minLength: 1
                          pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                          type: string
                        status:
                          description: status of the condition, one of True, False,
                            Unknown.
                          enum:
                          - "True"
                          - "False"
                          - Unknown
                          type: string
                        type:
                          description: type of condition in CamelCase or in foo.example.com/CamelCase.
                            --- Many .condition.type values are consistent across
                            resources like Available, but because arbitrary conditions
                            can be useful (see .node.status.conditions), the ability
                            to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                          maxLength: 316
                          pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                          type: string
                      required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - type
                    x-kubernetes-list-type: map
                  loadBalancer:
                    description: LoadBalancer contains the current status of the load-balancer,
                      if one is present.
                    properties:
                      ingress:
                        description: Ingress is a list containing ingress points for
                          the load-balancer. Traffic intended for the service should
                          be sent to these ingress points.
                        items:
                          description: 'LoadBalancerIngress represents the status
                            of a load-balancer ingress point: traffic intended for
                            the service should be sent to an ingress point.'
                          properties:
                            hostname:
                              description: Hostname is set for load-balancer ingress
                                points that are DNS based (typically AWS load-balancers)
                              type: string
                            ip:
                              description: IP is set for load-balancer ingress points
                                that are IP based (typically GCE or OpenStack load-balancers)
                              type: string
                            ports:
                              description: Ports is a list of records of service ports
                                If used, every port defined in the service should
                                have an entry in it
                              items:
                                properties:
                                  error:
                                    description: 'Error is to record the problem with
                                      the service port The format of the error shall
                                      comply with the following rules: - built-in
                                      error values shall be specified in this file
                                      and those shall use CamelCase names - cloud
                                      provider specific error values must have names
                                      that comply with the format foo.example.com/CamelCase.
                                      --- The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)'
                                    maxLength: 316
                                    pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                    type: string
                                  port:
                                    description: Port is the port number of the service
                                      port of which status is recorded here
                                    format: int32
                                    type: integer
                                  protocol:
                                    default: TCP
                                    description: 'Protocol is the protocol of the
                                      service port of which status is recorded here
                                      The supported values are: "TCP", "UDP", "SCTP"'
                                    type: string
                                required:
                                - port
                                - protocol
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                          type: object
                        type: array
                    type: object
                type: object
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
