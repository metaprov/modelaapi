---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: servingsites.infra.modela.ai
spec:
  group: infra.modela.ai
  names:
    categories:
    - infra
    - modela
    kind: ServingSite
    listKind: ServingSiteList
    plural: servingsites
    singular: servingsite
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - description: owner
      jsonPath: .spec.owner
      name: Owner
      type: string
    - jsonPath: .spec.ingress.fqdn
      name: FQDN
      type: string
    - jsonPath: .status.grpcIngressName
      name: GRPC Ingress
      type: string
    - jsonPath: .status.restIngressName
      name: REST Ingress
      type: string
    - jsonPath: .status.activePredictors
      name: Predictors
      type: number
    - jsonPath: .spec.clusterName
      name: Cluster
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ServingSite represents a namespace where model serving workloads
          are executed under
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ServingSiteSpec defines the desired state of a ServingSite
            properties:
              clusterName:
                default: ""
                description: ClusterName is the name of a VirtualCluster that exists
                  under the same tenant as the object. If specified, workloads executed
                  under the ServingSite will be executed inside the cluster (currently
                  not implemented)
                type: string
              description:
                default: ""
                description: The user-provided description of the object
                type: string
              ingress:
                description: Ingress defines the specification to create Ingress resources
                  that can route traffic to the resources which exist under the ServingSite's
                  namespace
                properties:
                  clusterIssuerName:
                    default: ""
                    description: ClusterIssuerName is a cert manager resource that
                      provide TLS certificate to the ingress.
                    type: string
                  fqdn:
                    default: serving.vcap.me
                    description: FQDN specifies the fully-qualified domain name that
                      the ServingSite's Ingress will use as the base host for the
                      endpoint of services deployed under the ServingSite. For example,
                      setting the FQDN as `model-serving.modela.ai` will automatically
                      serve Predictors using the REST API at `predictors.model-serving.modela.ai`
                    type: string
                  grpc:
                    default: true
                    description: Grpc indicates if the ServingSite will create an
                      Ingress resource to serve GRPC prediction traffic. All Predictor
                      resources created under the ServingSite will receive a unique
                      host in the Ingress determined by the name of the Predictor
                      and the FQDN of the ServingSite (i.e. my-predictor.model-serving.modela.ai)
                    type: boolean
                  ingressClassName:
                    default: nginx
                    description: IngressClassName is the name of the ingress class
                      that will be applied to created Ingress resources (defaults
                      to nginx)
                    type: string
                  rest:
                    default: false
                    description: Rest indicates if the ServingSite will create an
                      Ingress resource to serve REST prediction traffic. All REST
                      traffic will be served under a single host determined by the
                      FQDN of the ServingSite (i.e. predictors.model-serving.modela.ai).
                      RestIngress must be enabled to serve DataApps over Ingress
                    type: boolean
                type: object
              limits:
                description: Limits specifies the hard resource limits that can be
                  allocated for workloads created under the ServingSite
                properties:
                  enabled:
                    default: false
                    description: Indicates if the resource limit is enabled
                    type: boolean
                  limitRange:
                    description: LimitRangeSpec defines a min/max usage limit for
                      resources that match on kind.
                    properties:
                      limits:
                        description: Limits is the list of LimitRangeItem objects
                          that are enforced.
                        items:
                          description: LimitRangeItem defines a min/max usage limit
                            for any resource that matches on kind.
                          properties:
                            default:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: Default resource requirement limit value
                                by resource name if resource limit is omitted.
                              type: object
                            defaultRequest:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: DefaultRequest is the default resource
                                requirement request value by resource name if resource
                                request is omitted.
                              type: object
                            max:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: Max usage constraints on this kind by resource
                                name.
                              type: object
                            maxLimitRequestRatio:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: MaxLimitRequestRatio if specified, the
                                named resource must have a request and limit that
                                are both non-zero where limit divided by request is
                                less than or equal to the enumerated value; this represents
                                the max burst for the named resource.
                              type: object
                            min:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: Min usage constraints on this kind by resource
                                name.
                              type: object
                            type:
                              description: Type of resource that this limit applies
                                to.
                              type: string
                          required:
                          - type
                          type: object
                        type: array
                    required:
                    - limits
                    type: object
                  maxCpu:
                    anyOf:
                    - type: integer
                    - type: string
                    description: The maximum amount of CPU that can be consumed under
                      the namespace
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  maxMem:
                    anyOf:
                    - type: integer
                    - type: string
                    description: The maximum quantity of memory that can be consumed
                      under the namespace
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  maxPods:
                    description: The maximum number of pods that can be created under
                      the namespace
                    format: int32
                    type: integer
                  maxPvc:
                    description: The maximum number of persistent volume claims that
                      can be created under the namespace
                    format: int32
                    type: integer
                  quota:
                    description: QuotaSpec defines the resource quota specification
                      for the namespace
                    properties:
                      hard:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'hard is the set of desired hard limits for each
                          named resource. More info: https://kubernetes.io/docs/concepts/policy/resource-quotas/'
                        type: object
                      scopeSelector:
                        description: scopeSelector is also a collection of filters
                          like scopes that must match each object tracked by a quota
                          but expressed using ScopeSelectorOperator in combination
                          with possible values. For a resource to match, both scopes
                          AND scopeSelector (if specified in spec), must be matched.
                        properties:
                          matchExpressions:
                            description: A list of scope selector requirements by
                              scope of the resources.
                            items:
                              description: A scoped-resource selector requirement
                                is a selector that contains values, a scope name,
                                and an operator that relates the scope name and values.
                              properties:
                                operator:
                                  description: Represents a scope's relationship to
                                    a set of values. Valid operators are In, NotIn,
                                    Exists, DoesNotExist.
                                  type: string
                                scopeName:
                                  description: The name of the scope that the selector
                                    applies to.
                                  type: string
                                values:
                                  description: An array of string values. If the operator
                                    is In or NotIn, the values array must be non-empty.
                                    If the operator is Exists or DoesNotExist, the
                                    values array must be empty. This array is replaced
                                    during a strategic merge patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - operator
                              - scopeName
                              type: object
                            type: array
                        type: object
                      scopes:
                        description: A collection of filters that must match each
                          object tracked by a quota. If not specified, the quota matches
                          all objects.
                        items:
                          description: A ResourceQuotaScope defines a filter that
                            must match each object tracked by a quota
                          type: string
                        type: array
                    type: object
                type: object
              owner:
                default: no-one
                description: The name of the Account which created the object, which
                  exists in the same tenant as the object
                type: string
              tenantRef:
                description: The reference to the tenant which the object exists under
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
            type: object
          status:
            properties:
              activePredictors:
                description: The number of active predictor services
                format: int32
                type: integer
              conditions:
                items:
                  description: ServingSiteCondition describes the state of a servingsite
                    at a certain point.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of  condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              failureMessage:
                description: In the case of failure, the ServingSite resource controller
                  will set this field with a failure message
                type: string
              failureReason:
                description: In the case of failure, the ServingSite resource controller
                  will set this field with a failure reason
                type: string
              grpcIngressName:
                description: GrpcIngressName specifies the name of the Kubernetes
                  Ingress resource which the ServingSite uses to define external access
                  points for resources that accept GRPC-based traffic to their services
                  (i.e. Predictors). This field is set only after one or more resources
                  are created which use the Ingress access method. If there are no
                  Ingress rules to serve then the Ingress will be destroyed
                type: string
              grpcIngressReady:
                description: Store the status of the grpc ingress
                type: boolean
              inactivePredictors:
                description: The number of inactive (non-deployed) predictors
                format: int32
                type: integer
              lastDailyPredictions:
                description: The collection of predictions from the last 7 days
                items:
                  format: int32
                  type: integer
                type: array
              lastUpdated:
                description: The last time the object was updated
                format: date-time
                type: string
              observedGeneration:
                description: ObservedGeneration is the last generation that was acted
                  on
                format: int64
                type: integer
              restIngressName:
                description: RestIngressName specifies the name of the Kubernetes
                  Ingress resource which the ServingSite uses to define external access
                  points for resources that accept HTTP-based traffic to their services
                  (i.e. DataApps). This field is set only after one or more resources
                  are created which use the Ingress access method to serve REST traffic.
                  If there are no Ingress rules to serve then the Ingress will be
                  destroyed
                type: string
              restIngressReady:
                description: Status of rest ingress.
                type: boolean
              totalPredictorAccuracyFailed:
                description: The number of predictors that have detected average inaccurate
                  results
                format: int32
                type: integer
              totalPredictorDataDriftFailed:
                description: The number of predictors that have detected a data drift
                format: int32
                type: integer
              totalPredictorServiceFailed:
                description: The number of predictor services that have failed/errored
                format: int32
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
