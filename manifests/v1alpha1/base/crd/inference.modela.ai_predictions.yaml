---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: predictions.inference.modela.ai
spec:
  group: inference.modela.ai
  names:
    categories:
    - inference
    - modela
    kind: Prediction
    listKind: PredictionList
    plural: predictions
    shortNames:
    - pred
    singular: prediction
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - jsonPath: .spec.predictorRef.Name
      name: Predictor
      type: string
    - jsonPath: .spec.output.bucketName
      name: BucketName
      priority: 1
      type: string
    - jsonPath: .spec.output.path
      name: Key
      priority: 1
      type: string
    - jsonPath: .status.score
      name: Score
      type: string
    - jsonPath: .status.phase
      name: Status
      type: string
    - jsonPath: .status.rows
      name: Rows
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Prediction represents a single batch prediction on a dataset
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PredictionSpec represent the desired state of Prediction
            properties:
              aborted:
                default: false
                description: Indicates if the Prediction was aborted and should stop
                  execution
                type: boolean
              activeDeadlineSeconds:
                default: 600
                description: The deadline for the batch prediction Job to be completed
                  in seconds
                format: int64
                minimum: 0
                type: integer
              createDataset:
                default: false
                description: If true create output dataset
                type: boolean
              dataSourceRef:
                description: A reference to the input data source ref
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              forecast:
                default: false
                description: Indicates if the prediction is a forecast
                type: boolean
              forecastSpec:
                description: The forecasting specification in the case that the predicted
                  model is a hierarchical forecast
                properties:
                  hierarchyValues:
                    additionalProperties:
                      type: string
                    description: The hierarchy specification, which maps columns to
                      values
                    type: object
                  horizon:
                    description: The interval of the forecast
                    properties:
                      interval:
                        description: The period interval
                        enum:
                        - second
                        - minute
                        - hour
                        - day
                        - week
                        - month
                        - quarter
                        - year
                        - multi-year
                        type: string
                      length:
                        description: The window length
                        format: int32
                        type: integer
                      start:
                        default: 0
                        description: The number of intervals to start. If the start
                          is more than 0, there is a gap.
                        format: int32
                        type: integer
                    type: object
                type: object
              input:
                description: Output specifies the location where the predicted dataset
                  will be stored
                properties:
                  format:
                    description: The file format of the input file, if applicable
                    properties:
                      csv:
                        description: The file format for CSV files, if applicable
                        properties:
                          columnDelimiter:
                            default: comma
                            description: The character used to separate fields (by
                              default, a comma)
                            enum:
                            - crlf
                            - cr
                            - lf
                            - semicolon
                            - colon
                            - comma
                            - tab
                            - space
                            - pipe
                            type: string
                          commentChars:
                            default: '#'
                            description: 'The comment character used to split comments
                              off the end of lines (by default, a hashtag #)'
                            type: string
                          compression:
                            default: none
                            description: The compression type, if the file is compressed
                            type: string
                          encoding:
                            default: utf-8
                            description: The unicode encoding of the file (e.g. 'utf-8'
                              for UTF-8 encoded text)
                            enum:
                            - utf-8
                            - latin-1
                            - utf-16
                            type: string
                          escapeChar:
                            default: none
                            description: The character used to escape the delimiter
                            enum:
                            - single-quote
                            - double-quote
                            - tilda
                            - none
                            type: string
                          hasIndexColumn:
                            default: false
                            description: Indicates if the file contains an index column
                            type: boolean
                          header:
                            default: true
                            description: Indicates if a header is present in the file
                            type: boolean
                          maxRows:
                            description: The maximum number of rows to read
                            format: int32
                            minimum: 0
                            type: integer
                          nullValues:
                            default: ""
                            description: NullValues is a sequence of values to replace
                              with NA.
                            type: string
                          quote:
                            default: double-quote
                            description: The charcter used for quotes (by default,
                              a double quote ")
                            enum:
                            - double-quote
                            - single-quote
                            type: string
                          rowDelimiter:
                            default: crlf
                            description: The character used to signal the end of a
                              row (by default, a newline \n)
                            enum:
                            - crlf
                            - cr
                            - lf
                            - semicolon
                            - colon
                            - comma
                            - tab
                            - space
                            - pipe
                            type: string
                          skipRows:
                            default: 0
                            description: The number of rows to skip from the top of
                              the file
                            format: int32
                            minimum: 0
                            type: integer
                          strict:
                            default: true
                            description: Indicates if the read of the CSV file should
                              fail if there are any errors
                            type: boolean
                        type: object
                      excel:
                        description: The file format for Excel files, if applicable
                        properties:
                          columnNameRow:
                            description: The position of the row that contains the
                              column names (i.e. the header)
                            format: int32
                            type: integer
                          data:
                            description: The specification for the bounds of the data
                            properties:
                              entireSheet:
                                default: false
                                description: Indicates if the excel reader should
                                  read the entire sheet; if false, it will read only
                                  within the bounds specified by the `To` and `From`
                                  fields of the ExcelSheetArea
                                type: boolean
                              fromColumn:
                                description: If reading part of the excel sheet, start
                                  with the column in this position
                                format: int32
                                type: integer
                              fromRow:
                                description: If reading part of the excel sheet, start
                                  with the row in this position
                                format: int32
                                type: integer
                              toColumn:
                                description: If reading part of the excel sheet, end
                                  with the column in this position
                                format: int32
                                type: integer
                              toRow:
                                description: If reading part of the excel sheet, end
                                  with the row in this position
                                format: int32
                                type: integer
                            type: object
                          firstSheetWithData:
                            default: false
                            description: Indicates if the excel reader should use
                              the first sheet that contains data
                            type: boolean
                          sheetIndex:
                            description: The index of the sheet in the excel file
                              to read data from
                            format: int32
                            type: integer
                          sheetName:
                            description: The name of the sheet that exists in the
                              excel file to read data from
                            type: string
                        type: object
                      fileType:
                        default: csv
                        description: The file type of incoming data which uses the
                          DataSource (by default, a CSV file)
                        enum:
                        - csv
                        - tsv
                        - excel
                        - fwf
                        - hdf
                        - html
                        - json
                        - pickle
                        - sas
                        - stata
                        - feather
                        - parquet
                        type: string
                      parquet:
                        description: The file format for Parquet files, if applicable
                        properties:
                          engine:
                            default: auto
                            description: The character used to separate fields (by
                              default, a comma)
                            type: string
                        type: object
                    type: object
                  location:
                    description: The physical location of the observation file. the
                      location can point to a database.
                    properties:
                      bucket:
                        default: ""
                        description: In the case of the location type being an object
                          storage system, BucketName is the name of the VirtualBucket
                          resource that exists in the same tenant as the resource
                          specifying the DataLocation. Modela will connect to the
                          external object storage system, and will access the file
                          from the path specified by the Path field
                        type: string
                      connection:
                        default: ""
                        description: In the case of the type of location being a database,
                          ConnectionName specifies the name of the ConnectionName
                          resource that exists in the same tenant as the resource
                          specifying the DataLocation. Modela will attempt to connect
                          to the database using the credentials specified in the ConnectionName,
                          and will execute the query specified by the SQL field
                        type: string
                      database:
                        default: ""
                        description: The name of a database inside the database system
                          specified by the ConnectionName field
                        type: string
                      path:
                        default: ""
                        description: The path to a flat-file inside an object storage
                          system. When using the Modela API to upload files (through
                          the FileService API), Modela will upload the data to a predetermined
                          path based on the Tenant, DataProduct, DataProductVersion,
                          and resource type of the resource in relation to the file
                          being uploaded. The path does not need to adhere to this
                          format; you can give the path to a file inside a bucket
                          not managed by Modela
                        type: string
                      resourceRef:
                        description: In the case of the location type being Dataset
                          or PublicDataset, ResourceRef references another resource
                          that containing data that will be used as a data source
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      sql:
                        default: ""
                        description: The SQL statement which will be executed to query
                          data from the table specified by Table
                        type: string
                      table:
                        default: ""
                        description: The name of a table inside a database, if applicable
                        type: string
                      topic:
                        default: ""
                        description: The name of the streaming topic (currently unsupported)
                        type: string
                      type:
                        default: object
                        description: The type of location where the data resides,
                          which can either be an object inside an object storage system
                          (i.e. Minio), a SQL location like a table or a view, a data
                          stream (i.e. Kafka, currently unsupported), or a web location
                          (currently unsupported)
                        enum:
                        - object
                        - table
                        - view
                        - stream
                        - web
                        - public-dataset
                        - dataset
                        type: string
                      url:
                        default: ""
                        description: In the case of the location type being WebApi,
                          URL specifies the external location (HTTP or Git) that will
                          be queried and then stored as flat-file by the resource
                          which specifies the DataLocation
                        type: string
                    type: object
                  preSQL:
                    description: List of SQL statements to run before performing the
                      prediction
                    items:
                      type: string
                    type: array
                type: object
              labeled:
                default: false
                description: If true, measurements for the metrics specified by the
                  `Tests` field will be computed for each prediction and stored in
                  the Prediction's status with the average result of all predictions
                  Used usually for unit testing
                type: boolean
              modelClassName:
                description: ModelClassName referencesa the name of the Model Class
                  that created the resource, if applicable
                type: string
              output:
                description: Output specifies the location where the predicted dataset
                  will be stored
                properties:
                  action:
                    default: upsert
                    description: The update strategy for the dataset in the case that
                      the output location already exists (i.e a database table) UpsertUpdateStrategy
                      will insert new records and update existing ones; InsertUpdateStrategy
                      will insert new records and not update existing ones; UpdateUpdateStrategy
                      will not insert new records and only update existing ones
                    enum:
                    - upsert
                    - insert
                    - update
                    type: string
                  createTableIfNotExist:
                    description: If true, the database table specified by Location
                      will be created if it does not exist
                    type: boolean
                  datasetName:
                    default: ""
                    description: DatasetName is the name of a new Dataset resource
                      that will be created. If empty, the system will save the dataset
                      to a file
                    type: string
                  detectOutliers:
                    default: false
                    description: If true, an additional column will be added to the
                      dataset which indicates if each predicted row was detected to
                      be an outlier
                    type: boolean
                  format:
                    default: csv
                    description: The format of the dataset, applicable if the output
                      location is a flat-file
                    enum:
                    - csv
                    - tsv
                    - excel
                    - fwf
                    - hdf
                    - html
                    - json
                    - pickle
                    - sas
                    - stata
                    - feather
                    - parquet
                    type: string
                  includeFeatures:
                    default: true
                    description: Indicates if the features (i.e. all the columns)
                      of the input dataset, excluding the feature which was predicted
                      on, will be included in the output dataset
                    type: boolean
                  location:
                    description: The location where the dataset will be stored
                    properties:
                      bucket:
                        default: ""
                        description: In the case of the location type being an object
                          storage system, BucketName is the name of the VirtualBucket
                          resource that exists in the same tenant as the resource
                          specifying the DataLocation. Modela will connect to the
                          external object storage system, and will access the file
                          from the path specified by the Path field
                        type: string
                      connection:
                        default: ""
                        description: In the case of the type of location being a database,
                          ConnectionName specifies the name of the ConnectionName
                          resource that exists in the same tenant as the resource
                          specifying the DataLocation. Modela will attempt to connect
                          to the database using the credentials specified in the ConnectionName,
                          and will execute the query specified by the SQL field
                        type: string
                      database:
                        default: ""
                        description: The name of a database inside the database system
                          specified by the ConnectionName field
                        type: string
                      path:
                        default: ""
                        description: The path to a flat-file inside an object storage
                          system. When using the Modela API to upload files (through
                          the FileService API), Modela will upload the data to a predetermined
                          path based on the Tenant, DataProduct, DataProductVersion,
                          and resource type of the resource in relation to the file
                          being uploaded. The path does not need to adhere to this
                          format; you can give the path to a file inside a bucket
                          not managed by Modela
                        type: string
                      resourceRef:
                        description: In the case of the location type being Dataset
                          or PublicDataset, ResourceRef references another resource
                          that containing data that will be used as a data source
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      sql:
                        default: ""
                        description: The SQL statement which will be executed to query
                          data from the table specified by Table
                        type: string
                      table:
                        default: ""
                        description: The name of a table inside a database, if applicable
                        type: string
                      topic:
                        default: ""
                        description: The name of the streaming topic (currently unsupported)
                        type: string
                      type:
                        default: object
                        description: The type of location where the data resides,
                          which can either be an object inside an object storage system
                          (i.e. Minio), a SQL location like a table or a view, a data
                          stream (i.e. Kafka, currently unsupported), or a web location
                          (currently unsupported)
                        enum:
                        - object
                        - table
                        - view
                        - stream
                        - web
                        - public-dataset
                        - dataset
                        type: string
                      url:
                        default: ""
                        description: In the case of the location type being WebApi,
                          URL specifies the external location (HTTP or Git) that will
                          be queried and then stored as flat-file by the resource
                          which specifies the DataLocation
                        type: string
                    type: object
                  postSQL:
                    description: List of SQL statements to run after the prediction
                      was performed
                    items:
                      type: string
                    type: array
                  xai:
                    default: false
                    description: If true, SHAP values for each predicted row will
                      be included as JSON as an additional column of the dataset
                    type: boolean
                type: object
              owner:
                default: no-one
                description: The name of the Account which created the object, which
                  exists in the same tenant as the object
                type: string
              partitionLocation:
                description: Locations for group forecasts
                properties:
                  groupForecastFile:
                    description: The folder of group data
                    type: string
                type: object
              predictorRef:
                description: PredictorRef is the name of the Predictor resource that
                  will be used to evaluate predictions for the unlabeled input dataset.
                  The Predictor must exist in the same Data Product namespace as the
                  resource
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              priority:
                default: medium
                description: The priority of the Kubernetes Job created by the Prediction
                  (medium, by default)
                enum:
                - low
                - medium
                - high
                - urgent
                type: string
              resources:
                description: Resources specifies the resource requirements that will
                  be allocated to the batch prediction Job
                properties:
                  custom:
                    default: false
                    description: If true, ignore the workload class name.
                    type: boolean
                  requirements:
                    description: The custom resource requirements for the workload,
                      which are used if `WorkloadName` is not set
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  workloadName:
                    default: general-large
                    description: If this resource is based on the workload, this field
                      contain the name of the workload. The name of a WorkloadClass.
                      The system will use the resource requirements described by the
                      WorkloadClass
                    type: string
                type: object
              servingsiteRef:
                description: The reference to the ServingSite resource that hosts
                  the Prediction
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              ttl:
                default: 0
                description: The time-to-live of the Prediction, after which the Prediction
                  will be archived
                format: int32
                type: integer
              unitTests:
                description: Tests specifies a collection of metrics that will be
                  computed for each prediction if the Labeled field of the Prediction
                  is enabled
                properties:
                  baselineModelRef:
                    description: Baseline Model Ref specifies a previous model to
                      compare against
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  datasetRef:
                    description: The name of a labeled dataset used to test the model,
                      when measuring a performance metric
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  unitTests:
                    description: Define the column name for the validation role
                    properties:
                      enabled:
                        description: If false, this test case is disabled
                        type: boolean
                      tests:
                        items:
                          properties:
                            assertThat:
                              description: The assertion type
                              type: string
                            column:
                              description: If unit test is column test, this is the
                                name of the column
                              type: string
                            column2:
                              description: For test that involve two columns (e.g.
                                correlation)
                              type: string
                            columns:
                              description: If unit test is column test, this is the
                                name of the column
                              items:
                                type: string
                              type: array
                            compareToRef:
                              description: Reference to another entity which is a
                                ref.
                              properties:
                                apiVersion:
                                  description: API version of the referent.
                                  type: string
                                fieldPath:
                                  description: 'If referring to a piece of an object
                                    instead of an entire object, this string should
                                    contain a valid JSON/Go field access statement,
                                    such as desiredState.manifest.containers[2]. For
                                    example, if the object reference is to a container
                                    within a pod, this would take on a value like:
                                    "spec.containers{name}" (where "name" refers to
                                    the name of the container that triggered the event)
                                    or if no container name is specified "spec.containers[2]"
                                    (container with index 2 in this pod). This syntax
                                    is chosen only to have some well-defined way of
                                    referencing a part of an object. TODO: this design
                                    is not final and this field is subject to change
                                    in the future.'
                                  type: string
                                kind:
                                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                namespace:
                                  description: 'Namespace of the referent. More info:
                                    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                  type: string
                                resourceVersion:
                                  description: 'Specific resourceVersion to which
                                    this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                  type: string
                                uid:
                                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            dataFilter:
                              description: Sql statement to filter the data for this
                                unit test
                              type: string
                            enabled:
                              description: If false, this test case is disabled
                              type: boolean
                            entityRef:
                              description: Reference to an entity.
                              properties:
                                apiVersion:
                                  description: API version of the referent.
                                  type: string
                                fieldPath:
                                  description: 'If referring to a piece of an object
                                    instead of an entire object, this string should
                                    contain a valid JSON/Go field access statement,
                                    such as desiredState.manifest.containers[2]. For
                                    example, if the object reference is to a container
                                    within a pod, this would take on a value like:
                                    "spec.containers{name}" (where "name" refers to
                                    the name of the container that triggered the event)
                                    or if no container name is specified "spec.containers[2]"
                                    (container with index 2 in this pod). This syntax
                                    is chosen only to have some well-defined way of
                                    referencing a part of an object. TODO: this design
                                    is not final and this field is subject to change
                                    in the future.'
                                  type: string
                                kind:
                                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                namespace:
                                  description: 'Namespace of the referent. More info:
                                    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                  type: string
                                resourceVersion:
                                  description: 'Specific resourceVersion to which
                                    this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                  type: string
                                uid:
                                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            entityRef2:
                              description: Reference to an entity.
                              properties:
                                apiVersion:
                                  description: API version of the referent.
                                  type: string
                                fieldPath:
                                  description: 'If referring to a piece of an object
                                    instead of an entire object, this string should
                                    contain a valid JSON/Go field access statement,
                                    such as desiredState.manifest.containers[2]. For
                                    example, if the object reference is to a container
                                    within a pod, this would take on a value like:
                                    "spec.containers{name}" (where "name" refers to
                                    the name of the container that triggered the event)
                                    or if no container name is specified "spec.containers[2]"
                                    (container with index 2 in this pod). This syntax
                                    is chosen only to have some well-defined way of
                                    referencing a part of an object. TODO: this design
                                    is not final and this field is subject to change
                                    in the future.'
                                  type: string
                                kind:
                                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                namespace:
                                  description: 'Namespace of the referent. More info:
                                    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                  type: string
                                resourceVersion:
                                  description: 'Specific resourceVersion to which
                                    this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                  type: string
                                uid:
                                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            expectedCategory:
                              description: The expected value
                              type: string
                            expectedSet:
                              description: Expected set of values,if the assertion
                              items:
                                type: string
                              type: array
                            expectedValue:
                              description: The expected numerical value
                              type: number
                            featureFilter:
                              description: Filter the filter for this unit test.
                              type: string
                            generated:
                              description: Indicates if this validation rule was automatically
                                generated by the system
                              type: boolean
                            lower:
                              description: For range based tests.
                              format: float
                              type: number
                            lowerInclusive:
                              type: boolean
                            metric:
                              description: The metric that is used for the test
                              type: string
                            name:
                              description: The name of the test case, will be generate
                                if empty by the combination of assertion, entity ref,
                                column name and metric
                              type: string
                            periods:
                              description: The length of the past if we are comparing
                                to moving avg
                              format: int32
                              type: integer
                            referenceType:
                              description: Set the reference type for this unit test
                              type: string
                            tags:
                              description: The test case tags, used for filtering.
                                Optional Test Tags
                              items:
                                type: string
                              type: array
                            type:
                              description: The test type The type of the data test
                              type: string
                            upper:
                              format: float
                              type: number
                            upperInclusive:
                              type: boolean
                          type: object
                        type: array
                    type: object
                type: object
              versionName:
                default: ""
                description: VersionName references the name of a Data Product Version
                  that describes the version of the resource
                type: string
              workers:
                default: 1
                description: In case of batch prediction, how many workers.
                format: int32
                type: integer
            type: object
          status:
            description: PredictionStatus is the observed state of a Prediction
            properties:
              columns:
                description: The histogram values, map from column name to an histogram
                items:
                  properties:
                    drift:
                      description: true if drift was detected for this column
                      type: boolean
                    histogram:
                      description: Measure of drift for a column
                      properties:
                        bins:
                          description: The bins if the histogram describes continous
                            variables
                          items:
                            type: number
                          type: array
                        categories:
                          description: The name of the categories, one per bin if
                            this is a categorical histogram
                          items:
                            type: string
                          type: array
                        counts:
                          description: The set of values per bin
                          items:
                            type: number
                          type: array
                        invalid:
                          description: The number of invalid values
                          format: int32
                          minimum: 0
                          type: integer
                        missing:
                          description: The number of missing values
                          format: int32
                          minimum: 0
                          type: integer
                      type: object
                    metrics:
                      description: Measure of drift for this column
                      items:
                        description: Measurement is a value for a specific metric
                        properties:
                          algorithm:
                            description: The name of the algorithm that generated
                              this measurment
                            type: string
                          boolQty:
                            description: If the metric refer to a bool unit, store
                              the bool value
                            type: boolean
                          category:
                            description: If the metric refer to categorical measure,store
                              the category.
                            type: string
                          column:
                            type: string
                          entity:
                            description: 'ObjectReference contains enough information
                              to let you inspect or modify the referred object. ---
                              New uses of this type are discouraged because of difficulty
                              describing its usage when embedded in APIs. 1. Ignored
                              fields.  It includes many fields which are not generally
                              honored.  For instance, ResourceVersion and FieldPath
                              are both very rarely valid in actual usage. 2. Invalid
                              usage help.  It is impossible to add specific help for
                              individual usage.  In most embedded usages, there are
                              particular restrictions like, "must refer only to types
                              A and B" or "UID not honored" or "name must be restricted".
                              Those cannot be well described when embedded. 3. Inconsistent
                              validation.  Because the usages are different, the validation
                              rules are different by usage, which makes it hard for
                              users to predict what will happen. 4. The fields are
                              both imprecise and overly precise.  Kind is not a precise
                              mapping to a URL. This can produce ambiguity during
                              interpretation and require a REST mapping.  In most
                              cases, the dependency is on the group,resource tuple
                              and the version of the actual struct is irrelevant.
                              5. We cannot easily change it.  Because this type is
                              embedded in many locations, updates to this type will
                              affect numerous schemas.  Don''t make new APIs embed
                              an underspecified API type they do not control. Instead
                              of using this type, create a locally provided and used
                              type that is well-focused on your reference. For example,
                              ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                              .'
                            properties:
                              apiVersion:
                                description: API version of the referent.
                                type: string
                              fieldPath:
                                description: 'If referring to a piece of an object
                                  instead of an entire object, this string should
                                  contain a valid JSON/Go field access statement,
                                  such as desiredState.manifest.containers[2]. For
                                  example, if the object reference is to a container
                                  within a pod, this would take on a value like: "spec.containers{name}"
                                  (where "name" refers to the name of the container
                                  that triggered the event) or if no container name
                                  is specified "spec.containers[2]" (container with
                                  index 2 in this pod). This syntax is chosen only
                                  to have some well-defined way of referencing a part
                                  of an object. TODO: this design is not final and
                                  this field is subject to change in the future.'
                                type: string
                              kind:
                                description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                              namespace:
                                description: 'Namespace of the referent. More info:
                                  https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                type: string
                              resourceVersion:
                                description: 'Specific resourceVersion to which this
                                  reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                type: string
                              uid:
                                description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                          metric:
                            description: The metric type name (e.g. F1 / Accuracy)
                            type: string
                          stddev:
                            description: Metric standard diviation for quantative
                              observations.
                            type: number
                          taskType:
                            description: The measurment task type (e.g. train, test,
                              cv, feature)
                            type: string
                          timePoint:
                            description: The Time when the observation was taken
                            format: date-time
                            type: string
                          value:
                            description: The value of the metric for quantitive observations
                            type: number
                          valueSet:
                            description: Capture a set of values.
                            items:
                              type: string
                            type: array
                        type: object
                      type: array
                    name:
                      description: The name of the column
                      type: string
                  type: object
                type: array
              completedAt:
                description: CompletedAt denotes the time when the batch prediction
                  Job completed or failed
                format: date-time
                type: string
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              datasetRef:
                description: The dataset that was generated.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              drifted:
                description: Set to true if drifted
                type: boolean
              failureMessage:
                description: In the case of failure, the Prediction resource controller
                  will set this field with a failure message
                type: string
              failureReason:
                description: In the case of failure, the Prediction resource controller
                  will set this field with a failure reason
                type: string
              forecast:
                description: the forecast results for this forecast
                properties:
                  failed:
                    description: Mark forecast as a failure.
                    type: boolean
                  failureMessage:
                    description: In case of failure, this is the failure message
                    type: string
                  forecastURI:
                    description: A pointer to the file containing the metadata about
                      the forecasts
                    type: string
                  profileURI:
                    description: The URI of all the porfiles
                    type: string
                  reportURI:
                    description: A pointer to the actual forecast
                    type: string
                  workerResults:
                    description: Holds the worker on going result, when a worker finish,
                      we update the location of thier result files
                    items:
                      properties:
                        error:
                          type: string
                        id:
                          description: Worker ID
                          format: int32
                          type: integer
                        task:
                          type: string
                        uri:
                          description: URI
                          type: string
                      type: object
                    type: array
                type: object
              logs:
                description: The location of logs produced by the batch prediction
                  Job
                properties:
                  bucket:
                    description: The name of the VirtualBucket resource where the
                      logs are stored
                    type: string
                  containers:
                    description: The collection of ContainerLog objects that describe
                      the location of logs per container
                    items:
                      description: ContainerLog describes the location of logs for
                        a single Job
                      properties:
                        container:
                          description: The container name
                          type: string
                        job:
                          description: The name of the Job
                          type: string
                        key:
                          description: The path to the log in the bucket
                          type: string
                      type: object
                    type: array
                type: object
              observedGeneration:
                description: ObservedGeneration is the last generation that was acted
                  on
                format: int64
                type: integer
              phase:
                default: Pending
                description: The current phase of the prediction
                type: string
              rows:
                description: The number of rows predicted
                format: int32
                type: integer
              triggeredBy:
                description: The trigger that started the batch prediction
                enum:
                - on-demand
                - on-schedule
                - on-new-data
                - on-github-event
                - on-concept-drift
                - on-pref-degradation
                type: string
              unitTestsResult:
                description: The collection of metrics that represent the average
                  measurement across all predictions for each metric specified by
                  the Tests field of the Predictor
                properties:
                  completedAt:
                    description: Stop time of running the suite.
                    format: date-time
                    type: string
                  entityRef:
                    description: A reference to the object under test. Best practice
                      is to have one suite for an object
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  errors:
                    description: Total number of assertion errors.
                    format: int32
                    type: integer
                  failures:
                    description: Total number of failures. A failure is an unplanned
                      error, e.g. cannot connect to a dataset
                    format: int32
                    type: integer
                  startedAt:
                    description: Start time of running the suite
                    format: date-time
                    type: string
                  tests:
                    description: The result of executing the test suite. The result
                      contain one result object per test case.
                    items:
                      description: Result for a specific case
                      properties:
                        actual:
                          description: Actual observation
                          properties:
                            algorithm:
                              description: The name of the algorithm that generated
                                this measurment
                              type: string
                            boolQty:
                              description: If the metric refer to a bool unit, store
                                the bool value
                              type: boolean
                            category:
                              description: If the metric refer to categorical measure,store
                                the category.
                              type: string
                            column:
                              type: string
                            entity:
                              description: 'ObjectReference contains enough information
                                to let you inspect or modify the referred object.
                                --- New uses of this type are discouraged because
                                of difficulty describing its usage when embedded in
                                APIs. 1. Ignored fields.  It includes many fields
                                which are not generally honored.  For instance, ResourceVersion
                                and FieldPath are both very rarely valid in actual
                                usage. 2. Invalid usage help.  It is impossible to
                                add specific help for individual usage.  In most embedded
                                usages, there are particular restrictions like, "must
                                refer only to types A and B" or "UID not honored"
                                or "name must be restricted". Those cannot be well
                                described when embedded. 3. Inconsistent validation.  Because
                                the usages are different, the validation rules are
                                different by usage, which makes it hard for users
                                to predict what will happen. 4. The fields are both
                                imprecise and overly precise.  Kind is not a precise
                                mapping to a URL. This can produce ambiguity during
                                interpretation and require a REST mapping.  In most
                                cases, the dependency is on the group,resource tuple
                                and the version of the actual struct is irrelevant.
                                5. We cannot easily change it.  Because this type
                                is embedded in many locations, updates to this type
                                will affect numerous schemas.  Don''t make new APIs
                                embed an underspecified API type they do not control.
                                Instead of using this type, create a locally provided
                                and used type that is well-focused on your reference.
                                For example, ServiceReferences for admission registration:
                                https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                                .'
                              properties:
                                apiVersion:
                                  description: API version of the referent.
                                  type: string
                                fieldPath:
                                  description: 'If referring to a piece of an object
                                    instead of an entire object, this string should
                                    contain a valid JSON/Go field access statement,
                                    such as desiredState.manifest.containers[2]. For
                                    example, if the object reference is to a container
                                    within a pod, this would take on a value like:
                                    "spec.containers{name}" (where "name" refers to
                                    the name of the container that triggered the event)
                                    or if no container name is specified "spec.containers[2]"
                                    (container with index 2 in this pod). This syntax
                                    is chosen only to have some well-defined way of
                                    referencing a part of an object. TODO: this design
                                    is not final and this field is subject to change
                                    in the future.'
                                  type: string
                                kind:
                                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                namespace:
                                  description: 'Namespace of the referent. More info:
                                    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                  type: string
                                resourceVersion:
                                  description: 'Specific resourceVersion to which
                                    this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                  type: string
                                uid:
                                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            metric:
                              description: The metric type name (e.g. F1 / Accuracy)
                              type: string
                            stddev:
                              description: Metric standard diviation for quantative
                                observations.
                              type: number
                            taskType:
                              description: The measurment task type (e.g. train, test,
                                cv, feature)
                              type: string
                            timePoint:
                              description: The Time when the observation was taken
                              format: date-time
                              type: string
                            value:
                              description: The value of the metric for quantitive
                                observations
                              type: number
                            valueSet:
                              description: Capture a set of values.
                              items:
                                type: string
                              type: array
                          type: object
                        error:
                          description: An error occur if the system cannot execute
                            the test case (e.g. connection error).
                          type: boolean
                        failure:
                          description: A failure occur on assertion failure
                          type: boolean
                        failureMsg:
                          description: An optional
                          type: string
                        name:
                          description: The test case name for this result.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                type: object
              updatedAt:
                description: The last time the object was updated
                format: date-time
                type: string
              usage:
                description: The status of the model, when deploying via the stages
                properties:
                  cpu:
                    format: int64
                    type: integer
                  gpu:
                    format: int64
                    type: integer
                  memory:
                    format: int64
                    type: integer
                type: object
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
