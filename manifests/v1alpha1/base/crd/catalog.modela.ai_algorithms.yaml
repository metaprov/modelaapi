---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: algorithms.catalog.modela.ai
spec:
  group: catalog.modela.ai
  names:
    categories:
    - catalog
    - modela
    - all
    kind: Algorithm
    listKind: AlgorithmList
    plural: algorithms
    shortNames:
    - alg
    singular: algorithm
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: ML Framework name
      jsonPath: .spec.frameworkName
      name: Framework
      type: string
    - jsonPath: .spec.url
      name: Docs
      type: string
    - description: ML task name
      jsonPath: .spec.task
      name: Task
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Algorithm define the metadata about a machine learning algorithm.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AlgorithmSpec describes the attributes of an machine learning
              algorithm
            properties:
              description:
                default: ""
                description: Description is the description of the algorithm
                type: string
              frameworkName:
                description: FrameworkName is a reference to library
                type: string
              ranges:
                description: IntegerParameters is the list of integer hyper parameter
                  ranges.
                items:
                  description: Parameter range indicate a single hyper parameter range
                  properties:
                    choices:
                      description: Set of choices for categorical variable
                      items:
                        type: string
                      type: array
                    conditional:
                      description: If true this parameter is condition on another
                        parameter value
                      type: boolean
                    defaultChoice:
                      description: Default Choice for categorical variable.
                      type: string
                    defaultValue:
                      description: DefaultValue is the default value of the parameter
                      type: number
                    high:
                      description: High is the maximum value of the hyper parameter
                        range
                      type: number
                    log:
                      description: If the scale is logaritimic
                      type: boolean
                    low:
                      description: Low is the minimum value of the hyperparameter
                        range
                      type: number
                    name:
                      description: Name is the name of the hyper parameter
                      type: string
                    parent:
                      description: Parent parameter name
                      type: string
                    parentValueCat:
                      description: The parent value in order for this parameter to
                        be active.
                      type: string
                    parentValueFloat:
                      description: The parent value in order for this parameter to
                        be active.
                      type: number
                    parentValueInteger:
                      description: The parent value in order for this parameter to
                        be active.
                      format: int32
                      type: integer
                    step:
                      description: Step for discrete variable.
                      format: int32
                      type: integer
                    type:
                      description: Type is the datatype of the parameter
                      enum:
                      - float
                      - int
                      - categorical
                      type: string
                  type: object
                type: array
              sparse:
                default: false
                description: Sparse indicate if this algorithm can deal with sparse
                  data
                type: boolean
              tasks:
                description: Task is the machine learning task (binary classification
                  / regression)
                items:
                  description: MLTask is the machine learning task name
                  enum:
                  - binary-classification
                  - multi-classification
                  - forecasting
                  - regression
                  - clustering
                  - recommendation
                  - outlier-detection
                  - novelty-detection
                  - auto
                  - unknown
                  - partition-forecasting
                  - monitoring
                  type: string
                type: array
              url:
                default: ""
                description: URL is a url to the html page describing the algorithm
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources: {}
