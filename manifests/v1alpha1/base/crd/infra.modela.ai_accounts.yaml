---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: accounts.infra.modela.ai
spec:
  group: infra.modela.ai
  names:
    categories:
    - infra
    - modela
    kind: Account
    listKind: AccountList
    plural: accounts
    shortNames:
    - acct
    singular: account
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - jsonPath: .spec.type
      name: Type
      type: string
    - jsonPath: .spec.username
      name: Username
      type: string
    - jsonPath: .spec.memberOf
      name: Team
      type: string
    - jsonPath: .spec.phone
      name: Phone
      priority: 1
      type: string
    - jsonPath: .spec.email
      name: Email
      priority: 1
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Account represents a single user on the system or a team that
          other Accounts can be grouped under
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AccountSpec defines the desired state of an Account
            properties:
              admin:
                default: false
                description: Indicates if the Account has admin permissions. Admin
                  accounts have unrestricted access to all resources and full control
                  to modify and create other Accounts
                type: boolean
              avatar:
                description: Avatar specifies the location of the Account's avatar
                  image
                properties:
                  bucketName:
                    type: string
                  path:
                    type: string
                type: object
              email:
                default: ""
                description: The e-mail address of the person using the Account
                maxLength: 64
                type: string
              favoriteProducts:
                description: The collection of DataProduct names that will be displayed
                  with priority on the tenant dashboard for the Account
                items:
                  type: string
                type: array
              firstName:
                default: ""
                description: The first name of the person using the Account
                maxLength: 64
                type: string
              lastName:
                default: ""
                description: The last name of the person using the Account
                maxLength: 64
                type: string
              memberOf:
                default: ""
                description: MemberOf specifies the name of the team that the Account
                  belongs to. The Account will assume all the permissions of the parent
                  Account
                type: string
              phone:
                default: ""
                description: The phone number of the person using the Account
                maxLength: 64
                type: string
              resetPassword:
                default: false
                description: Indicates if the Account will be prompted to reset their
                  password upon login
                type: boolean
              tenantRef:
                description: The reference to the tenant which the object exists under
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              type:
                default: user
                description: The type of Account, which can be a user or a group
                enum:
                - user
                - group
                type: string
              username:
                description: The username of the account, which can be used to log
                  into Modela
                maxLength: 64
                minLength: 4
                type: string
            type: object
          status:
            description: AccountStatus defines the actual state of the api object
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              datasetsCount:
                description: Total number of feature groups that this user is responsible
                  for.
                format: int32
                type: integer
              failureMessage:
                description: In the case of failure, the Account resource controller
                  will set this field with a failure message
                type: string
              failureReason:
                description: In the case of failure, the Account resource controller
                  will set this field with a failure reason
                type: string
              featureGroupsCount:
                description: Total number of feature groups that this user is responsible
                  for.
                format: int32
                type: integer
              membersCount:
                description: If the Account is a group account, the total number of
                  Accounts that exist under the group
                format: int32
                type: integer
              modelClassessCount:
                description: Total model classes owned by this user
                format: int32
                type: integer
              modelsCount:
                description: Total models owned by this user
                format: int32
                type: integer
              observedGeneration:
                description: ObservedGeneration is the last generation that was acted
                  on
                format: int64
                type: integer
              predictorsCount:
                description: Total number of feature groups that this user is owner
                  of.
                format: int32
                type: integer
              updatedAt:
                description: The last time the object was updated
                format: date-time
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
