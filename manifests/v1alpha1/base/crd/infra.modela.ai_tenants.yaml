---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: tenants.infra.modela.ai
spec:
  group: infra.modela.ai
  names:
    categories:
    - infra
    - modela
    kind: Tenant
    listKind: TenantList
    plural: tenants
    singular: tenant
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - jsonPath: .spec.defaultLabRef.Name
      name: Default Lab
      type: string
    - jsonPath: .spec.defaultServingSiteRef.Name
      name: Default Serving Site
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Tenant represents a root namespace for tenant-level resources
          and child DataProduct namespaces
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TenantSpec defines the desired state of a Tenant
            properties:
              cacheBucketName:
                description: CacheBucketName specifies the name of the Virtual Bucket
                  which workloads for resources under the Tenant will use internally
                  for caching workloads.
                type: string
              databaseConnectionName:
                description: DatabaseConnectionName references a Connection resource
                  to an external database that will act as a metadata store for the
                  tenant The metric store stores metadata about resources that perform
                  workloads (i.e. datasets, models, studies, etc.)
                type: string
              defaultBucketName:
                default: ""
                description: DefaultBucketName specifies a Virtual Bucket resource
                  that will be used as a default for all resources that do not specify
                  a Virtual Bucket and has a Data Product that does not specify a
                  default Virtual Bucket
                type: string
              defaultLabName:
                description: DefaultLabName specifies a Lab resource that will be
                  used as a default for all resources that do not specify a Lab or
                  have a Data Product which specifies a default Lab
                type: string
              defaultServingSiteName:
                description: DefaultServingSiteName specifies a Serving Site resource
                  that will be used as a default for all resources that do not specify
                  a Serving Site and has a Data Product that does not specify a default
                  Serving Site
                type: string
              metricsEnabled:
                description: MetricsEnabled indicates if metadata about resources
                  that perform workloads (i.e. datasets, models, studies, etc.) will
                  be stored in the database for the Tenant
                type: boolean
              notification:
                description: The default notification specification for all resources
                  under the tenant
                properties:
                  notifierName:
                    description: NotifierName specifies the name of a single Notifier
                      resource which the Alert will be forwarded to
                    type: string
                  selector:
                    additionalProperties:
                      type: string
                    description: Selector defines a map of labels that will be matched
                      to find multiple Notifier resource to forward alerts to
                    type: object
                  ttl:
                    default: 3600
                    description: TTL defines the time-to-live for Alerts, in seconds,
                      after which they will be deleted
                    format: int32
                    type: integer
                type: object
              permissions:
                description: Permissions defines the set of permissions applied to
                  each Account when accessing resources within the Tenant
                properties:
                  accounts:
                    items:
                      description: AccountPermissions specifies the User Role Classes
                        of an individual Account
                      properties:
                        accountName:
                          description: The name of the Account receiving the permissions
                          type: string
                        roles:
                          description: Roles contains a list of User Role Classes
                            that will be bound to the Account
                          items:
                            description: LocalObjectReference contains enough information
                              to let you locate the referenced object inside the same
                              namespace.
                            properties:
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                          type: array
                      type: object
                    type: array
                type: object
            type: object
          status:
            description: TenantStatus defines the actual state of a Tenant
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              failureMessage:
                description: UpdateUpdateStrategy in case of terminal failure message
                type: string
              observedGeneration:
                description: ObservedGeneration is the Last generation that was acted
                  on
                format: int64
                type: integer
              updatedAt:
                description: Last time the object was updated
                format: date-time
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
