---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: featuregroups.data.modela.ai
spec:
  group: data.modela.ai
  names:
    categories:
    - data
    - modela
    kind: FeatureGroup
    listKind: FeatureGroupList
    plural: featuregroups
    shortNames:
    - fg
    singular: featuregroup
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - jsonPath: .spec.version
      name: Version
      type: string
    - jsonPath: .spec.entityName
      name: Entity
      type: string
    - jsonPath: .spec.schedule
      name: Schedule
      type: string
    - jsonPath: .status.ingestSchedule.nextRunAt
      name: Next Ingest
      type: date
    - jsonPath: .status.syncScedule.nextRunAt
      name: Next Sync
      type: date
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .spec.description
      name: Description
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: FeatureGroup represent a group of features
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: FeatureGroupSpec contain the desired state of a FeatureGroup
            properties:
              artifactBucketName:
                description: The name of the Virtual Bucket where artifacts generated
                  by Datasets related to the Feature Group will be stored. If empty,
                  it will default to the default Virtual Bucket of the Tenant
                type: string
              description:
                default: ""
                description: Description of the feature group.
                maxLength: 512
                type: string
              entityName:
                description: A feature group must be part of an entity.
                type: string
              flatfile:
                description: In case where the feature group data is stored as flat
                  file. the flat file format define how to read the file.
                properties:
                  csv:
                    description: The file format for CSV files, if applicable
                    properties:
                      commentChars:
                        default: '#'
                        description: 'The comment character used to split comments
                          off the end of lines (by default, a hashtag #)'
                        type: string
                      compression:
                        default: none
                        description: The compression type, if the file is compressed
                        type: string
                      delimiter:
                        default: comma
                        description: The character used to separate fields (by default,
                          a comma)
                        enum:
                        - crlf
                        - cr
                        - lf
                        - semicolon
                        - colon
                        - comma
                        - tab
                        - space
                        - pipe
                        - auto
                        type: string
                      encoding:
                        default: utf-8
                        description: The unicode encoding of the file (e.g. 'utf-8'
                          for UTF-8 encoded text)
                        enum:
                        - utf-8
                        - latin-1
                        - utf-16
                        type: string
                      escapeChar:
                        default: single-quote
                        description: The character used to escape the delimiter
                        enum:
                        - single-quote
                        - double-quote
                        - tilda
                        - none
                        - auto
                        type: string
                      hasIndexColumn:
                        default: false
                        description: Indicates if the file contains an index column
                        type: boolean
                      header:
                        default: true
                        description: Indicates if a header is present in the file
                        type: boolean
                      maxRows:
                        description: The maximum number of rows to read
                        format: int32
                        minimum: 0
                        type: integer
                      nullValues:
                        default: ""
                        description: NullValues is a sequence of values to replace
                          with NA.
                        type: string
                      quote:
                        default: double-quote
                        description: The character used for quotes (by default, a
                          double quote ")
                        enum:
                        - double-quote
                        - single-quote
                        - auto
                        type: string
                      skipRows:
                        default: 0
                        description: The number of rows to skip from the top of the
                          file
                        format: int32
                        minimum: 0
                        type: integer
                      strict:
                        default: true
                        description: Indicates if the read of the CSV file should
                          fail if there are any errors
                        type: boolean
                    type: object
                  excel:
                    description: The file format for Excel files, if applicable
                    properties:
                      columnNameRow:
                        description: The position of the row that contains the column
                          names (i.e. the header)
                        format: int32
                        type: integer
                      data:
                        description: The specification for the bounds of the data
                        properties:
                          entireSheet:
                            default: false
                            description: Indicates if the excel reader should read
                              the entire sheet; if false, it will read only within
                              the bounds specified by the `To` and `From` fields of
                              the ExcelSheetArea
                            type: boolean
                          fromColumn:
                            description: If reading part of the excel sheet, start
                              with the column in this position
                            format: int32
                            type: integer
                          fromRow:
                            description: If reading part of the excel sheet, start
                              with the row in this position
                            format: int32
                            type: integer
                          toColumn:
                            description: If reading part of the excel sheet, end with
                              the column in this position
                            format: int32
                            type: integer
                          toRow:
                            description: If reading part of the excel sheet, end with
                              the row in this position
                            format: int32
                            type: integer
                        type: object
                      firstSheetWithData:
                        default: false
                        description: Indicates if the excel reader should use the
                          first sheet that contains data
                        type: boolean
                      sheetIndex:
                        description: The index of the sheet in the excel file to read
                          data from
                        format: int32
                        type: integer
                      sheetName:
                        description: The name of the sheet that exists in the excel
                          file to read data from
                        type: string
                    type: object
                  fileType:
                    default: csv
                    description: The file type of incoming data which uses the DataSource
                      (by default, a CSV file)
                    enum:
                    - csv
                    - tsv
                    - excel
                    - fwf
                    - hdf
                    - html
                    - json
                    - pickle
                    - sas
                    - stata
                    - feather
                    - parquet
                    type: string
                  parquet:
                    description: The file format for Parquet files, if applicable
                    properties:
                      engine:
                        default: auto
                        type: string
                    type: object
                type: object
              ingestSchedule:
                description: Schedule for running ingesting the data from the feature.
                  On virtual features (e.g. where the data already reside in a table)
                  The ingest will just perform feature profile, and run the feature
                  group unit tests.
                properties:
                  cron:
                    description: The cron string for the schedule, applicable if the
                      trigger type is Cron. See https://docs.oracle.com/cd/E12058_01/doc/doc.1014/e12030/cron_expressions.htm
                      for more information
                    type: string
                  enabled:
                    default: false
                    description: Indicates if the schedule is enabled. When enabled,
                      a Cron Job will be created that will trigger the periodic execution
                      of the task
                    type: boolean
                  type:
                    description: The type of schedule, which can be a frequency interval
                      or a cron expression
                    enum:
                    - hourly
                    - daily
                    - weekly
                    - monthly
                    - cron
                    type: string
                type: object
              ingestType:
                default: batch
                description: How this group is ingested
                type: string
              keyColumn:
                description: The feature group primary key. This is usually the key
                  that is used to join the feature groups to other feature groups
                  in the entity
                type: string
              labRef:
                description: The reference to the Lab under which Jobs created by
                  the Feature Group will be executed. If empty, it will default to
                  the default Lab of the Tenant of the Feature Group.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              location:
                description: Specify the data for this feature group This can be a
                  table,  a view or a file on S3.
                properties:
                  database:
                    description: Database specifies the location of data within a
                      database
                    properties:
                      connectionName:
                        description: The name of the Connection resource used to connect
                          to the database
                        type: string
                      sql:
                        default: ""
                        description: The SQL statement to execute
                        type: string
                      table:
                        default: ""
                        description: The name of the table to read
                        type: string
                    type: object
                  file:
                    description: File specifies the location of a flat-file
                    properties:
                      bucketName:
                        type: string
                      path:
                        type: string
                    type: object
                  resource:
                    description: Resource references another Modela resource that
                      contains data
                    properties:
                      kind:
                        description: The type of resource which can be used as a data
                          source
                        type: string
                      name:
                        description: The name of the resource
                        type: string
                      namespace:
                        description: The namespace of the resource. When referencing
                          a Dataset Snapshot, default to the Data Product of the specifying
                          resource. When referencing a Public Dataset, default to
                          the built-in catalog namespace (modela-catalog)
                        type: string
                    type: object
                  web:
                    description: Web specifies the location of an internet-accessible
                      flat-file
                    properties:
                      url:
                        default: ""
                        description: The internet-accessible URL of a file to download
                        type: string
                    type: object
                type: object
              materialization:
                description: Materialization
                properties:
                  backfill:
                    default: 21
                    description: Number of days to store information from the past
                      in the feature store.
                    format: int32
                    minimum: 0
                    type: integer
                  offline:
                    default: false
                    description: If true update the offline store.
                    type: boolean
                  offlineTTL:
                    default: 0
                    format: int32
                    minimum: 0
                    type: integer
                  online:
                    default: false
                    description: If true, update the online store
                    type: boolean
                  onlineTTL:
                    default: 0
                    format: int32
                    minimum: 0
                    type: integer
                  schedule:
                    description: Set the sync schedule between offline store and online
                      store.
                    properties:
                      cron:
                        description: The cron string for the schedule, applicable
                          if the trigger type is Cron. See https://docs.oracle.com/cd/E12058_01/doc/doc.1014/e12030/cron_expressions.htm
                          for more information
                        type: string
                      enabled:
                        default: false
                        description: Indicates if the schedule is enabled. When enabled,
                          a Cron Job will be created that will trigger the periodic
                          execution of the task
                        type: boolean
                      type:
                        description: The type of schedule, which can be a frequency
                          interval or a cron expression
                        enum:
                        - hourly
                        - daily
                        - weekly
                        - monthly
                        - cron
                        type: string
                    type: object
                  startDate:
                    format: date-time
                    type: string
                type: object
              owner:
                default: no-one
                description: Owner is the owner of the feature group.
                pattern: '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'
                type: string
              resources:
                description: Resources used for ingest and the sync
                properties:
                  custom:
                    default: false
                    description: Custom indicates if the custom requirements specified
                      by Requirements will be used
                    type: boolean
                  requirements:
                    description: Requirements specifies the custom resource requirements
                      for the workload
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  workloadName:
                    description: WorkloadName references the name of a Workload Class
                      resource that will be used to determine the resource requirements
                      of the workload. If specified, WorkloadName will take precedence
                      over custom requirements
                    type: string
                type: object
              schema:
                description: The name of the data source which contain the schema
                  for this entity
                properties:
                  columns:
                    description: The collection of columns and their attributes
                    items:
                      description: Column specifies the attribute of a single column
                        in a dataset. The fields of the Column align with the JSON
                        schema standard; you can view detailed documentation at https://json-schema.org/draft/2020-12/json-schema-validation.html
                      properties:
                        DefaultValueNum:
                          description: The default value for number types; used internally
                            for synthetic data and validation
                          type: number
                        aggr:
                          description: If this column is aggregate. Define the aggregate
                          enum:
                          - min
                          - max
                          - mean
                          - median
                          - sum
                          - stddev
                          - var
                          - none
                          type: string
                        datatype:
                          description: The data type of the feature (e.g. number,
                            string, boolean, etc.)
                          enum:
                          - boolean
                          - datetime
                          - number
                          - categorical
                          - ordinal
                          - text
                          - json
                          - number-list
                          - categorical-list
                          - text-list
                          type: string
                        datetimeFormat:
                          description: The format of the datetime column. This is
                            only setup if the column contain datetime type.
                          type: string
                        description:
                          description: The user-specified description of the feature
                          maxLength: 63
                          type: string
                        displayName:
                          description: The display name of the column, which is used
                            in reports and other visual elements. If omitted, it will
                            use the raw name
                          maxLength: 63
                          type: string
                        driftThreshold:
                          description: The threshold drift value for model drift detection
                            for the feature represented by this feature
                          type: number
                        enum:
                          description: The collection of unique values for categorical
                            features
                          items:
                            type: string
                          type: array
                        example:
                          description: A user-specified example value
                          type: string
                        exclusiveMaximum:
                          description: The exclusive upper limit of all values in
                            the column, which does not include the maximum value
                          type: boolean
                        exclusiveMinimum:
                          description: The exclusive lower limit of all values in
                            the column, which does not include the minimum value
                          type: boolean
                        externalDocs:
                          description: A link to user-specified external documentation
                          type: string
                        fk:
                          description: Denotes if the column specifies a foreign key
                            of another database table
                          type: boolean
                        fold:
                          description: Indicates if the column holds fold values
                          type: boolean
                        format:
                          description: The data domain of the feature, which constrains
                            the contents of the feature to a specific set of values
                          enum:
                          - url
                          - path
                          - password
                          - time
                          - count
                          - interval
                          - nominal
                          - email
                          - creditcard
                          - uuid
                          - uuid5
                          - uuid
                          - base64
                          - latitude
                          - longtitude
                          - dns
                          - ip4
                          - ip6
                          - ssn
                          - alpha
                          - alphanumeric
                          - unknown
                          - color
                          - currency
                          - date
                          - guid
                          - hyperlink
                          - image
                          - media
                          - file
                          - embedding
                          - record
                          - useless
                          - none
                          type: string
                        formula:
                          description: The formula used to generate the column
                          type: string
                        generated:
                          description: Indicates if the feature was automatically
                            generated
                          type: boolean
                        id:
                          description: Indicates if the column is an ID column
                          type: boolean
                        ignore:
                          description: Indicates if the feature should be ignored
                            when building models
                          type: boolean
                        imputation:
                          description: The recommended imputation method for the column
                          enum:
                          - remove-rows-with-missing-values
                          - replace-with-mean
                          - replace-with-median
                          - replace-with-arbitrary-value
                          - freq-category-imputation
                          - add-missing-value-indicator
                          - knn
                          - iterative
                          - mice
                          - no-imputation
                          - auto
                          - none
                          type: string
                        key:
                          description: Indicates if the column is an key column
                          type: boolean
                        laggedRegressor:
                          description: In forecasting based data sets Indicates if
                            the column is regressor This is relevant only for time
                            series schema
                          type: boolean
                        loc:
                          description: Contain the Index for the column in the schema
                          format: int32
                          type: integer
                        log:
                          description: Indicates if values from this column will be
                            sampled on a logarithmic scale
                          type: boolean
                        maxItems:
                          description: The maximum number of items if the column is
                            a list of values
                          format: int32
                          minimum: 0
                          type: integer
                        maxLength:
                          description: The maximum length of values in the column,
                            if the column data type is a string
                          format: int32
                          minimum: 0
                          type: integer
                        maximum:
                          description: The maximum value of values all values in the
                            column
                          type: number
                        minItems:
                          description: The minimum number of items if the column is
                            a list of values
                          format: int32
                          minimum: 0
                          type: integer
                        minLength:
                          description: The minimum length of values in the column,
                            if the column data type is a string
                          format: int32
                          minimum: 0
                          type: integer
                        minimum:
                          description: The minimum value of values all values in the
                            column
                          type: number
                        mu:
                          description: Mu is the mean of the normal distribution
                          type: number
                        multipleOf:
                          description: The integer value which the values of the column
                            should be a multiple of
                          format: int32
                          minimum: 0
                          type: integer
                        name:
                          description: The name of the column
                          maxLength: 63
                          minLength: 1
                          type: string
                        nullable:
                          description: Indicates if the column can contain null values
                          type: boolean
                        pattern:
                          description: The regex pattern which values in the column
                            must adhere to
                          type: string
                        phi:
                          description: Indicates if the column contains personal health
                            information
                          type: boolean
                        pii:
                          description: Indicates if the column contains personally
                            identifiable information
                          type: boolean
                        pk:
                          description: Denotes if the column specifies a primary key
                            of a database table (i.e. a users ID)
                          type: boolean
                        protected:
                          description: Protected means that this feature is important
                            for ethical AI / Fairness
                          type: boolean
                        regressor:
                          description: In forecasting based data sets Indicates if
                            the column is regressor This is relevant only for time
                            series schema
                          type: boolean
                        required:
                          description: Required
                          type: boolean
                        reserved:
                          description: Indicates that the feature should always be
                            used in training
                          type: boolean
                        scaling:
                          description: The recommended scaling method for the column
                          enum:
                          - standard-scaling
                          - max-abs-scaling
                          - min-max-scaling
                          - normalization-scaling
                          - robust-scaling
                          - scale-to-unit-norm
                          - none
                          - auto
                          type: string
                        sigma:
                          description: Sigma is the standard deviation of the distribution
                          type: number
                        skewThreshold:
                          description: The threshold skew for skew detection for the
                            feature represented by this feature.
                          type: number
                        step:
                          description: The step value if the column values are a sequence
                            of numbers
                          type: number
                        target:
                          description: Indicates if the feature is the target feature
                            of the model, and the feature which predictions will be
                            made on
                          type: boolean
                        timeIndex:
                          description: For time series, the field indicate tha this
                            column will be used as the data time index for the time
                            series. Note that there can multiple datatime type columns,
                            but only one time column.
                          type: boolean
                        timeseries:
                          description: Indicates if the column is contain a time series,
                            In case of forecasting, if only one column is a time series,
                            this is a univariate time series Otherwise, if two or
                            more columns contain time series, than this is a univariate
                            time series.
                          type: boolean
                        uniqueItems:
                          description: Enforce that all the items in the list are
                            unique
                          type: boolean
                        weight:
                          description: If True than this is a weight column
                          type: boolean
                        window:
                          description: If this column is aggregate
                          format: int32
                          type: integer
                      required:
                      - datatype
                      - name
                      type: object
                    type: array
                  key:
                    description: The keys columns are the index of the file or table.
                      The set of keys will be used as an index for the in memory representation(e.g.
                      pandas)
                    items:
                      type: string
                    type: array
                  recommendationSchema:
                    description: The recommendation schema, which is used for the
                      recommendation ML task
                    properties:
                      itemIDColumn:
                        default: item_id
                        description: The name of the column that specifies item IDs
                        type: string
                      ratingColumn:
                        default: rating
                        description: The name of the column that specifies ratings
                        type: string
                      userIDColumn:
                        default: user_id
                        description: The name of the column that specifies user IDs
                          (i.e. the primary key)
                        type: string
                    type: object
                  timeSeriesSchema:
                    description: The time-series schema, which sets time-series specific
                      parameters
                    properties:
                      freq:
                        default: day
                        description: The time series frequency
                        enum:
                        - second
                        - minute
                        - hour
                        - day
                        - week
                        - month
                        - quarter
                        - year
                        - multi-year
                        type: string
                      interval:
                        default: 1
                        description: The interval to forecast at this level
                        format: int32
                        type: integer
                      type:
                        default: series
                        description: The time series type
                        enum:
                        - series
                        - panel
                        - hierarchical
                        type: string
                    type: object
                type: object
              syncSchedule:
                description: Schedule for running ingesting the data from the feature.
                  On virtual features (e.g. where the data already reside in a table)
                  The ingest will just perform feature profile, and run the feature
                  group unit tests.
                properties:
                  cron:
                    description: The cron string for the schedule, applicable if the
                      trigger type is Cron. See https://docs.oracle.com/cd/E12058_01/doc/doc.1014/e12030/cron_expressions.htm
                      for more information
                    type: string
                  enabled:
                    default: false
                    description: Indicates if the schedule is enabled. When enabled,
                      a Cron Job will be created that will trigger the periodic execution
                      of the task
                    type: boolean
                  type:
                    description: The type of schedule, which can be a frequency interval
                      or a cron expression
                    enum:
                    - hourly
                    - daily
                    - weekly
                    - monthly
                    - cron
                    type: string
                type: object
              tags:
                description: Tags for this feature groups
                items:
                  type: string
                type: array
              tenantRef:
                description: The reference to the tenant which the object exists under
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              tests:
                description: Unit test to run on data from this feature group upon
                  ingrest.
                properties:
                  enabled:
                    description: If false, this test case is disabled
                    type: boolean
                  tests:
                    items:
                      properties:
                        assertThat:
                          description: The assertion type
                          type: string
                        column:
                          description: If unit test is column test, this is the name
                            of the column
                          type: string
                        column2:
                          description: For test that involve two columns (e.g. correlation)
                          type: string
                        columns:
                          description: If unit test is column test, this is the name
                            of the column
                          items:
                            type: string
                          type: array
                        compareToRef:
                          description: Reference to another entity which is a ref.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead
                                of an entire object, this string should contain a
                                valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container
                                within a pod, this would take on a value like: "spec.containers{name}"
                                (where "name" refers to the name of the container
                                that triggered the event) or if no container name
                                is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to
                                have some well-defined way of referencing a part of
                                an object. TODO: this design is not final and this
                                field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info:
                                https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this
                                reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        dataFilter:
                          description: Sql statement to filter the data for this unit
                            test
                          type: string
                        enabled:
                          description: If false, this test case is disabled
                          type: boolean
                        entityRef:
                          description: Reference to an entity.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead
                                of an entire object, this string should contain a
                                valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container
                                within a pod, this would take on a value like: "spec.containers{name}"
                                (where "name" refers to the name of the container
                                that triggered the event) or if no container name
                                is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to
                                have some well-defined way of referencing a part of
                                an object. TODO: this design is not final and this
                                field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info:
                                https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this
                                reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        entityRef2:
                          description: Reference to an entity.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead
                                of an entire object, this string should contain a
                                valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container
                                within a pod, this would take on a value like: "spec.containers{name}"
                                (where "name" refers to the name of the container
                                that triggered the event) or if no container name
                                is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to
                                have some well-defined way of referencing a part of
                                an object. TODO: this design is not final and this
                                field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info:
                                https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this
                                reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        expectedCategory:
                          description: The expected value
                          type: string
                        expectedSet:
                          description: Expected set of values,if the assertion
                          items:
                            type: string
                          type: array
                        expectedValue:
                          description: The expected numerical value
                          type: number
                        featureFilter:
                          description: Filter the filter for this unit test.
                          type: string
                        generated:
                          description: Indicates if this validation rule was automatically
                            generated by the system
                          type: boolean
                        lower:
                          description: For range based tests.
                          format: float
                          type: number
                        lowerInclusive:
                          type: boolean
                        metric:
                          description: The metric that is used for the test
                          type: string
                        name:
                          description: The name of the test case, will be generate
                            if empty by the combination of assertion, entity ref,
                            column name and metric
                          type: string
                        periods:
                          description: The length of the past if we are comparing
                            to moving avg
                          format: int32
                          type: integer
                        referenceType:
                          description: Set the reference type for this unit test
                          type: string
                        tags:
                          description: The test case tags, used for filtering. Optional
                            Test Tags
                          items:
                            type: string
                          type: array
                        type:
                          description: The test type The type of the data test
                          type: string
                        upper:
                          format: float
                          type: number
                        upperInclusive:
                          type: boolean
                      type: object
                    type: array
                type: object
              timeColumn:
                description: the time column index. Might be null, if the fg does
                  not have time column.
                type: string
              timeColumnFormat:
                description: The time column format
                type: string
            type: object
          status:
            description: FeatureStatus defines the observed state of Feature
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              failureMessage:
                description: In the case of failure, the Study resource controller
                  will set this field with a failure message
                type: string
              failureReason:
                description: In the case of failure, the Study resource controller
                  will set this field with a failure reason
                type: string
              ingestDatasetName:
                description: The last monitor dataset name
                type: string
              ingestSchedule:
                description: the ingest schedule status. During ingest we test and
                  profile the current feature group content.
                properties:
                  active:
                    description: Active contains a collection of references to currently
                      active runs
                    items:
                      description: RunReference defines a generic reference to any
                        type of run
                      properties:
                        name:
                          description: The name of the run
                          type: string
                        version:
                          description: The version of the run
                          format: int32
                          type: integer
                      required:
                      - name
                      - version
                      type: object
                    type: array
                  lastScheduleTime:
                    description: LastScheduleTime specifies when was the last time
                      a run was successfully scheduled
                    format: date-time
                    type: string
                  lastSuccessfulTime:
                    description: LastSuccessfulTime specifies when was the last time
                      a run successfully completed
                    format: date-time
                    type: string
                type: object
              observedGeneration:
                description: ObservedGeneration is the Last generation that was acted
                  on
                format: int64
                type: integer
              onlineTable:
                description: Holds the last online table location. set the null when
                  running the sync process
                properties:
                  database:
                    description: Database specifies the location of data within a
                      database
                    properties:
                      connectionName:
                        description: The name of the Connection resource used to connect
                          to the database
                        type: string
                      sql:
                        default: ""
                        description: The SQL statement to execute
                        type: string
                      table:
                        default: ""
                        description: The name of the table to read
                        type: string
                    type: object
                  file:
                    description: File specifies the location of a flat-file
                    properties:
                      bucketName:
                        type: string
                      path:
                        type: string
                    type: object
                  resource:
                    description: Resource references another Modela resource that
                      contains data
                    properties:
                      kind:
                        description: The type of resource which can be used as a data
                          source
                        type: string
                      name:
                        description: The name of the resource
                        type: string
                      namespace:
                        description: The namespace of the resource. When referencing
                          a Dataset Snapshot, default to the Data Product of the specifying
                          resource. When referencing a Public Dataset, default to
                          the built-in catalog namespace (modela-catalog)
                        type: string
                    type: object
                  web:
                    description: Web specifies the location of an internet-accessible
                      flat-file
                    properties:
                      url:
                        default: ""
                        description: The internet-accessible URL of a file to download
                        type: string
                    type: object
                type: object
              onlineTableCreated:
                description: The last time an online table was created
                format: date-time
                type: string
              phase:
                type: string
              rows:
                description: The current number of rows in the feature group.
                format: int32
                type: integer
              syncSchedule:
                description: The status of the sync schedule
                properties:
                  active:
                    description: Active contains a collection of references to currently
                      active runs
                    items:
                      description: RunReference defines a generic reference to any
                        type of run
                      properties:
                        name:
                          description: The name of the run
                          type: string
                        version:
                          description: The version of the run
                          format: int32
                          type: integer
                      required:
                      - name
                      - version
                      type: object
                    type: array
                  lastScheduleTime:
                    description: LastScheduleTime specifies when was the last time
                      a run was successfully scheduled
                    format: date-time
                    type: string
                  lastSuccessfulTime:
                    description: LastSuccessfulTime specifies when was the last time
                      a run successfully completed
                    format: date-time
                    type: string
                type: object
              updatedAt:
                description: Last time the object was updated
                format: date-time
                type: string
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
