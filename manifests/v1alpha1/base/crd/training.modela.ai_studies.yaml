---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: studies.training.modela.ai
spec:
  group: training.modela.ai
  names:
    categories:
    - training
    - modela
    kind: Study
    listKind: StudyList
    plural: studies
    shortNames:
    - sd
    singular: study
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.owner
      name: Owner
      priority: 1
      type: string
    - jsonPath: .status.version
      name: Version
      priority: 1
      type: string
    - jsonPath: .spec.snapshot.dataset
      name: Dataset
      type: string
    - jsonPath: .spec.task
      name: Task
      type: string
    - jsonPath: .spec.search.objective.metric
      name: Objective
      type: string
    - jsonPath: .status.lastRunAt
      name: Last Run
      type: date
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Study represents an automatic search for the best machine learning
          model for a given dataset
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: StudySpec defines the desired parameters for a Study
            properties:
              artifactBucketName:
                description: The name of the Virtual Bucket where Study artifacts
                  (metadata, reports, and model artifacts) generated by the Study
                  will be stored. If empty, it will default to the default Virtual
                  Bucket of the Data Product
                type: string
              baseline:
                description: Baseline specifies the parameters to generate baseline
                  (default hyper-parameters) models
                properties:
                  all:
                    default: false
                    description: All indicates if a baseline model will be created
                      for every estimator
                    type: boolean
                  baselines:
                    description: Algorithms contains a list of estimators that will
                      be trained
                    items:
                      type: string
                    type: array
                  enabled:
                    default: false
                    description: Indicates if baseline (default hyper-parameters)
                      models will be trained
                    type: boolean
                type: object
              description:
                default: ""
                description: The user-provided description of the Study
                maxLength: 512
                type: string
              ensembles:
                description: Ensembles specifies to parameters to generate ensemble
                  models
                properties:
                  enabled:
                    default: true
                    description: Indicates if ensemble models will be created
                    type: boolean
                  stackingEnsemble:
                    default: true
                    description: Indicates if a stacking ensemble model will be created
                    type: boolean
                  top:
                    default: 3
                    description: The number of top candidate models to include in
                      the ensemble
                    format: int32
                    type: integer
                  votingEnsemble:
                    default: false
                    description: Indicates if a voting ensemble model will be created
                    type: boolean
                type: object
              explain:
                default: true
                description: If true, Shapley values (and relevant visualizations)
                  will be calculated for the highest-performing Model
                type: boolean
              fast:
                default: false
                description: Fast indicates if Models associated with the Study should
                  skip profiling, explaining, and reporting
                type: boolean
              featureEngineering:
                description: FeatureEngineering specifies the feature engineering
                  pipeline for models created by the Study
                properties:
                  imbalance:
                    default: auto
                    description: Imbalance specifies the method which will be used
                      to handle an imbalanced dataset
                    enum:
                    - adasyn
                    - baseline-smote
                    - kmean-smote
                    - random-over-sampler
                    - smote
                    - smotenc
                    - svmsmote
                    - none
                    - auto
                    - class-weights
                    type: string
                  pipelines:
                    description: Pipelines contains the collection of feature engineering
                      pipelines that will be applied to the dataset prior to model
                      training
                    items:
                      description: FeatureEngineeringPipeline represents a single
                        pipeline to transform a dataset
                      properties:
                        dataType:
                          description: DataType specifies the data type of the pipeline,
                            which corresponds to the data type of all features in
                            the pipeline
                          enum:
                          - boolean
                          - datetime
                          - number
                          - categorical
                          - ordinal
                          - text
                          - json
                          - number-list
                          - categorical-list
                          - text-list
                          type: string
                        datetimeTransformation:
                          default: none
                          description: DatetimeTransformation specifies the method
                            to use when handling the date-time data type
                          enum:
                          - extract-datetime-information
                          - none
                          - auto
                          type: string
                        discretisation:
                          default: none
                          description: Discretisation specifies the discretisation
                            method to convert numerical features to discrete variables
                          enum:
                          - equal-width-discretisation-
                          - equal-freq-discretisation
                          - kbin-discretisation
                          - kernel-centerer-discretisation
                          - label-binarizer-discretisation
                          - multi-label-binarizer-discretisation
                          - none
                          - auto
                          type: string
                        drop:
                          default: false
                          description: Drop indicates if all of all the features for
                            the pipeline will be dropped
                          type: boolean
                        encoding:
                          default: none
                          description: Encoding specifies the encoding method to use
                            for categorical features
                          enum:
                          - one-hot-encoding
                          - one-hot-encoding-top-categories
                          - ordinal-encoding
                          - count-encoding
                          - target-encoding
                          - weight-of-evidence-encoding
                          - binary-encoding
                          - label-encoding
                          - hash-encoding
                          - catboost-encoding
                          - loo-encoding
                          - no-encoding
                          - auto
                          - none
                          type: string
                        features:
                          description: Features contains the collection of features
                            which the pipeline will be applied to
                          items:
                            type: string
                          type: array
                        imputation:
                          default: none
                          description: Imputation specifies the imputation method
                            to use when handling missing values
                          enum:
                          - remove-rows-with-missing-values
                          - replace-with-mean
                          - replace-with-median
                          - replace-with-arbitrary-value
                          - freq-category-imputation
                          - add-missing-value-indicator
                          - knn
                          - iterative
                          - mice
                          - no-imputation
                          - auto
                          - none
                          type: string
                        name:
                          description: Name specifies the unique name of the pipeline
                          type: string
                        outlierHandling:
                          default: none
                          description: OutlierHandling specifies the method to use
                            when handling outliers Apply only to numeric data types.
                          enum:
                          - trim-outliers
                          - winsorizer-outliers
                          - cap-outliers
                          - zero-code-outliers
                          - none
                          - auto
                          type: string
                        scaling:
                          default: none
                          description: Scaling specifies the scaling method to use
                            for numerical features
                          enum:
                          - standard-scaling
                          - max-abs-scaling
                          - min-max-scaling
                          - normalization-scaling
                          - robust-scaling
                          - scale-to-unit-norm
                          - none
                          - auto
                          type: string
                        text:
                          description: Text defines the configuration for the pipeline
                            to handle text features
                          properties:
                            embedding:
                              description: Indicates if the pipeline will generate
                                a word embedding
                              type: string
                            encoder:
                              default: auto
                              description: The text encoder (e.g. TFIDF)
                              enum:
                              - tfidf
                              - count-vec
                              - hasing-vec
                              - none
                              - auto
                              type: string
                            lemma:
                              default: true
                              description: Indicates if the pipeline will implement
                                lemmatization
                              type: boolean
                            maxSvdComponents:
                              default: 0
                              description: The maximum number of SVD components to
                                use, if applicable
                              format: int32
                              type: integer
                            pos:
                              default: true
                              description: Indicates if the pipeline will add part-of-speech
                                handling
                              type: boolean
                            stem:
                              default: true
                              description: Indicates if the pipeline will implement
                                word stemming
                              type: boolean
                            stopwords:
                              default: true
                              description: Indicates if the pipeline will add stop
                                word handling
                              type: boolean
                            svd:
                              default: true
                              description: Indicates if the pipeline will add singular
                                value decomposition
                              type: boolean
                            tokenizer:
                              description: The text tokenizer character
                              type: string
                          type: object
                        variableTransformation:
                          default: none
                          description: VariableTransformation specifies the transformation
                            method to use for numerical feature
                          enum:
                          - log-transformation
                          - reciprocal-transformation
                          - sqrt-transformation
                          - power-transformation
                          - box-cox-transformation
                          - yj-transformation
                          - none
                          - auto
                          type: string
                      type: object
                    type: array
                type: object
              forecastTemplate:
                description: ForecastSpec specifies the parameters required when generating
                  a forecasting model
                properties:
                  anomalies:
                    items:
                      properties:
                        adjDeltaColumn:
                          type: string
                        end:
                          description: The end of the anomaly
                          type: string
                        name:
                          type: string
                        start:
                          description: The start of the anomaly
                          type: string
                        valueColumn:
                          type: string
                      type: object
                    type: array
                  coverage:
                    description: Make a forecast post training
                    type: number
                  estimators:
                    description: The estimators to try. By default, we try graykit
                      / auto arima and prophet.
                    items:
                      type: string
                    type: array
                  evaluationMetrics:
                    description: Spec for evaluation metric
                    properties:
                      aggFunc:
                        description: 'From: https://linkedin.github.io/greykite/docs/0.1.0/html/pages/stepbystep/0400_configuration.html
                          Defines how to aggregate rolling windows of actual and predicted
                          values before evaluation.'
                        type: string
                      aggPeriod:
                        description: 'From: https://linkedin.github.io/greykite/docs/0.1.0/html/pages/stepbystep/0400_configuration.html
                          Number of periods to aggregate before evaluation.'
                        format: int32
                        type: integer
                      nullModelParams:
                        description: 'From: https://linkedin.github.io/greykite/docs/0.1.0/html/pages/stepbystep/0400_configuration.html
                          Defines baseline model to compute ``R2_null_model_score``
                          evaluation metric. R2_null_model_score is the improvement
                          in the loss function relative to a null model. It can be
                          used to evaluate model quality with respect to a simple
                          baseline'
                        type: string
                      relErrTolerance:
                        description: 'From: https://linkedin.github.io/greykite/docs/0.1.0/html/pages/stepbystep/0400_configuration.html
                          Threshold to compute the ``Outside Tolerance`` metric, defined
                          as the fraction of forecasted values whose relative error
                          is strictly greater than ``relative_error_tolerance``. If
                          `NoneSeasonalityMode`, the metric is not computed.'
                        type: number
                      reporting:
                        description: 'From: https://linkedin.github.io/greykite/docs/0.1.0/html/pages/stepbystep/0400_configuration.html
                          Additional metrics to compute during CV, besides the one
                          specified by ``cv_selection_metric``'
                        items:
                          type: string
                        type: array
                      selection:
                        description: 'From: https://linkedin.github.io/greykite/docs/0.1.0/html/pages/stepbystep/0400_configuration.html
                          Used to select the optimal model during cross-validation.'
                        type: string
                    type: object
                  evaluationPeriod:
                    description: Spec for time series cross validation
                    properties:
                      cvExpandingWindows:
                        type: boolean
                      cvHorizon:
                        description: 'From: https://linkedin.github.io/greykite/docs/0.1.0/html/pages/stepbystep/0400_configuration.html
                          Number of periods in each CV test set If None, default is
                          forecast_horizon. Set to 0 to skip CV.'
                        format: int32
                        type: integer
                      cvMaxSplits:
                        description: 'From: https://linkedin.github.io/greykite/docs/0.1.0/html/pages/stepbystep/0400_configuration.html
                          Maximum number of CV splits. Given the above configuration,
                          samples up to max_splits train/test splits, preferring splits
                          toward the end of available data. If None, uses all splits.'
                        format: int32
                        type: integer
                      cvMinTrainPeriods:
                        description: 'From: https://linkedin.github.io/greykite/docs/0.1.0/html/pages/stepbystep/0400_configuration.html
                          Minimum number of periods for training each CV fold. If
                          cv_expanding_window is False, every training period is this
                          size If None, default is 2 * cv_horizon'
                        format: int32
                        type: integer
                      cvPeriodsBetweenSplits:
                        description: 'From: https://linkedin.github.io/greykite/docs/0.1.0/html/pages/stepbystep/0400_configuration.html
                          Number of periods to slide the test window between CV splits.
                          Has to be greater than or equal to 1. If None, default is
                          cv_horizon.'
                        format: int32
                        type: integer
                      cvUseMostRecentSplits:
                        description: 'From: https://linkedin.github.io/greykite/docs/0.1.0/html/pages/stepbystep/0400_configuration.html
                          If True, splits from the end of the dataset are used. Else
                          a sampling strategy is applied. Check'
                        type: boolean
                      periodsBetweenTrainTest:
                        format: int32
                        type: integer
                      testHorizon:
                        description: 'From: https://linkedin.github.io/greykite/docs/0.1.0/html/pages/stepbystep/0400_configuration.html
                          Numbers of periods held back from end of df for test. The
                          rest is used for cross validation. If None, default is forecast_horizon.
                          Set to 0 to skip backtest.'
                        format: int32
                        type: integer
                    type: object
                  events:
                    description: The spec for the holiday
                    items:
                      properties:
                        country:
                          description: If this event is an holiday, this is the holiday
                            country
                          enum:
                          - US
                          - BR
                          - ID
                          - IN
                          - MY
                          - VN
                          - TH
                          - PH
                          - PK
                          - BD
                          - EG
                          - CN
                          - RU
                          - KR
                          - BY
                          - AE
                          - none
                          type: string
                        holiday:
                          description: Set to true if this event is an holiday
                          type: boolean
                        method:
                          description: Set to true if this event is an holiday
                          type: string
                        name:
                          description: Set to true if this event is an holiday
                          type: string
                        postEvent:
                          description: Post event windows the might have event effects.
                          format: int32
                          type: integer
                        preEvent:
                          description: Pre event window, that might have event effects
                          format: int32
                          type: integer
                        timePoints:
                          description: The time points to mark the events
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  features:
                    description: List of time series features to compute on each time
                      series.
                    items:
                      type: string
                    type: array
                  forecast:
                    description: Make a forecast post training
                    type: boolean
                  future:
                    description: Specification for the future windows
                    properties:
                      interval:
                        description: The period interval
                        enum:
                        - second
                        - minute
                        - hour
                        - day
                        - week
                        - month
                        - quarter
                        - year
                        - multi-year
                        type: string
                      length:
                        description: The window length
                        format: int32
                        type: integer
                      start:
                        default: 0
                        description: The number of intervals to start. If the start
                          is more than 0, there is a gap.
                        format: int32
                        type: integer
                    type: object
                  groups:
                    description: Filter the groups to forecast for. If none forecast
                      only to the leaf group
                    items:
                      type: string
                    type: array
                  growth:
                    description: Set the growth of the series
                    enum:
                    - linear
                    - logistic
                    - flat
                    - quadratic
                    - none
                    type: string
                  hpoBudget:
                    format: int32
                    type: integer
                  hts:
                    default: bottom-up
                    description: Group recocile. By default this is the bottom-up
                    enum:
                    - bottom-up
                    - middle-out
                    - top-down
                    - none
                    type: string
                  key:
                    description: In case of group forecast
                    items:
                      type: string
                    type: array
                  laggedRegressors:
                    description: Lagged Regressors
                    items:
                      type: string
                    type: array
                  outputLocation:
                    description: The data location that would store the forecast result.
                    properties:
                      bucket:
                        default: ""
                        description: In the case of the location type being an object
                          storage system, BucketName is the name of the VirtualBucket
                          resource that exists in the same tenant as the resource
                          specifying the DataLocation. Modela will connect to the
                          external object storage system, and will access the file
                          from the path specified by the Path field
                        type: string
                      connection:
                        default: ""
                        description: In the case of the type of location being a database,
                          ConnectionName specifies the name of the ConnectionName
                          resource that exists in the same tenant as the resource
                          specifying the DataLocation. Modela will attempt to connect
                          to the database using the credentials specified in the ConnectionName,
                          and will execute the query specified by the SQL field
                        type: string
                      database:
                        default: ""
                        description: The name of a database inside the database system
                          specified by the ConnectionName field
                        type: string
                      path:
                        default: ""
                        description: The path to a flat-file inside an object storage
                          system. When using the Modela API to upload files (through
                          the FileService API), Modela will upload the data to a predetermined
                          path based on the Tenant, Data Product, Data Product Version,
                          and resource type of the resource in relation to the file
                          being uploaded. The path does not need to adhere to this
                          format; you may also specify an arbitrary path
                        type: string
                      resourceRef:
                        description: In the case of the location type being Dataset
                          or PublicDataset, ResourceRef references another resource
                          that containing data that will be used as a data source
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      sql:
                        default: ""
                        description: The SQL statement which will be executed to query
                          data from the table specified by Table
                        type: string
                      table:
                        default: ""
                        description: The name of a table inside a database, if applicable
                        type: string
                      topic:
                        default: ""
                        description: The name of the streaming topic (currently unsupported)
                        type: string
                      type:
                        default: object
                        description: The type of location where the data resides,
                          which can either be an object inside an object storage system
                          (i.e. Minio), a SQL location like a table or a view, a data
                          stream (i.e. Kafka, currently unsupported), or a web location
                          (currently unsupported)
                        enum:
                        - object
                        - table
                        - view
                        - stream
                        - web
                        - public-dataset
                        - dataset
                        type: string
                      url:
                        default: ""
                        description: In the case of the location type being WebApi,
                          URL specifies the external location (HTTP or Git) that will
                          be queried and then stored as flat-file by the resource
                          which specifies the DataLocation
                        type: string
                    type: object
                  past:
                    description: Specification for the past windows
                    properties:
                      interval:
                        description: The period interval
                        enum:
                        - second
                        - minute
                        - hour
                        - day
                        - week
                        - month
                        - quarter
                        - year
                        - multi-year
                        type: string
                      length:
                        description: The window length
                        format: int32
                        type: integer
                      start:
                        default: 0
                        description: The number of intervals to start. If the start
                          is more than 0, there is a gap.
                        format: int32
                        type: integer
                    type: object
                  predefinedTemplate:
                    enum:
                    - silverkite
                    - prophet
                    - auto-arima
                    - lag-based
                    - sk
                    - two-stage
                    - wow
                    - daily-1-config-1
                    - daily-1-config-2
                    - daily-1-config-3
                    - daily-1
                    - daily-90
                    - weekly
                    - monthly
                    - hourly-1
                    - hourly-24
                    - hourly-168
                    - hourly-336
                    type: string
                  regressors:
                    description: The regressor. Initially those are set from the data
                      source schema
                    items:
                      type: string
                    type: array
                  seasonality:
                    properties:
                      auto:
                        description: If true infer the seasonality
                        type: boolean
                      daily:
                        description: Define the seasonality for a period (yearly /
                          monthly / daily)
                        properties:
                          auto:
                            description: Infer the seasonality
                            type: boolean
                          enabled:
                            description: Is the seasonality exist
                            type: boolean
                          fourierOrder:
                            default: 0
                            description: If enabled, the number of data points in
                              the interval
                            format: int32
                            type: integer
                        type: object
                      monthly:
                        description: Define the seasonality for a period (yearly /
                          monthly / daily)
                        properties:
                          auto:
                            description: Infer the seasonality
                            type: boolean
                          enabled:
                            description: Is the seasonality exist
                            type: boolean
                          fourierOrder:
                            default: 0
                            description: If enabled, the number of data points in
                              the interval
                            format: int32
                            type: integer
                        type: object
                      quarterly:
                        description: Define the seasonality for a period (yearly /
                          monthly / daily)
                        properties:
                          auto:
                            description: Infer the seasonality
                            type: boolean
                          enabled:
                            description: Is the seasonality exist
                            type: boolean
                          fourierOrder:
                            default: 0
                            description: If enabled, the number of data points in
                              the interval
                            format: int32
                            type: integer
                        type: object
                      weekly:
                        description: Define the seasonality for a period (yearly /
                          monthly / daily)
                        properties:
                          auto:
                            description: Infer the seasonality
                            type: boolean
                          enabled:
                            description: Is the seasonality exist
                            type: boolean
                          fourierOrder:
                            default: 0
                            description: If enabled, the number of data points in
                              the interval
                            format: int32
                            type: integer
                        type: object
                      yearly:
                        description: Define the seasonality for a period (yearly /
                          monthly / daily)
                        properties:
                          auto:
                            description: Infer the seasonality
                            type: boolean
                          enabled:
                            description: Is the seasonality exist
                            type: boolean
                          fourierOrder:
                            default: 0
                            description: If enabled, the number of data points in
                              the interval
                            format: int32
                            type: integer
                        type: object
                    type: object
                  trainEndData:
                    type: string
                  valueColumn:
                    description: The value column. this is the name of the column
                      to forecast, this will be based on the data source.
                    type: string
                type: object
              gc:
                description: GarbageCollectionSpec specifies the configuration to
                  automatically clean-up unused models
                properties:
                  enabled:
                    default: true
                    description: Enabled indicates if garbage collection is enabled,
                      in which case all models will be deleted at the end of the Study
                      excluding an amount of the top highest-performing models defined
                      by the SearchSpec of the Study
                    type: boolean
                  keepBestModelPerAlgorithm:
                    default: false
                    description: If true, the best models per algorithm will be prevented
                      from deletion
                    type: boolean
                  keepPrunedModels:
                    default: false
                    type: boolean
                type: object
              imbalanceHandler:
                description: ImbalanceHandler specifies the configuration to train
                  models with imbalance handling
                properties:
                  enabled:
                    default: true
                    description: Indicates if imbalance handling is enabled
                    type: boolean
                  imbalance:
                    default: auto
                    description: The technique that will be used to handle the imbalanced
                      dataset
                    enum:
                    - adasyn
                    - baseline-smote
                    - kmean-smote
                    - random-over-sampler
                    - smote
                    - smotenc
                    - svmsmote
                    - none
                    - auto
                    - class-weights
                    type: string
                type: object
              interpretability:
                description: Interpretability specifies the parameters to create interpretability
                  visualizations for the final model
                properties:
                  anchor:
                    default: false
                    description: Indicates if anchor explanation diagrams will be
                      generated
                    type: boolean
                  counterfactual:
                    default: false
                    description: Indicates if counter-factual diagrams will be generated
                    type: boolean
                  ice:
                    default: true
                    description: Indicates if ICE (individual condition expectation)
                      plots will be generated
                    type: boolean
                  icepairs:
                    description: The collection of feature pairs to generate ICE scatter
                      diagrams for each
                    items:
                      properties:
                        x:
                          type: string
                        "y":
                          type: string
                      type: object
                    type: array
                  lime:
                    default: false
                    description: Indicates if LIME (local interpretable model-agnostic
                      explanations) diagrams will be generated
                    type: boolean
                  shap:
                    default: auto
                    description: The type of SHAP values to be generated. Linear and
                      tree values are the only recommended types due to the high compute
                      times of other methods
                    enum:
                    - permutation
                    - partition
                    - tree
                    - kernel
                    - sampling
                    - linear
                    - deep
                    - gradient
                    - auto
                    - none
                    type: string
                  shappairs:
                    description: The collection of feature pairs to generate SHAP
                      scatter diagrams for each
                    items:
                      properties:
                        x:
                          type: string
                        "y":
                          type: string
                      type: object
                    type: array
                type: object
              labRef:
                description: The reference to the Lab under which the Model resources
                  created by the Study will be trained. If unspecified, the default
                  Lab from the parent Data Product will be used
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              modelClassName:
                description: The Model Class which created the Study, if applicable
                type: string
              notification:
                description: The notification specification that determines which
                  notifiers will receive Alerts generated by the object
                properties:
                  notifierName:
                    description: NotifierName specifies the name of a single Notifier
                      resource which the Alert will be forwarded to
                    type: string
                  selector:
                    additionalProperties:
                      type: string
                    description: Selector defines a map of labels that will be matched
                      to find multiple Notifier resource to forward alerts to
                    type: object
                  ttl:
                    default: 3600
                    description: TTL defines the time-to-live for Alerts, in seconds,
                      after which they will be deleted
                    format: int32
                    type: integer
                type: object
              outlierModel:
                description: OutlierModelSpec specifies the configuration to train
                  an outlier model
                properties:
                  enabled:
                    default: false
                    description: Enabled indicates if a density models should be trained
                    type: boolean
                  outlierAlgorithm:
                    default: isolation-forest
                    description: The density model alg.
                    type: string
                type: object
              owner:
                default: no-one
                description: Owner specifies the name of the Account which the object
                  belongs to
                type: string
              profile:
                default: true
                description: If true, the Study will be profiled after the conclusion
                  of it's model search
                type: boolean
              report:
                default: true
                description: If true, a report will be generated for the Study
                type: boolean
              schedule:
                description: Schedule specifies the configuration to execute the Study
                  on a schedule
                properties:
                  cron:
                    description: The cron string for the schedule, applicable if the
                      trigger type is Cron. See https://docs.oracle.com/cd/E12058_01/doc/doc.1014/e12030/cron_expressions.htm
                      for more information
                    type: string
                  enabled:
                    default: false
                    description: Enabled indicates if the schedule is enabled. When
                      enabled, a CronJob will be created which when triggered will
                      initiate the creation of a run for the resource that specifies
                      the schedule
                    type: boolean
                  type:
                    description: The type of schedule, which can be a frequency interval
                      or a cron expression
                    enum:
                    - now
                    - once
                    - hourly
                    - daily
                    - weekly
                    - monthly
                    - yearly
                    - cron
                    type: string
                type: object
              search:
                description: Search specifies the configuration to perform the model
                  search for the best algorithm and hyper-parameters
                properties:
                  earlyStop:
                    description: EarlyStop specifies the configuration for early stopping
                    properties:
                      enabled:
                        default: false
                        description: Enabled indicates if early stopping is enabled
                        type: boolean
                      initial:
                        default: 20
                        description: The number of models to train before the objective
                          metric will be checked for early stopping. If unspecified,
                          Modela will ignore the first 10 models by default
                        format: int32
                        type: integer
                      modelsWithNoProgress:
                        default: 5
                        description: The number of models with no improvement in score
                          that are required to abort the model search. If unspecified,
                          Modela will abort the search after 20 models by default
                        format: int32
                        type: integer
                    type: object
                  goal:
                    default: maximize
                    type: string
                  maxModels:
                    default: 10
                    description: The maximum number of candidate models that will
                      be sampled and trained
                    format: int32
                    maximum: 1000
                    minimum: 1
                    type: integer
                  maxScore:
                    default: 9999999999
                    description: The maximum value for the primary objective needed
                      to finish the search, after which the search will automatically
                      conclude if it is reached
                    type: number
                  maxTime:
                    default: 60
                    description: The maximum number of minutes, that the model search
                      can run for
                    format: int32
                    maximum: 10000
                    minimum: 1
                    type: integer
                  objective:
                    description: The objective metric that will be measured against
                      all models to evaluate their performance
                    properties:
                      goal:
                        default: maximize
                        description: The goal of the objective.
                        type: string
                      metric:
                        description: The objective metric
                        type: string
                    type: object
                  pruner:
                    description: Pruner specifies the configuration to run a model
                      search using a pruning algorithm. Using a pruning algorithm
                      allows you to train a large number of candidate models with
                      a subset of the dataset
                    properties:
                      hyperband:
                        properties:
                          bootstrapCount:
                            default: 0
                            description: Parameter specifying the number of trials
                              required in a rung before any trial can be promoted
                            format: int32
                            type: integer
                          maxResources:
                            default: 1
                            description: A parameter for specifying the maximum resource
                              allocated to a trial
                            format: int32
                            type: integer
                          minResources:
                            default: 1
                            description: "A parameter for specifying the minimum resource
                              allocated to a trial noted as \U0001D45F in the paper"
                            format: int32
                            type: integer
                          reductionFactor:
                            default: 3
                            description: A parameter for specifying reduction factor
                              of promotable trials
                            format: int32
                            type: integer
                        type: object
                      median:
                        properties:
                          intervalSteps:
                            default: 1
                            description: Interval in number of steps between the pruning
                              checks
                            format: int32
                            type: integer
                          minTrials:
                            default: 1
                            description: Minimum number of reported trials.
                            format: int32
                            type: integer
                          startupTrials:
                            default: 5
                            description: Pruning is disabled until the given number
                              of trials finish in the same ModelClass.
                            format: int32
                            type: integer
                          warmupSteps:
                            default: 0
                            description: Pruning is disabled until the trial exceeds
                              the given number of step
                            format: int32
                            type: integer
                        type: object
                      percentile:
                        properties:
                          intervalTrials:
                            default: 1
                            description: Interval in number of steps between the pruning
                              checks
                            format: int32
                            type: integer
                          minTrials:
                            default: 1
                            description: Minimum number of reported trials.
                            format: int32
                            type: integer
                          percentile:
                            default: 25
                            description: Percentile which must be between 0 and 100
                              inclusive
                            format: int32
                            maximum: 100
                            minimum: 0
                            type: integer
                          startupTrials:
                            default: 5
                            description: Pruning is disabled until the given number
                              of trials finish in the same ModelClass.
                            format: int32
                            type: integer
                          warmupSteps:
                            default: 0
                            description: Pruning is disabled until the trial exceeds
                              the given number of step
                            format: int32
                            type: integer
                        type: object
                      successiveHalving:
                        properties:
                          bootstrapCount:
                            default: 0
                            description: Minimum number of trials that need to complete
                              a rung before any trial is considered for promotion
                              into the next rung.
                            format: int32
                            type: integer
                          minEarlyStoppingRate:
                            default: 0
                            description: A parameter for specifying the minimum early-stopping
                              rate
                            format: int32
                            type: integer
                          minResources:
                            default: 1
                            description: Minimum number of reported trials.
                            format: int32
                            type: integer
                          reductionFactor:
                            default: 4
                            description: A parameter for specifying reduction factor
                              of promotable trials
                            format: int32
                            type: integer
                        type: object
                      threshold:
                        properties:
                          intervalSteps:
                            default: 1
                            description: Interval in number of steps between the pruning
                              checks
                            format: int32
                            type: integer
                          lower:
                            default: 0
                            description: A minimum value which determines whether
                              pruner prunes or not. If an intermediate value is smaller
                              than lower, it prunes.
                            type: number
                          upper:
                            default: 0
                            description: A maximum value which determines whether
                              pruner prunes or not. If an intermediate value is larger
                              than upper, it prunes.
                            type: number
                          warmupSteps:
                            default: 0
                            description: Pruning is disabled until the trial exceeds
                              the given number of step
                            format: int32
                            type: integer
                        type: object
                      type:
                        default: median-pruner
                        description: The type of pruner to use during model search
                        enum:
                        - patient-pruner
                        - median-pruner
                        - percentile-pruner
                        - successive-halving-pruner
                        - hyperband-pruner
                        - threshold-pruner
                        type: string
                    type: object
                  retainFor:
                    default: 60
                    description: The time, in minutes, for which candidate models
                      (excluding the best model) will be retained, after which they
                      will be garbage collected
                    format: int32
                    maximum: 2400
                    minimum: 0
                    type: integer
                  retainTop:
                    default: 1
                    description: The number of top candidate models, sorted by their
                      objective score, that will be retained in the case that garbage
                      collection is enabled. If this number is less than Test, then
                      RetainTop will be ignored and the value of Test will be used
                      instead
                    format: int32
                    maximum: 100
                    minimum: 0
                    type: integer
                  sampler:
                    default: tpe
                    description: The hyper-parameter optimization search method
                    enum:
                    - random
                    - grid
                    - bayesian
                    - tpe
                    - manual
                    - auto
                    type: string
                  searchSpace:
                    description: SearchSpace specifies the algorithms available to
                      candidate models
                    properties:
                      custom:
                        description: Custom specifies custom hyperparameter ranges
                          for specific algorithms
                        items:
                          description: AlgorithmParameterRange defines a custom hyperparameter
                            range for a single algorithm
                          properties:
                            name:
                              description: Name specifies the name of the algorithm
                                to override
                              type: string
                            ranges:
                              description: Ranges contain the collection of hyperparameter
                                ranges to override
                              items:
                                description: ParameterRange defines the limits for
                                  a single hyperparameter
                                properties:
                                  choices:
                                    description: Set of choices for categorical variable
                                    items:
                                      type: string
                                    type: array
                                  conditional:
                                    description: If true this parameter is condition
                                      on another parameter value
                                    type: boolean
                                  defaultChoice:
                                    description: Default Choice for categorical variable.
                                    type: string
                                  defaultValue:
                                    description: DefaultValue is the default value
                                      of the parameter
                                    type: number
                                  high:
                                    description: High is the maximum value of the
                                      hyperparameter
                                    type: number
                                  log:
                                    description: Log indicates if the scale is logarithmic
                                    type: boolean
                                  low:
                                    description: Low is the minimum value of the hyperparameter
                                    type: number
                                  name:
                                    description: Name is the name of the hyperparameter
                                    type: string
                                  parent:
                                    description: Parent parameter name
                                    type: string
                                  parentValueCat:
                                    description: The parent value in order for this
                                      parameter to be active.
                                    type: string
                                  parentValueFloat:
                                    description: The parent value in order for this
                                      parameter to be active.
                                    type: number
                                  parentValueInteger:
                                    description: The parent value in order for this
                                      parameter to be active.
                                    format: int32
                                    type: integer
                                  step:
                                    description: Step for discrete variable.
                                    format: int32
                                    type: integer
                                  type:
                                    description: Type is the datatype of the parameter
                                    enum:
                                    - float
                                    - int
                                    - categorical
                                    type: string
                                type: object
                              type: array
                          type: object
                        type: array
                      exclude:
                        description: Which algorithm to exclude If empty, all algorithms
                          will be available for training
                        items:
                          type: string
                        type: array
                      include:
                        description: Which algorithm to include If empty, all algorithms
                          will be available for training
                        items:
                          type: string
                        type: array
                    type: object
                  secondaryObjective:
                    description: The second objective metric that will be measured
                      and evaluated in tandem with the primary objective. The model
                      search optimizer will attempt to optimize both metrics
                    properties:
                      goal:
                        default: maximize
                        description: The goal of the objective.
                        type: string
                      metric:
                        description: The objective metric
                        type: string
                    type: object
                  test:
                    default: 1
                    description: The number of top candidate models that will be moved
                      to the testing phase once the model search is complete. If unspecified,
                      only the best model will be retained
                    format: int32
                    maximum: 5
                    minimum: 1
                    type: integer
                  trainers:
                    default: 1
                    description: The desired number of trainers that will train candidate
                      models in parallel. The number of trainers is restricted based
                      on the allowance provided by the active License
                    format: int32
                    maximum: 50
                    minimum: 0
                    type: integer
                type: object
              serving:
                description: Serving defines the serving and promotion policy for
                  the selected model of the Study by default there is no serving policy
                properties:
                  access:
                    description: Access specifies the configuration for the Predictor
                      service to be exposed externally
                    properties:
                      accessType:
                        default: cluster-ip
                        description: The Kubernetes-native access method which specifies
                          how the Kubernetes Service created by the Predictor will
                          be exposed. See https://modela.ai/docs/docs/serving/production/#access-method
                          for a detailed description of each access type
                        enum:
                        - cluster-ip
                        - node-port
                        - load-balancer
                        - ingress
                        - mesh
                        - none
                        type: string
                      apikeySecretRef:
                        description: ApiKeySecretRef references a Kubernetes Secret
                          containing an API key that must be passed in prediction
                          requests to the Predictor
                        properties:
                          name:
                            description: name is unique within a namespace to reference
                              a secret resource.
                            type: string
                          namespace:
                            description: namespace defines the space within which
                              the secret name must be unique.
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      authMethod:
                        default: none
                        enum:
                        - api-token
                        - jwt-token
                        - none
                        type: string
                      http:
                        default: false
                        description: Indicates if the prediction service should expose
                          an additional port to serve the Modela prediction API through
                          HTTP. The port one digit above the number specified by the
                          Port field will be exposed to accept HTTP/1.1 traffic
                        type: boolean
                      nodePort:
                        description: The port number that will be exposed on the external
                          address of every node on the cluster, in the case of the
                          Predictor's access type being NodePort. Traffic from the
                          port will be forwarded to the Predictor's backend service
                        format: int32
                        maximum: 65535
                        minimum: 0
                        type: integer
                      path:
                        default: ""
                        description: The auto-generated DNS path where the Predictor
                          service can be accessed. If the access type is ClusterIP,
                          it will be a cluster-internal DNS name (i.e. predictor.default-serving-site.svc.cluster.local).
                          In the case of the Ingress access type, it will be determined
                          by the FQDN of the host ServingSite (i.e. predictor.default-serving-site.your-domain.ai).
                        maxLength: 256
                        type: string
                      port:
                        default: 8080
                        description: The port number that will be exposed on the Predictor's
                          Pods to serve prediction traffic through the GRPCInferenceService
                          API. The Kubernetes Service created by the Predictor will
                          expose the port and forward GRPC traffic to the backend
                          pods
                        format: int32
                        maximum: 65535
                        minimum: 1024
                        type: integer
                    type: object
                  approvedAt:
                    description: ApprovedAt indicates the time of manual approval
                    format: date-time
                    type: string
                  approvedBy:
                    description: ApprovedBy indicates the account that approved the
                      model
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  dashboard:
                    default: false
                    description: Dashboard indicates if a Data App will be created
                      for the Model
                    type: boolean
                  enabled:
                    default: false
                    description: Enabled indicates if automatic model serving is enabled.
                      If false or unspecified, the Study or Model Class managing the
                      model will not create or update serving resources for the Model
                    type: boolean
                  predictorName:
                    description: PredictorName specifies the name of a Predictor to
                      create or update. If unspecified, a live Predictor will not
                      be created for the model
                    type: string
                  promotion:
                    default: none
                    description: Promotion specifies the promotion policy for the
                      Predictor
                    enum:
                    - manual
                    - best
                    - latest
                    - none
                    type: string
                  replicas:
                    default: 1
                    description: Replicas specifies the number of replicas that will
                      be created for the Predictor
                    format: int32
                    type: integer
                  resources:
                    description: Resources specifies the resources that will be allocated
                      to the Predictor
                    properties:
                      custom:
                        default: false
                        description: Custom indicates if the custom requirements specified
                          by Requirements will be used
                        type: boolean
                      requirements:
                        description: Requirements specifies the custom resource requirements
                          for the workload
                        properties:
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                      workloadName:
                        description: WorkloadName references the name of a Workload
                          Class resource that will be used to determine the resource
                          requirements of the workload. If specified, WorkloadName
                          will take precedence over custom requirements
                        type: string
                    type: object
                  servingSiteRef:
                    description: The reference to the Serving Site under which serving
                      resources will be created
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                type: object
              snapshot:
                description: Snapshot specifies the reference to the Dataset Snapshot
                  that will be used to train models. The dataset will be split into
                  individual training, testing, and validation datasets
                properties:
                  dataset:
                    description: Dataset specifies the name of the Dataset which the
                      snapshot belongs to
                    type: string
                  version:
                    description: Version specifies the version of the snapshot to
                      use. If empty, the latest available snapshot will be used
                    format: int32
                    type: integer
                type: object
              split:
                description: Split specifies the configuration to generate training
                  and testing datasets prior to model training
                properties:
                  method:
                    default: auto
                    description: Method defines the type of split method
                    enum:
                    - random
                    - split-column
                    - time
                    - random-stratified
                    - auto
                    - test-dataset
                    type: string
                  splitColumn:
                    description: The name of the column containing a binary value
                      that indicates if the row should be split. The split type must
                      use split-column in order for SplitColumn to have an effect
                    type: string
                  test:
                    default: 20
                    description: The number percentage (0 through 100) of rows that
                      will be allocated to the training dataset
                    format: int32
                    maximum: 100
                    minimum: 0
                    type: integer
                  testSnapshot:
                    default: ""
                    description: The name of the Dataset resource which will be used
                      as the testing dataset
                    properties:
                      dataset:
                        description: Dataset specifies the name of the Dataset which
                          the snapshot belongs to
                        type: string
                      version:
                        description: Version specifies the version of the snapshot
                          to use. If empty, the latest available snapshot will be
                          used
                        format: int32
                        type: integer
                    type: object
                  train:
                    default: 80
                    description: The number percentage (0 through 100) of rows that
                      will be allocated to the training dataset
                    format: int32
                    maximum: 100
                    minimum: 1
                    type: integer
                  trainSnapshot:
                    default: ""
                    description: The reference to the dataset snapshot which will
                      be used as the training dataset
                    properties:
                      dataset:
                        description: Dataset specifies the name of the Dataset which
                          the snapshot belongs to
                        type: string
                      version:
                        description: Version specifies the version of the snapshot
                          to use. If empty, the latest available snapshot will be
                          used
                        format: int32
                        type: integer
                    type: object
                  validation:
                    default: 0
                    description: The number percentage (0 through 100) of rows that
                      will be allocated to the validation dataset. If Validation is
                      set to 0 the benchmarking process will use cross-validation
                    format: int32
                    maximum: 50
                    minimum: 0
                    type: integer
                  validationDataset:
                    default: ""
                    description: The name of the Dataset resource which will be used
                      as the validation dataset, applicable if the split type uses
                      test-dataset. If enabled, the training dataset will not be split
                      and used as-is
                    type: string
                type: object
              subtask:
                default: none
                description: The machine learning subtask relevant to the primary
                  task (text classification, image object detection, etc.)
                enum:
                - text-ner
                - text-classification
                - text-multi-classification
                - text-regression
                - text-multi-label-classification
                - text-conversation
                - text-lang-generation
                - text-lang-model
                - text-multi-modal
                - text-ner
                - text-qa
                - text-summarization
                - text-sentence-pair
                - text-representation-generation
                - text-sentiment-analysis
                - text-code-generation
                - text-translation
                - text-lang-detection
                - text-grammar-correction
                - text-paraphrasing
                - text-intent-classification
                - text-semantic-similarity
                - text-keyword-extraction
                - text-pos
                - text-tokenization
                - text-lemma
                - image-classification
                - image-multi-label-classification
                - image-object-detection
                - image-segmentation
                - none
                type: string
              task:
                description: The machine learning task type (i.e. regression, classification)
                enum:
                - binary-classification
                - multi-classification
                - forecasting
                - regression
                - clustering
                - recommendation
                - outlier-detection
                - novelty-detection
                - auto
                - unknown
                - partition-forecasting
                - monitoring
                type: string
              timeout:
                default: 14400
                description: The time, in seconds, after which the execution of a
                  Study will be forcefully aborted (4 hours, by default)
                format: int32
                type: integer
              trainingTemplate:
                description: TrainingTemplate specifies the configuration to train
                  and evaluate models
                properties:
                  checkpoint:
                    description: Checkpoint specifies the location to store model
                      checkpoints
                    properties:
                      checkpointInterval:
                        default: 10
                        description: The interval, in minutes, at which a snapshot
                          of a partially trained model will be saved. Applicable to
                          models with long training times for resiliency if training
                          is suddenly stopped
                        format: int32
                        minimum: 0
                        type: integer
                      enabled:
                        default: false
                        description: Indicates if checkpointing is enabled.
                        type: boolean
                      location:
                        description: The location of the model checkpoint
                        properties:
                          bucket:
                            default: ""
                            description: In the case of the location type being an
                              object storage system, BucketName is the name of the
                              VirtualBucket resource that exists in the same tenant
                              as the resource specifying the DataLocation. Modela
                              will connect to the external object storage system,
                              and will access the file from the path specified by
                              the Path field
                            type: string
                          connection:
                            default: ""
                            description: In the case of the type of location being
                              a database, ConnectionName specifies the name of the
                              ConnectionName resource that exists in the same tenant
                              as the resource specifying the DataLocation. Modela
                              will attempt to connect to the database using the credentials
                              specified in the ConnectionName, and will execute the
                              query specified by the SQL field
                            type: string
                          database:
                            default: ""
                            description: The name of a database inside the database
                              system specified by the ConnectionName field
                            type: string
                          path:
                            default: ""
                            description: The path to a flat-file inside an object
                              storage system. When using the Modela API to upload
                              files (through the FileService API), Modela will upload
                              the data to a predetermined path based on the Tenant,
                              Data Product, Data Product Version, and resource type
                              of the resource in relation to the file being uploaded.
                              The path does not need to adhere to this format; you
                              may also specify an arbitrary path
                            type: string
                          resourceRef:
                            description: In the case of the location type being Dataset
                              or PublicDataset, ResourceRef references another resource
                              that containing data that will be used as a data source
                            properties:
                              apiVersion:
                                description: API version of the referent.
                                type: string
                              fieldPath:
                                description: 'If referring to a piece of an object
                                  instead of an entire object, this string should
                                  contain a valid JSON/Go field access statement,
                                  such as desiredState.manifest.containers[2]. For
                                  example, if the object reference is to a container
                                  within a pod, this would take on a value like: "spec.containers{name}"
                                  (where "name" refers to the name of the container
                                  that triggered the event) or if no container name
                                  is specified "spec.containers[2]" (container with
                                  index 2 in this pod). This syntax is chosen only
                                  to have some well-defined way of referencing a part
                                  of an object. TODO: this design is not final and
                                  this field is subject to change in the future.'
                                type: string
                              kind:
                                description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                              namespace:
                                description: 'Namespace of the referent. More info:
                                  https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                type: string
                              resourceVersion:
                                description: 'Specific resourceVersion to which this
                                  reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                type: string
                              uid:
                                description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                          sql:
                            default: ""
                            description: The SQL statement which will be executed
                              to query data from the table specified by Table
                            type: string
                          table:
                            default: ""
                            description: The name of a table inside a database, if
                              applicable
                            type: string
                          topic:
                            default: ""
                            description: The name of the streaming topic (currently
                              unsupported)
                            type: string
                          type:
                            default: object
                            description: The type of location where the data resides,
                              which can either be an object inside an object storage
                              system (i.e. Minio), a SQL location like a table or
                              a view, a data stream (i.e. Kafka, currently unsupported),
                              or a web location (currently unsupported)
                            enum:
                            - object
                            - table
                            - view
                            - stream
                            - web
                            - public-dataset
                            - dataset
                            type: string
                          url:
                            default: ""
                            description: In the case of the location type being WebApi,
                              URL specifies the external location (HTTP or Git) that
                              will be queried and then stored as flat-file by the
                              resource which specifies the DataLocation
                            type: string
                        type: object
                    type: object
                  cvtype:
                    default: kfold
                    description: The type of cross-validation to use, in the case
                      that a validation dataset is not enabled
                    enum:
                    - none
                    - group-kfold
                    - group-shuffle-split
                    - kfold
                    - leave-one-group-out
                    - leave-p-groups-out
                    - leave-one-out
                    - leave-p-out
                    - predefined-split
                    - repeated-kfold
                    - repeated-stratified-k-fold
                    - shuffle-split
                    - stratified-k-fold
                    - stratified-shuffle-split
                    - stratified-group-k-fold
                    - time-series-split
                    type: string
                  featureImportance:
                    default: true
                    description: Indicates if feature importance for the model will
                      be computed as part of training. Some algorithms (e.g. Random
                      Forest) have built in support for feature importance
                    type: boolean
                  folds:
                    default: 5
                    description: The number of folds to use during cross-validation.
                      If set to 0, cross-validation will be disabled
                    format: int32
                    type: integer
                  gpu:
                    default: false
                    description: Indicates if a GPU will be allocated for model training
                    type: boolean
                  labRef:
                    description: The reference to the Lab under which the model training
                      Job will be created
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  logLevel:
                    default: info
                    description: The maximum log level for logs produced by Jobs associated
                      with the Model
                    enum:
                    - trace
                    - debug
                    - info
                    - error
                    type: string
                  priority:
                    default: medium
                    description: The priority of the Kubernetes Job created by the
                      Model (medium, by default)
                    enum:
                    - low
                    - medium
                    - high
                    - urgent
                    type: string
                  resources:
                    description: Resources specifies the resource requirements allocated
                      to the model training workload
                    properties:
                      custom:
                        default: false
                        description: Custom indicates if the custom requirements specified
                          by Requirements will be used
                        type: boolean
                      requirements:
                        description: Requirements specifies the custom resource requirements
                          for the workload
                        properties:
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                      workloadName:
                        description: WorkloadName references the name of a Workload
                          Class resource that will be used to determine the resource
                          requirements of the workload. If specified, WorkloadName
                          will take precedence over custom requirements
                        type: string
                    type: object
                  samplePct:
                    default: 100
                    description: The number percentage (0 through 100) of rows to
                      be used during training
                    format: int32
                    type: integer
                  seed:
                    default: 42
                    description: The random state used for the model's estimator,
                      if applicable (for example, in RandomForestClassifier)
                    type: number
                  sh:
                    description: SuccessiveHalving specifies the configuration for
                      a Study to execute a model search using successive halving
                    properties:
                      bracket:
                        description: The bracket of the model
                        format: int32
                        maximum: 128
                        minimum: 0
                        type: integer
                      budget:
                        description: The budget to be used in a multi-fidelity search,
                          for example the number of epochs or the percentage of data
                          to train the model with
                        format: int32
                        maximum: 128
                        minimum: 0
                        type: integer
                      confID:
                        description: The configuration ID allocated to the model
                        format: int32
                        type: integer
                      modality:
                        description: The type of modality, based on the type of model
                          For classical models, it should be based on data percentage
                          For deep models, it should be based on epochs
                        enum:
                        - data
                        - epochs
                        type: string
                      rung:
                        description: The rung of the model
                        format: int32
                        maximum: 128
                        minimum: 0
                        type: integer
                    type: object
                  timeout:
                    default: 600
                    description: The maximum time, in seconds, that Jobs associated
                      with the Model can run for before being forcefully cancelled
                    format: int32
                    type: integer
                type: object
              unitTestsTemplate:
                description: UnitTestsTemplate defines the test suite that will be
                  executed on the model produced by the Study
                properties:
                  enabled:
                    description: If false, this test case is disabled
                    type: boolean
                  tests:
                    items:
                      properties:
                        assertThat:
                          description: The assertion type
                          type: string
                        column:
                          description: If unit test is column test, this is the name
                            of the column
                          type: string
                        column2:
                          description: For test that involve two columns (e.g. correlation)
                          type: string
                        columns:
                          description: If unit test is column test, this is the name
                            of the column
                          items:
                            type: string
                          type: array
                        compareToRef:
                          description: Reference to another entity which is a ref.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead
                                of an entire object, this string should contain a
                                valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container
                                within a pod, this would take on a value like: "spec.containers{name}"
                                (where "name" refers to the name of the container
                                that triggered the event) or if no container name
                                is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to
                                have some well-defined way of referencing a part of
                                an object. TODO: this design is not final and this
                                field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info:
                                https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this
                                reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        dataFilter:
                          description: Sql statement to filter the data for this unit
                            test
                          type: string
                        enabled:
                          description: If false, this test case is disabled
                          type: boolean
                        entityRef:
                          description: Reference to an entity.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead
                                of an entire object, this string should contain a
                                valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container
                                within a pod, this would take on a value like: "spec.containers{name}"
                                (where "name" refers to the name of the container
                                that triggered the event) or if no container name
                                is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to
                                have some well-defined way of referencing a part of
                                an object. TODO: this design is not final and this
                                field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info:
                                https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this
                                reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        entityRef2:
                          description: Reference to an entity.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead
                                of an entire object, this string should contain a
                                valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container
                                within a pod, this would take on a value like: "spec.containers{name}"
                                (where "name" refers to the name of the container
                                that triggered the event) or if no container name
                                is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to
                                have some well-defined way of referencing a part of
                                an object. TODO: this design is not final and this
                                field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info:
                                https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this
                                reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        expectedCategory:
                          description: The expected value
                          type: string
                        expectedSet:
                          description: Expected set of values,if the assertion
                          items:
                            type: string
                          type: array
                        expectedValue:
                          description: The expected numerical value
                          type: number
                        featureFilter:
                          description: Filter the filter for this unit test.
                          type: string
                        generated:
                          description: Indicates if this validation rule was automatically
                            generated by the system
                          type: boolean
                        lower:
                          description: For range based tests.
                          format: float
                          type: number
                        lowerInclusive:
                          type: boolean
                        metric:
                          description: The metric that is used for the test
                          type: string
                        name:
                          description: The name of the test case, will be generate
                            if empty by the combination of assertion, entity ref,
                            column name and metric
                          type: string
                        periods:
                          description: The length of the past if we are comparing
                            to moving avg
                          format: int32
                          type: integer
                        referenceType:
                          description: Set the reference type for this unit test
                          type: string
                        tags:
                          description: The test case tags, used for filtering. Optional
                            Test Tags
                          items:
                            type: string
                          type: array
                        type:
                          description: The test type The type of the data test
                          type: string
                        upper:
                          format: float
                          type: number
                        upperInclusive:
                          type: boolean
                      type: object
                    type: array
                type: object
            required:
            - snapshot
            - task
            type: object
          status:
            description: StudyStatus defines the observed state of a Study
            properties:
              active:
                description: Active contains a collection of references to currently
                  active runs
                items:
                  description: RunReference defines a generic reference to any type
                    of run
                  properties:
                    dataset:
                      description: Name specifies the name of the resource
                      type: string
                    version:
                      description: Version specifies the version of the run
                      format: int32
                      type: integer
                  type: object
                type: array
              availableRunVersions:
                description: AvailableRunVersions contains the collection of run versions
                  which are ready for use. Each version corresponds with an existing
                  StudyRun resource
                items:
                  format: int32
                  type: integer
                type: array
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              failureMessage:
                description: LastFailureMessage specifies the failure message of the
                  last run. If the last snapshot succeeded, the field will be cleared
                type: string
              lastRunAt:
                description: LastRunAt specifies the time at which a run was last
                  created for the Study
                format: date-time
                type: string
              lastRunVersion:
                default: 0
                description: LastRunVersion contains the integer version last used
                  to create a run
                format: int32
                type: integer
              observedGeneration:
                description: ObservedGeneration specifies the last generation that
                  was reconciled
                format: int64
                type: integer
              schedule:
                description: Schedule specifies the status of the run schedule
                properties:
                  active:
                    description: Active contains a collection of references to currently
                      active runs
                    items:
                      description: RunReference defines a generic reference to any
                        type of run
                      properties:
                        dataset:
                          description: Name specifies the name of the resource
                          type: string
                        version:
                          description: Version specifies the version of the run
                          format: int32
                          type: integer
                      type: object
                    type: array
                  lastScheduleTime:
                    description: LastScheduleTime specifies when was the last time
                      a run was successfully scheduled
                    format: date-time
                    type: string
                  lastSuccessfulTime:
                    description: LastSuccessfulTime specifies when was the last time
                      a run successfully completed
                    format: date-time
                    type: string
                type: object
              updatedAt:
                description: UpdatedAt specifies the last time the Study was updated
                format: date-time
                type: string
              version:
                default: 1
                description: Version specifies the version of the Study as tracked
                  by Modela, which is incremented each time the object is changed
                format: int32
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
