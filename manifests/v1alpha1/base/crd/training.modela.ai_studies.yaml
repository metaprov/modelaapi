---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: studies.training.modela.ai
spec:
  group: training.modela.ai
  names:
    categories:
    - training
    - modela
    kind: Study
    listKind: StudyList
    plural: studies
    shortNames:
    - sd
    singular: study
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Status
      type: string
    - jsonPath: .status.progress
      name: Progress
      priority: 1
      type: number
    - jsonPath: .spec.owner
      name: Owner
      priority: 1
      type: string
    - jsonPath: .spec.versionName
      name: Version
      priority: 1
      type: string
    - jsonPath: .spec.datasetName
      name: Dataset
      type: string
    - jsonPath: .spec.task
      name: Task
      type: string
    - jsonPath: .spec.search.objective.metric
      name: Objective
      type: string
    - jsonPath: .status.bestModelScore
      name: Score
      type: number
    - jsonPath: .status.bestModel
      name: Best model
      type: string
    - jsonPath: .status.search.completed
      name: Trained
      type: number
    - jsonPath: .status.test.completed
      name: Tested
      type: number
    - jsonPath: .status.startAt
      name: StartedAt
      priority: 1
      type: date
    - jsonPath: .status.completedAt
      name: CompletedAt
      priority: 1
      type: date
    - jsonPath: .status.lastFailure
      name: Last Failure
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Study represents an automatic search for the best machine learning
          model for a given dataset
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: StudySpec defines the desired state of a Study and the parameters
              for a model search
            properties:
              aborted:
                default: false
                description: Aborted indicates that the execution of the Study and
                  associated Models should be permanently stopped
                type: boolean
              baseline:
                description: Baseline specifies the parameters to generate baseline
                  (default hyper-parameters) models
                properties:
                  all:
                    default: false
                    description: Indicates if models will be created for every algorithm
                    type: boolean
                  baselines:
                    description: Baselines contains the collection of algorithms that
                      models will be created with
                    items:
                      type: string
                    type: array
                  enabled:
                    default: false
                    description: Indicates if baseline models will be produced. Enabling
                      baseline will create a model for each algorithm in the parent
                      ModelClass's search space with default hyper-parameters
                    type: boolean
                type: object
              codeGenerated:
                default: false
                description: Not implemented. For future use. If true,generate code
                  when the best model
                type: boolean
              compilation:
                description: CompilerSpec specifies the configuration to compile the
                  best-selected model to a binary (currently unimplemented)
                properties:
                  compiler:
                    default: none
                    description: Set one or more targets Enable set the enable to
                    enum:
                    - tvm
                    - onyx
                    - xla
                    - none
                    type: string
                  enable:
                    default: false
                    description: Enable set the enable to
                    type: boolean
                  targets:
                    description: Set one or more targets for the compiler
                    items:
                      enum:
                      - amd-epyc-2
                      - arma-53
                      - arma-72
                      - intel-cascade-lake
                      - intel-broadwell
                      - intel-skylake
                      - tesla-v100
                      - tesla-k80
                      - t4
                      - raspberry-pi8-modela-b
                      type: string
                    type: array
                type: object
              datasetName:
                description: The name of the Entity resource that will be used to
                  train models with. The dataset will be split into individual training,
                  testing, and validation datasets
                type: string
              description:
                default: ""
                description: The user-provided description of the Study
                maxLength: 512
                type: string
              driftDetection:
                description: The spec for generating a density model for this ModelClass.
                properties:
                  enabled:
                    default: false
                    description: Indicates if density models should be created.
                    type: boolean
                  outlierAlgorithm:
                    default: isolation-forest
                    description: The density model alg.
                    type: string
                type: object
              ensembles:
                description: Ensembles specifies to parameters to generate ensemble
                  models
                properties:
                  enabled:
                    default: true
                    description: Indicates if ensemble models will be created
                    type: boolean
                  stackingEnsemble:
                    default: true
                    description: Indicates if a stacking ensemble model will be created
                    type: boolean
                  top:
                    default: 3
                    description: The number of top candidate models to include in
                      the ensemble
                    format: int32
                    type: integer
                  votingEnsemble:
                    default: false
                    description: Indicates if a voting ensemble model will be created
                    type: boolean
                type: object
              fast:
                default: false
                description: Fast indicates if ModelsCount associated with the Study
                  should skip profiling, explaining, and reporting
                type: boolean
              fctTemplate:
                description: ForecastSpec specifies the parameters required when generating
                  a forecasting model
                properties:
                  anomalies:
                    items:
                      properties:
                        adjDeltaColumn:
                          type: string
                        end:
                          description: The end of the anomaly
                          type: string
                        name:
                          type: string
                        start:
                          description: The start of the anomaly
                          type: string
                        valueColumn:
                          type: string
                      type: object
                    type: array
                  coverage:
                    description: Make a forecast post training
                    type: number
                  estimators:
                    description: The estimators to try. By default, we try graykit
                      / auto arima and prophet.
                    items:
                      type: string
                    type: array
                  evaluationMetrics:
                    description: Spec for evaluation metric
                    properties:
                      aggFunc:
                        description: 'From: https://linkedin.github.io/greykite/docs/0.1.0/html/pages/stepbystep/0400_configuration.html
                          Defines how to aggregate rolling windows of actual and predicted
                          values before evaluation.'
                        type: string
                      aggPeriod:
                        description: 'From: https://linkedin.github.io/greykite/docs/0.1.0/html/pages/stepbystep/0400_configuration.html
                          Number of periods to aggregate before evaluation.'
                        format: int32
                        type: integer
                      nullModelParams:
                        description: 'From: https://linkedin.github.io/greykite/docs/0.1.0/html/pages/stepbystep/0400_configuration.html
                          Defines baseline model to compute ``R2_null_model_score``
                          evaluation metric. R2_null_model_score is the improvement
                          in the loss function relative to a null model. It can be
                          used to evaluate model quality with respect to a simple
                          baseline'
                        type: string
                      relErrTolerance:
                        description: 'From: https://linkedin.github.io/greykite/docs/0.1.0/html/pages/stepbystep/0400_configuration.html
                          Threshold to compute the ``Outside Tolerance`` metric, defined
                          as the fraction of forecasted values whose relative error
                          is strictly greater than ``relative_error_tolerance``. If
                          `NoneSeasonalityMode`, the metric is not computed.'
                        type: number
                      reporting:
                        description: 'From: https://linkedin.github.io/greykite/docs/0.1.0/html/pages/stepbystep/0400_configuration.html
                          Additional metrics to compute during CV, besides the one
                          specified by ``cv_selection_metric``'
                        items:
                          type: string
                        type: array
                      selection:
                        description: 'From: https://linkedin.github.io/greykite/docs/0.1.0/html/pages/stepbystep/0400_configuration.html
                          Used to select the optimal model during cross-validation.'
                        type: string
                    type: object
                  evaluationPeriod:
                    description: Spec for time series cross validation
                    properties:
                      cvExpandingWindows:
                        type: boolean
                      cvHorizon:
                        description: 'From: https://linkedin.github.io/greykite/docs/0.1.0/html/pages/stepbystep/0400_configuration.html
                          Number of periods in each CV test set If None, default is
                          forecast_horizon. Set to 0 to skip CV.'
                        format: int32
                        type: integer
                      cvMaxSplits:
                        description: 'From: https://linkedin.github.io/greykite/docs/0.1.0/html/pages/stepbystep/0400_configuration.html
                          Maximum number of CV splits. Given the above configuration,
                          samples up to max_splits train/test splits, preferring splits
                          toward the end of available data. If None, uses all splits.'
                        format: int32
                        type: integer
                      cvMinTrainPeriods:
                        description: 'From: https://linkedin.github.io/greykite/docs/0.1.0/html/pages/stepbystep/0400_configuration.html
                          Minimum number of periods for training each CV fold. If
                          cv_expanding_window is False, every training period is this
                          size If None, default is 2 * cv_horizon'
                        format: int32
                        type: integer
                      cvPeriodsBetweenSplits:
                        description: 'From: https://linkedin.github.io/greykite/docs/0.1.0/html/pages/stepbystep/0400_configuration.html
                          Number of periods to slide the test window between CV splits.
                          Has to be greater than or equal to 1. If None, default is
                          cv_horizon.'
                        format: int32
                        type: integer
                      cvUseMostRecentSplits:
                        description: 'From: https://linkedin.github.io/greykite/docs/0.1.0/html/pages/stepbystep/0400_configuration.html
                          If True, splits from the end of the dataset are used. Else
                          a sampling strategy is applied. Check'
                        type: boolean
                      periodsBetweenTrainTest:
                        format: int32
                        type: integer
                      testHorizon:
                        description: 'From: https://linkedin.github.io/greykite/docs/0.1.0/html/pages/stepbystep/0400_configuration.html
                          Numbers of periods held back from end of df for test. The
                          rest is used for cross validation. If None, default is forecast_horizon.
                          Set to 0 to skip backtest.'
                        format: int32
                        type: integer
                    type: object
                  events:
                    description: The spec for the holiday
                    items:
                      properties:
                        country:
                          description: If this event is an holiday, this is the holiday
                            country
                          enum:
                          - US
                          - BR
                          - ID
                          - IN
                          - MY
                          - VN
                          - TH
                          - PH
                          - PK
                          - BD
                          - EG
                          - CN
                          - RU
                          - KR
                          - BY
                          - AE
                          - none
                          type: string
                        holiday:
                          description: Set to true if this event is an holiday
                          type: boolean
                        method:
                          description: Set to true if this event is an holiday
                          type: string
                        name:
                          description: Set to true if this event is an holiday
                          type: string
                        postEvent:
                          description: Post event windows the might have event effects.
                          format: int32
                          type: integer
                        preEvent:
                          description: Pre event window, that might have event effects
                          format: int32
                          type: integer
                        timePoints:
                          description: The time points to mark the events
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  features:
                    description: List of time series features to compute on each time
                      series.
                    items:
                      type: string
                    type: array
                  forecast:
                    description: Make a forecast post training
                    type: boolean
                  future:
                    description: Specification for the future windows
                    properties:
                      interval:
                        description: The period interval
                        enum:
                        - second
                        - minute
                        - hour
                        - day
                        - week
                        - month
                        - quarter
                        - year
                        - multi-year
                        type: string
                      length:
                        description: The window length
                        format: int32
                        type: integer
                      start:
                        default: 0
                        description: The number of intervals to start. If the start
                          is more than 0, there is a gap.
                        format: int32
                        type: integer
                    type: object
                  groups:
                    description: Filter the groups to forecast for. If none forecast
                      only to the leaf group
                    items:
                      type: string
                    type: array
                  growth:
                    description: Set the growth of the series
                    enum:
                    - linear
                    - logistic
                    - flat
                    - quadratic
                    - none
                    type: string
                  hpoBudget:
                    format: int32
                    type: integer
                  hts:
                    default: bottom-up
                    description: Group recocile. By default this is the bottom-up
                    enum:
                    - bottom-up
                    - middle-out
                    - top-down
                    - none
                    type: string
                  key:
                    description: In case of group forecast
                    items:
                      type: string
                    type: array
                  laggedRegressors:
                    description: Lagged Regressors
                    items:
                      type: string
                    type: array
                  outputLocation:
                    description: The data location that would store the forecast result.
                    properties:
                      bucketName:
                        default: ""
                        description: In the case of the location type being an object
                          storage system, BucketName is the name of the VirtualBucket
                          resource that exists in the same tenant as the resource
                          specifying the DataLocation. Modela will connect to the
                          external object storage system, and will access the file
                          from the path specified by the Path field
                        type: string
                      connectionName:
                        default: ""
                        description: In the case of the type of location being a database,
                          ConnectionName specifies the name of the Connection resource
                          that exists in the same tenant as the resource specifying
                          the DataLocation. Modela will attempt to connect to the
                          database using the credentials specified in the Connection,
                          and will execute the query specified by the SQL field
                        type: string
                      database:
                        default: ""
                        description: The name of a database inside the database system
                          specified by the ConnectionName field
                        type: string
                      path:
                        default: ""
                        description: The path to a flat-file inside an object storage
                          system. When using the Modela API to upload files (through
                          the FileService API), Modela will upload the data to a predetermined
                          path based on the Tenant, DataProduct, DataProductVersion,
                          and resource type of the resource in relation to the file
                          being uploaded. The path does not need to adhere to this
                          format; you can give the path to a file inside a bucket
                          not managed by Modela
                        type: string
                      resourceRef:
                        description: In the case of the location type being Dataset
                          or PublicDataset, ResourceRef references another resource
                          that containing data that will be used as a data source
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      sql:
                        default: ""
                        description: The SQL statement which will be executed to query
                          data from the table specified by Table
                        type: string
                      table:
                        default: ""
                        description: The name of a table inside a database, if applicable
                        type: string
                      topic:
                        default: ""
                        description: The name of the streaming topic (currently unsupported)
                        type: string
                      type:
                        default: object
                        description: The type of location where the data resides,
                          which can either be an object inside an object storage system
                          (i.e. Minio), a SQL location like a table or a view, a data
                          stream (i.e. Kafka, currently unsupported), or a web location
                          (currently unsupported)
                        enum:
                        - object
                        - table
                        - view
                        - stream
                        - web
                        - public-dataset
                        - dataset
                        type: string
                      url:
                        default: ""
                        description: In the case of the location type being WebApi,
                          URL specifies the external location (HTTP or Git) that will
                          be queried and then stored as flat-file by the resource
                          which specifies the DataLocation
                        type: string
                    type: object
                  past:
                    description: Specification for the past windows
                    properties:
                      interval:
                        description: The period interval
                        enum:
                        - second
                        - minute
                        - hour
                        - day
                        - week
                        - month
                        - quarter
                        - year
                        - multi-year
                        type: string
                      length:
                        description: The window length
                        format: int32
                        type: integer
                      start:
                        default: 0
                        description: The number of intervals to start. If the start
                          is more than 0, there is a gap.
                        format: int32
                        type: integer
                    type: object
                  predefinedTemplate:
                    enum:
                    - silverkite
                    - prophet
                    - auto-arima
                    - lag-based
                    - sk
                    - two-stage
                    - wow
                    - daily-1-config-1
                    - daily-1-config-2
                    - daily-1-config-3
                    - daily-1
                    - daily-90
                    - weekly
                    - monthly
                    - hourly-1
                    - hourly-24
                    - hourly-168
                    - hourly-336
                    type: string
                  regressors:
                    description: The regressor. Initially those are set from the data
                      source schema
                    items:
                      type: string
                    type: array
                  seasonality:
                    properties:
                      auto:
                        description: If true infer the seasonality
                        type: boolean
                      daily:
                        description: Define the seasonality for a period (yearly /
                          monthly / daily)
                        properties:
                          auto:
                            description: Infer the seasonality
                            type: boolean
                          enabled:
                            description: Is the seasonality exist
                            type: boolean
                          fourierOrder:
                            default: 0
                            description: If enabled, the number of data points in
                              the interval
                            format: int32
                            type: integer
                        type: object
                      monthly:
                        description: Define the seasonality for a period (yearly /
                          monthly / daily)
                        properties:
                          auto:
                            description: Infer the seasonality
                            type: boolean
                          enabled:
                            description: Is the seasonality exist
                            type: boolean
                          fourierOrder:
                            default: 0
                            description: If enabled, the number of data points in
                              the interval
                            format: int32
                            type: integer
                        type: object
                      quarterly:
                        description: Define the seasonality for a period (yearly /
                          monthly / daily)
                        properties:
                          auto:
                            description: Infer the seasonality
                            type: boolean
                          enabled:
                            description: Is the seasonality exist
                            type: boolean
                          fourierOrder:
                            default: 0
                            description: If enabled, the number of data points in
                              the interval
                            format: int32
                            type: integer
                        type: object
                      weekly:
                        description: Define the seasonality for a period (yearly /
                          monthly / daily)
                        properties:
                          auto:
                            description: Infer the seasonality
                            type: boolean
                          enabled:
                            description: Is the seasonality exist
                            type: boolean
                          fourierOrder:
                            default: 0
                            description: If enabled, the number of data points in
                              the interval
                            format: int32
                            type: integer
                        type: object
                      yearly:
                        description: Define the seasonality for a period (yearly /
                          monthly / daily)
                        properties:
                          auto:
                            description: Infer the seasonality
                            type: boolean
                          enabled:
                            description: Is the seasonality exist
                            type: boolean
                          fourierOrder:
                            default: 0
                            description: If enabled, the number of data points in
                              the interval
                            format: int32
                            type: integer
                        type: object
                    type: object
                  trainEndData:
                    type: string
                  valueColumn:
                    description: The value column. this is the name of the column
                      to forecast, this will be based on the data source.
                    type: string
                type: object
              feSearch:
                description: FESearch specifies the parameters to perform a feature
                  engineering search
                properties:
                  autoRemove:
                    default: true
                    description: Indicates if models produced by the feature engineering
                      search should be automatically removed at the conclusion of
                      the search
                    type: boolean
                  earlyStop:
                    description: The number of new models produced by the fe search
                      which, if there is no improvement in score, the model search
                      will conclude
                    properties:
                      enabled:
                        default: true
                        description: Indicates if early stopping is enabled
                        type: boolean
                      initial:
                        default: 20
                        description: The number of models to train before model objective
                          metrics will begin to be checked for early stopping
                        format: int32
                        type: integer
                      minModelsWithNoProgress:
                        default: 5
                        description: The number of models with no improvement in score
                          that are required to abort the model search
                        format: int32
                        type: integer
                    type: object
                  enabled:
                    default: true
                    description: Indicates if the feature engineering search will
                      be performed
                    type: boolean
                  estimator:
                    description: The algorithm to use when evaluating models with
                      different feature engineering pipelines
                    type: string
                  feSelection:
                    description: Specification for feature selection. successful ModelClass.
                    properties:
                      corrThreshold:
                        default: 95
                        description: The threshold to remove features with high correlations
                        format: int32
                        type: integer
                      embedding:
                        default: true
                        description: Indicates if embedded methods will be tested
                          as part of the candidate algorithms (e.g. tree-based selection)
                        type: boolean
                      enabled:
                        default: true
                        description: Indicates if feature selection is enabled
                        type: boolean
                      filter:
                        default: true
                        description: Indicates if filter methods will be tested as
                          part of the candidate algorithms (e.g. chi-square or anova
                          tests)
                        type: boolean
                      maxFeatures:
                        default: 0
                        description: The number of features that will be selected
                          based on importance. If TopN is 0, all features will be
                          selected
                        format: int32
                        type: integer
                      percentile:
                        default: 20
                        description: Percent of features to keep
                        format: int32
                        type: integer
                      pipeline:
                        description: The collection of feature selection methods that
                          will be applied in order to the dataset
                        items:
                          enum:
                          - drop-features
                          - drop-constant-features
                          - drop-duplicated-features
                          - drop-correlated-features
                          - mutual-information
                          - chisquare
                          - anova
                          - step-forward
                          - step-backward
                          - lasso-regression
                          - tree-importance
                          - recursive-feature-elimination
                          - recursive-feature-addition
                          - select-percentile
                          - select-kbest
                          - select-fpr
                          - select-fdr
                          - variance-threshold
                          - none
                          - auto
                          type: string
                        type: array
                      reserved:
                        description: List of features that are reserved and will always
                          be included in the final feature selection
                        items:
                          type: string
                        type: array
                      varThreshold:
                        default: 5
                        description: The threshold as a percentage to remove low variance
                          features
                        format: int32
                        type: integer
                      wrapper:
                        default: true
                        description: Indicates if wrapper methods will be tested as
                          part of the candidate algorithms
                        type: boolean
                    type: object
                  imbalanceHandler:
                    default: auto
                    description: The method to use when handling an imbalanced dataset
                    enum:
                    - adasyn
                    - baseline-smote
                    - kmean-smote
                    - random-over-sampler
                    - smote
                    - smotenc
                    - svmsmote
                    - none
                    - auto
                    - class-weights
                    type: string
                  maxModels:
                    default: 10
                    description: The number of models to sample, after which the feature
                      engineering with the highest score will be used with Model resources
                      produced by the primary model search of the parent ModelClass
                    format: int32
                    type: integer
                  maxTime:
                    default: 3600
                    description: The deadline, in seconds, for models produced by
                      the search to be trained
                    format: int32
                    type: integer
                  maxTrainers:
                    default: 1
                    description: The desired number of trainers that will train candidate
                      models in parallel. The number of trainers is restricted based
                      on the allowance provided by the active License
                    format: int32
                    type: integer
                  reuse:
                    default: false
                    description: If true, if a feature engineering pipeline was previously
                      produced for the same dataset it will be used as a starting
                      point for the search
                    type: boolean
                  samplePct:
                    default: 100
                    description: The number percentage (0 through 100) of the dataset
                      to train models with
                    format: int32
                    type: integer
                type: object
              flagged:
                default: false
                description: Indicates if the Study is flagged
                type: boolean
              gc:
                description: GarbageCollectionSpec specifies the configuration to
                  automatically clean-up unused models
                properties:
                  collectAtModelClassEnd:
                    default: true
                    description: Indicates if all models of the ModelClass, excluding
                      the highest-performing model, will be archived
                    type: boolean
                  keepOnlyBestModelPerAlgorithm:
                    default: false
                    description: Indicates if multiple models with the same algorithm
                      are produced by the ModelClass, the model with the lowest score
                      will be garbage-collected
                    type: boolean
                  keepPrunedModels:
                    default: false
                    description: Indicates if we should keep pruned models model with
                      the lowest score will be garbage-collected
                    type: boolean
                type: object
              groupLocations:
                description: In case of a group by, those are the group locations
                properties:
                  groupTestingDataFile:
                    description: The folder of group data
                    type: string
                  groupTrainingDataFile:
                    description: The folder of group data
                    type: string
                type: object
              imbalanceHandler:
                description: Set the imbalance dataset handling.
                properties:
                  enabled:
                    default: true
                    description: Indicates if imbalance handling is enabled
                    type: boolean
                  imbalance:
                    default: auto
                    description: The technique that will be used to handle the imbalanced
                      dataset
                    enum:
                    - adasyn
                    - baseline-smote
                    - kmean-smote
                    - random-over-sampler
                    - smote
                    - smotenc
                    - svmsmote
                    - none
                    - auto
                    - class-weights
                    type: string
                type: object
              interpretability:
                description: Interpretability specifies the parameters to create interpretability
                  visualizations for the final model
                properties:
                  anchor:
                    default: false
                    description: Indicates if anchor explanation diagrams will be
                      generated
                    type: boolean
                  counterfactual:
                    default: false
                    description: Indicates if counter-factual diagrams will be generated
                    type: boolean
                  ice:
                    default: true
                    description: Indicates if ICE (individual condition expectation)
                      plots will be generated
                    type: boolean
                  icepairs:
                    description: The collection of feature pairs to generate ICE scatter
                      diagrams for each
                    items:
                      properties:
                        x:
                          type: string
                        "y":
                          type: string
                      type: object
                    type: array
                  lime:
                    default: false
                    description: Indicates if LIME (local interpretable model-agnostic
                      explanations) diagrams will be generated
                    type: boolean
                  shap:
                    default: auto
                    description: The type of SHAP values to be generated. Linear and
                      tree values are the only recommended types due to the high compute
                      times of other methods
                    enum:
                    - permutation
                    - partition
                    - tree
                    - kernel
                    - sampling
                    - linear
                    - deep
                    - gradient
                    - auto
                    - none
                    type: string
                  shappairs:
                    description: The collection of feature pairs to generate SHAP
                      scatter diagrams for each
                    items:
                      properties:
                        x:
                          type: string
                        "y":
                          type: string
                      type: object
                    type: array
                type: object
              labRef:
                description: The reference to the Lab under which the Model resources
                  created by the Study will be trained. If unspecified, the default
                  Lab from the parent DataProduct will be used
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              location:
                description: The data location where Study artifacts (metadata, reports,
                  and model artifacts) generated by the Study will be stored
                properties:
                  bucketName:
                    default: ""
                    description: In the case of the location type being an object
                      storage system, BucketName is the name of the VirtualBucket
                      resource that exists in the same tenant as the resource specifying
                      the DataLocation. Modela will connect to the external object
                      storage system, and will access the file from the path specified
                      by the Path field
                    type: string
                  connectionName:
                    default: ""
                    description: In the case of the type of location being a database,
                      ConnectionName specifies the name of the Connection resource
                      that exists in the same tenant as the resource specifying the
                      DataLocation. Modela will attempt to connect to the database
                      using the credentials specified in the Connection, and will
                      execute the query specified by the SQL field
                    type: string
                  database:
                    default: ""
                    description: The name of a database inside the database system
                      specified by the ConnectionName field
                    type: string
                  path:
                    default: ""
                    description: The path to a flat-file inside an object storage
                      system. When using the Modela API to upload files (through the
                      FileService API), Modela will upload the data to a predetermined
                      path based on the Tenant, DataProduct, DataProductVersion, and
                      resource type of the resource in relation to the file being
                      uploaded. The path does not need to adhere to this format; you
                      can give the path to a file inside a bucket not managed by Modela
                    type: string
                  resourceRef:
                    description: In the case of the location type being Dataset or
                      PublicDataset, ResourceRef references another resource that
                      containing data that will be used as a data source
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  sql:
                    default: ""
                    description: The SQL statement which will be executed to query
                      data from the table specified by Table
                    type: string
                  table:
                    default: ""
                    description: The name of a table inside a database, if applicable
                    type: string
                  topic:
                    default: ""
                    description: The name of the streaming topic (currently unsupported)
                    type: string
                  type:
                    default: object
                    description: The type of location where the data resides, which
                      can either be an object inside an object storage system (i.e.
                      Minio), a SQL location like a table or a view, a data stream
                      (i.e. Kafka, currently unsupported), or a web location (currently
                      unsupported)
                    enum:
                    - object
                    - table
                    - view
                    - stream
                    - web
                    - public-dataset
                    - dataset
                    type: string
                  url:
                    default: ""
                    description: In the case of the location type being WebApi, URL
                      specifies the external location (HTTP or Git) that will be queried
                      and then stored as flat-file by the resource which specifies
                      the DataLocation
                    type: string
                type: object
              modelClassName:
                description: The model class for this study if the model was created
                  by a model class
                type: string
              modelClassRunName:
                description: If this study was created by a model class run, this
                  is the run name
                type: string
              modelExplained:
                default: true
                description: ModelExplained indicates if interpretability diagrams,
                  as specified by the Interpretability field, will be produced for
                  the final model
                type: boolean
              modelImage:
                description: ModelImage specifies the configuration to upload Docker
                  images of models to an image registry
                properties:
                  exist:
                    default: false
                    type: boolean
                  imageName:
                    default: ""
                    description: The full name of the image to upload to
                    type: string
                  registryConnectionName:
                    default: ""
                    description: The name of the Connection resource to an external
                      Docker image registry
                    type: string
                type: object
              modelImagePushed:
                default: false
                description: ModelImagePushed indicates that if a Docker image of
                  the best model will be pushed to a Docker image registry
                type: boolean
              modelPublished:
                default: false
                description: ModelPublished indicates that a Docker image will be
                  created containing the best model produced by the Study
                type: boolean
              modelVersion:
                default: ""
                description: ModelVersion specifies the version assigned to all the
                  Model resources produced by the Study
                type: string
              notification:
                description: The notification specification that determines which
                  notifiers will receive Alerts generated by the object
                properties:
                  errorTTL:
                    default: 3600
                    description: Time-to-live for error messages, in seconds
                    format: int32
                    type: integer
                  notifierName:
                    default: ""
                    description: The name of the Notifier which exists in the same
                      tenant as the resource specifying the NotificationSpec
                    type: string
                  selector:
                    additionalProperties:
                      type: string
                    description: The labels which will be searched for in all Notifiers
                      to determine the target Notifiers
                    type: object
                  successTTL:
                    default: 3600
                    description: Time-to-live for success messages. In seconds
                    format: int32
                    type: integer
                type: object
              owner:
                default: no-one
                description: The name of the Account which created the object, which
                  exists in the same tenant as the object
                type: string
              paused:
                default: false
                description: Paused indicates that the execution of new workloads
                  associated with the Study should be paused
                type: boolean
              profiled:
                default: true
                description: Profiled indicates that the Study will be profiled after
                  the conclusion of it's model search
                type: boolean
              reported:
                default: true
                description: Reported indicates that a report will be generated for
                  the Study
                type: boolean
              schedule:
                description: Schedule specifies the configuration to execute the Study
                  at a later date
                properties:
                  enabled:
                    default: false
                    description: Indicates if the schedule is enabled
                    type: boolean
                  startAt:
                    description: The time at which the ModelClass will begin execution
                    format: date-time
                    type: string
                type: object
              search:
                description: Search specifies the configuration to perform the model
                  search for the best algorithm and hyper-parameters
                properties:
                  earlyStop:
                    description: The number of new models produced by the search which,
                      if there is no improvement in score, the model search will conclude
                    properties:
                      enabled:
                        default: true
                        description: Indicates if early stopping is enabled
                        type: boolean
                      initial:
                        default: 20
                        description: The number of models to train before model objective
                          metrics will begin to be checked for early stopping
                        format: int32
                        type: integer
                      minModelsWithNoProgress:
                        default: 5
                        description: The number of models with no improvement in score
                          that are required to abort the model search
                        format: int32
                        type: integer
                    type: object
                  goal:
                    default: maximize
                    type: string
                  maxCost:
                    default: 100
                    description: The maximum cost that can be incurred before stopping
                      the model search (applicable for deep learning models)
                    format: int32
                    maximum: 1000
                    minimum: 1
                    type: integer
                  maxModels:
                    default: 10
                    description: The maximum number of candidate models that will
                      be sampled and trained
                    format: int32
                    maximum: 1000
                    minimum: 1
                    type: integer
                  maxTime:
                    default: 60
                    description: The maximum number of minutes, that the model search
                      can run for
                    format: int32
                    maximum: 10000
                    minimum: 1
                    type: integer
                  minBestScore:
                    default: 9999999999
                    description: The minimum best score needed to finish the search.
                      The system will finish the search when the minimum is reached.
                      Note that this number can be negative for a regression.
                    type: number
                  objective:
                    description: The objective metric that will be measured against
                      all models to evaluate their performance
                    properties:
                      goal:
                        default: maximize
                        description: The goal of the objective.
                        type: string
                      metric:
                        description: The objective metric
                        type: string
                    type: object
                  objective2:
                    description: The second objective metric that will be measured
                      and evaluated in tandem with the primary objective. The model
                      search optimizer will attempt to optimize both metrics
                    properties:
                      goal:
                        default: maximize
                        description: The goal of the objective.
                        type: string
                      metric:
                        description: The objective metric
                        type: string
                    type: object
                  pruner:
                    description: Pruner specifies the configuration to run a model
                      search using a pruning algorithm. Using a pruning algorithm
                      allows you to train a large number of candidate models with
                      a subset of the dataset
                    properties:
                      hyperband:
                        properties:
                          bootstrapCount:
                            default: 0
                            description: Parameter specifying the number of trials
                              required in a rung before any trial can be promoted
                            format: int32
                            type: integer
                          maxResources:
                            default: 1
                            description: A parameter for specifying the maximum resource
                              allocated to a trial
                            format: int32
                            type: integer
                          minResources:
                            default: 1
                            description: "A parameter for specifying the minimum resource
                              allocated to a trial noted as \U0001D45F in the paper"
                            format: int32
                            type: integer
                          reductionFactor:
                            default: 3
                            description: A parameter for specifying reduction factor
                              of promotable trials
                            format: int32
                            type: integer
                        type: object
                      median:
                        properties:
                          intervalSteps:
                            default: 1
                            description: Interval in number of steps between the pruning
                              checks
                            format: int32
                            type: integer
                          minTrials:
                            default: 1
                            description: Minimum number of reported trials.
                            format: int32
                            type: integer
                          startupTrials:
                            default: 5
                            description: Pruning is disabled until the given number
                              of trials finish in the same ModelClass.
                            format: int32
                            type: integer
                          warmupSteps:
                            default: 0
                            description: Pruning is disabled until the trial exceeds
                              the given number of step
                            format: int32
                            type: integer
                        type: object
                      percentile:
                        properties:
                          intervalTrials:
                            default: 1
                            description: Interval in number of steps between the pruning
                              checks
                            format: int32
                            type: integer
                          minTrials:
                            default: 1
                            description: Minimum number of reported trials.
                            format: int32
                            type: integer
                          percentile:
                            default: 25
                            description: Percentile which must be between 0 and 100
                              inclusive
                            format: int32
                            maximum: 100
                            minimum: 0
                            type: integer
                          startupTrials:
                            default: 5
                            description: Pruning is disabled until the given number
                              of trials finish in the same ModelClass.
                            format: int32
                            type: integer
                          warmupSteps:
                            default: 0
                            description: Pruning is disabled until the trial exceeds
                              the given number of step
                            format: int32
                            type: integer
                        type: object
                      successiveHalving:
                        properties:
                          bootstrapCount:
                            default: 0
                            description: Minimum number of trials that need to complete
                              a rung before any trial is considered for promotion
                              into the next rung.
                            format: int32
                            type: integer
                          minEarlyStoppingRate:
                            default: 0
                            description: A parameter for specifying the minimum early-stopping
                              rate
                            format: int32
                            type: integer
                          minResources:
                            default: 1
                            description: Minimum number of reported trials.
                            format: int32
                            type: integer
                          reductionFactor:
                            default: 4
                            description: A parameter for specifying reduction factor
                              of promotable trials
                            format: int32
                            type: integer
                        type: object
                      threshold:
                        properties:
                          intervalSteps:
                            default: 1
                            description: Interval in number of steps between the pruning
                              checks
                            format: int32
                            type: integer
                          lower:
                            default: 0
                            description: A minimum value which determines whether
                              pruner prunes or not. If an intermediate value is smaller
                              than lower, it prunes.
                            type: number
                          upper:
                            default: 0
                            description: A maximum value which determines whether
                              pruner prunes or not. If an intermediate value is larger
                              than upper, it prunes.
                            type: number
                          warmupSteps:
                            default: 0
                            description: Pruning is disabled until the trial exceeds
                              the given number of step
                            format: int32
                            type: integer
                        type: object
                      type:
                        default: median-pruner
                        description: The type of pruner to use during model search
                        enum:
                        - patient-pruner
                        - median-pruner
                        - percentile-pruner
                        - successive-halving-pruner
                        - hyperband-pruner
                        - threshold-pruner
                        type: string
                    type: object
                  retainTop:
                    default: 1
                    description: The number of top candidate models, sorted by their
                      objective score, that will be retained in the case that garbage
                      collection is enabled. All other models will be archived
                    format: int32
                    maximum: 100
                    minimum: 0
                    type: integer
                  retainedFor:
                    default: 60
                    description: The time, in minutes, for which candidate models
                      (excluding the best model) will be retained, after which they
                      will be archived
                    format: int32
                    maximum: 2400
                    minimum: 0
                    type: integer
                  sampler:
                    default: tpe
                    description: The hyper-parameter optimization search method
                    enum:
                    - random
                    - grid
                    - bayesian
                    - tpe
                    - manual
                    - auto
                    type: string
                  searchSpace:
                    description: SearchSpace specifies the algorithms available to
                      candidate models
                    properties:
                      custom:
                        description: Set a custom hyper parameter spaace. Specify
                          custom ranges per estimator.
                        items:
                          description: Define a single custom search spec for a single
                            alg
                          properties:
                            name:
                              description: The algorithm name
                              type: string
                            ranges:
                              description: Specify one or more parameters ranges.
                                This parameters will override the default ranges
                              items:
                                description: Parameter range indicate a single hyper
                                  parameter range
                                properties:
                                  choices:
                                    description: Set of choices for categorical variable
                                    items:
                                      type: string
                                    type: array
                                  conditional:
                                    description: If true this parameter is condition
                                      on another parameter value
                                    type: boolean
                                  defaultChoice:
                                    description: Default Choice for categorical variable.
                                    type: string
                                  defaultValue:
                                    description: DefaultValue is the default value
                                      of the parameter
                                    type: number
                                  high:
                                    description: High is the maximum value of the
                                      hyper parameter range
                                    type: number
                                  log:
                                    description: If the scale is logaritimic
                                    type: boolean
                                  low:
                                    description: Low is the minimum value of the hyperparameter
                                      range
                                    type: number
                                  name:
                                    description: Name is the name of the hyper parameter
                                    type: string
                                  parent:
                                    description: Parent parameter name
                                    type: string
                                  parentValueCat:
                                    description: The parent value in order for this
                                      parameter to be active.
                                    type: string
                                  parentValueFloat:
                                    description: The parent value in order for this
                                      parameter to be active.
                                    type: number
                                  parentValueInteger:
                                    description: The parent value in order for this
                                      parameter to be active.
                                    format: int32
                                    type: integer
                                  step:
                                    description: Step for discrete variable.
                                    format: int32
                                    type: integer
                                  type:
                                    description: Type is the datatype of the parameter
                                    enum:
                                    - float
                                    - int
                                    - categorical
                                    type: string
                                type: object
                              type: array
                          type: object
                        type: array
                      exclude:
                        description: Which algorithm to exclude If empty, all algorithms
                          will be available for training
                        items:
                          type: string
                        type: array
                      include:
                        description: Which algorithm to include If empty, all algorithms
                          will be available for training
                        items:
                          type: string
                        type: array
                    type: object
                  test:
                    default: 1
                    description: The number of top candidate models that will be moved
                      to the testing phase once the model search is complete. By default,
                      only the best model will be retained
                    format: int32
                    maximum: 5
                    minimum: 1
                    type: integer
                  trainers:
                    default: 1
                    description: The desired number of trainers that will train candidate
                      models in parallel. The number of trainers is restricted based
                      on the allowance provided by the active License
                    format: int32
                    maximum: 50
                    minimum: 0
                    type: integer
                  tune:
                    default: false
                    description: Tune best model
                    type: boolean
                type: object
              servingTemplate:
                description: ServingTemplate specifies the model format and resource
                  requirements that will be applied to the Predictor created for the
                  Model that will be selected by the Study
                properties:
                  access:
                    description: Access specifies the configuration for the Predictor
                      service to be exposed externally
                    properties:
                      accessType:
                        default: cluster-ip
                        description: The Kubernetes-native access method which specifies
                          how the Kubernetes Service created by the Predictor will
                          be exposed. See https://modela.ai/docs/docs/serving/production/#access-method
                          for a detailed description of each access type (defaults
                          to cluster-ip)
                        enum:
                        - cluster-ip
                        - node-port
                        - load-balancer
                        - ingress
                        - mesh
                        - none
                        type: string
                      apikeySecretRef:
                        description: ApiKeySecretRef references a Kubernetes Secret
                          containing an API key that must be passed in prediction
                          requests to the Predictor
                        properties:
                          name:
                            description: name is unique within a namespace to reference
                              a secret resource.
                            type: string
                          namespace:
                            description: namespace defines the space within which
                              the secret name must be unique.
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      authMethod:
                        default: none
                        description: Indicates
                        enum:
                        - api-token
                        - jwt-token
                        - none
                        type: string
                      nodePort:
                        description: The port number that will be exposed on the external
                          address of every node on the cluster, in the case of the
                          Predictor's access type being NodePort. Traffic from the
                          port will be forwarded to the Predictor's backend service
                        format: int32
                        maximum: 65535
                        minimum: 0
                        type: integer
                      path:
                        default: ""
                        description: The auto-generated DNS path where the Predictor
                          service can be accessed. If the access type is ClusterIP,
                          it will be a cluster-internal DNS name (i.e. predictor.default-serving-site.svc.cluster.local).
                          In the case of the Ingress access type, it will be determined
                          by the FQDN of the host ServingSite (i.e. predictor.default-serving-site.your-domain.ai).
                        maxLength: 256
                        type: string
                      port:
                        default: 8080
                        description: The port number that will be exposed on the Predictor's
                          Pods to serve prediction traffic through the GRPCInferenceService
                          API. The Kubernetes Service created by the Predictor will
                          expose the port and forward GRPC traffic to the backend
                          pods
                        format: int32
                        maximum: 65535
                        minimum: 1024
                        type: integer
                      rest:
                        default: false
                        description: Indicates if the prediction service should expose
                          an additional port to serve the GRPCInferenceService API
                          through REST. The port one digit above the number specified
                          by the Port field will be exposed to accept HTTP/1.1 traffic
                        type: boolean
                    type: object
                  approvedAt:
                    description: ApprovedAt indicates the time of approval
                    format: date-time
                    type: string
                  approvedBy:
                    description: ApprovedBy indicates the account that approve this
                      model.
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  dashboard:
                    description: Create A DataApp, and enable dashboard access to
                      the model
                    type: boolean
                  enabled:
                    default: false
                    description: If true, deploy the model if it is ready. The model
                      is deployed to the serving site
                    type: boolean
                  manual:
                    description: If true, the model must be approved before moving
                      it to production
                    type: boolean
                  online:
                    description: Create an online predictor to host the model and
                      enable real time ML.
                    type: boolean
                  predictorName:
                    description: The name of the predictor if exist to update.
                    type: string
                  predictorTemplateName:
                    description: The name of the predictor template to use when
                    type: string
                  replicas:
                    description: The number of replicas for the Kubernetes Serving
                      associated with the Predictor, which will instantiate multiple
                      copies of the service in the case that automatic scaling is
                      disabled
                    format: int32
                    type: integer
                  resources:
                    description: ResourceSpec specifies the amount of resources that
                      will be allocated to a workload
                    properties:
                      cpuImage:
                        description: Reference to the managed CPU trainer image, used
                          internally
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      custom:
                        default: false
                        description: If true, ignore the workload class name.
                        type: boolean
                      gpuImage:
                        description: Reference to the managed GPU trainer image, used
                          internally
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      requirements:
                        description: The custom resource requirements for the workload,
                          which are used if `WorkloadName` is not set
                        properties:
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                      workloadName:
                        default: general-large
                        description: If this resource is based on the workload, this
                          field contain the name of the workload. The name of a WorkloadClass.
                          The system will use the resource requirements described
                          by the WorkloadClass
                        type: string
                    type: object
                  servingSiteRef:
                    description: The reference to the serving site, where online predictor
                      will be served. If unspecified, the default Lab from the parent
                      DataProduct will be used
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  shadowFirst:
                    description: Deploy it as shadow model first.
                    type: boolean
                type: object
              subtask:
                default: none
                description: The machine learning subtask relevant to the primary
                  task (text classification, image object detection, etc.)
                enum:
                - text-ner
                - text-classification
                - text-multi-classification
                - text-regression
                - text-multi-label-classification
                - text-conversation
                - text-lang-generation
                - text-lang-model
                - text-multi-modal
                - text-ner
                - text-qa
                - text-summarization
                - text-sentence-pair
                - text-representation-generation
                - text-sentiment-analysis
                - text-code-generation
                - text-translation
                - text-lang-detection
                - text-grammar-correction
                - text-paraphrasing
                - text-intent-classification
                - text-semantic-similarity
                - text-keyword-extraction
                - text-pos
                - text-tokenization
                - text-lemma
                - image-classification
                - image-multi-label-classification
                - image-object-detection
                - image-segmentation
                - none
                type: string
              task:
                description: The machine learning task type (i.e. regression, classification)
                enum:
                - binary-classification
                - multi-classification
                - forecasting
                - regression
                - clustering
                - recommendation
                - outlier-detection
                - novelty-detection
                - auto
                - unknown
                - partition-forecasting
                - monitoring
                type: string
              template:
                default: false
                description: Indicates if the Study is a template, in which case it
                  will not be executed
                type: boolean
              timeout:
                default: 14400
                description: The time, in seconds, after which the execution of the
                  Study will be forcefully aborted (4 hours, by default)
                format: int32
                type: integer
              trainingTemplate:
                description: TrainingTemplate specifies the configuration to train
                  and evaluate models
                properties:
                  checkpoint:
                    description: Checkpoint specifies the location to store model
                      checkpoints
                    properties:
                      checkpointInterval:
                        default: 10
                        description: The interval, in minutes, at which a snapshot
                          of a partially trained model will be saved. Applicable to
                          models with long training times for resiliency if training
                          is suddenly stopped
                        format: int32
                        minimum: 0
                        type: integer
                      enabled:
                        default: false
                        description: Indicates if checkpointing is enabled.
                        type: boolean
                      location:
                        description: The location of the model checkpoint
                        properties:
                          bucketName:
                            default: ""
                            description: In the case of the location type being an
                              object storage system, BucketName is the name of the
                              VirtualBucket resource that exists in the same tenant
                              as the resource specifying the DataLocation. Modela
                              will connect to the external object storage system,
                              and will access the file from the path specified by
                              the Path field
                            type: string
                          connectionName:
                            default: ""
                            description: In the case of the type of location being
                              a database, ConnectionName specifies the name of the
                              Connection resource that exists in the same tenant as
                              the resource specifying the DataLocation. Modela will
                              attempt to connect to the database using the credentials
                              specified in the Connection, and will execute the query
                              specified by the SQL field
                            type: string
                          database:
                            default: ""
                            description: The name of a database inside the database
                              system specified by the ConnectionName field
                            type: string
                          path:
                            default: ""
                            description: The path to a flat-file inside an object
                              storage system. When using the Modela API to upload
                              files (through the FileService API), Modela will upload
                              the data to a predetermined path based on the Tenant,
                              DataProduct, DataProductVersion, and resource type of
                              the resource in relation to the file being uploaded.
                              The path does not need to adhere to this format; you
                              can give the path to a file inside a bucket not managed
                              by Modela
                            type: string
                          resourceRef:
                            description: In the case of the location type being Dataset
                              or PublicDataset, ResourceRef references another resource
                              that containing data that will be used as a data source
                            properties:
                              apiVersion:
                                description: API version of the referent.
                                type: string
                              fieldPath:
                                description: 'If referring to a piece of an object
                                  instead of an entire object, this string should
                                  contain a valid JSON/Go field access statement,
                                  such as desiredState.manifest.containers[2]. For
                                  example, if the object reference is to a container
                                  within a pod, this would take on a value like: "spec.containers{name}"
                                  (where "name" refers to the name of the container
                                  that triggered the event) or if no container name
                                  is specified "spec.containers[2]" (container with
                                  index 2 in this pod). This syntax is chosen only
                                  to have some well-defined way of referencing a part
                                  of an object. TODO: this design is not final and
                                  this field is subject to change in the future.'
                                type: string
                              kind:
                                description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                              namespace:
                                description: 'Namespace of the referent. More info:
                                  https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                type: string
                              resourceVersion:
                                description: 'Specific resourceVersion to which this
                                  reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                type: string
                              uid:
                                description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                          sql:
                            default: ""
                            description: The SQL statement which will be executed
                              to query data from the table specified by Table
                            type: string
                          table:
                            default: ""
                            description: The name of a table inside a database, if
                              applicable
                            type: string
                          topic:
                            default: ""
                            description: The name of the streaming topic (currently
                              unsupported)
                            type: string
                          type:
                            default: object
                            description: The type of location where the data resides,
                              which can either be an object inside an object storage
                              system (i.e. Minio), a SQL location like a table or
                              a view, a data stream (i.e. Kafka, currently unsupported),
                              or a web location (currently unsupported)
                            enum:
                            - object
                            - table
                            - view
                            - stream
                            - web
                            - public-dataset
                            - dataset
                            type: string
                          url:
                            default: ""
                            description: In the case of the location type being WebApi,
                              URL specifies the external location (HTTP or Git) that
                              will be queried and then stored as flat-file by the
                              resource which specifies the DataLocation
                            type: string
                        type: object
                    type: object
                  cv:
                    default: true
                    description: Indicates if cross-validation should be used to score
                      models
                    type: boolean
                  cvtype:
                    default: kfold
                    description: The type of cross-validation to use, in the case
                      that a validation dataset is not enabled
                    enum:
                    - none
                    - group-kfold
                    - group-shuffle-split
                    - kfold
                    - leave-one-group-out
                    - leave-p-groups-out
                    - leave-one-out
                    - leave-p-out
                    - predefined-split
                    - repeated-kfold
                    - repeated-stratified-k-fold
                    - shuffle-split
                    - stratified-k-fold
                    - stratified-shuffle-split
                    - stratified-group-k-fold
                    - time-series-split
                    type: string
                  distributed:
                    default: false
                    description: Indicates if model training will be distributed across
                      multiple nodes (currently unimplemented)
                    type: boolean
                  evalMetrics:
                    description: EvalMetrics specifies the collection of metrics that
                      will be evaluated after model training is complete
                    items:
                      type: string
                    type: array
                  featureImportance:
                    default: true
                    description: Indicates if feature importance for the model will
                      be computed as part of training. Some algorithms (e.g. Random
                      Forest) have built in support for feature importance
                    type: boolean
                  folds:
                    default: 5
                    description: The number of folds to use during cross-validation
                    format: int32
                    type: integer
                  gpu:
                    default: false
                    description: Indicates if a GPU will be allocated for model training
                    type: boolean
                  labRef:
                    description: The reference to the Lab under which the model training
                      Job will be created
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  logLevel:
                    default: info
                    description: The maximum log level for logs produced by Jobs associated
                      with the Model
                    enum:
                    - trace
                    - debug
                    - info
                    - error
                    type: string
                  nodeCount:
                    default: 1
                    description: The number of nodes to use, in the case of distributed
                      training
                    format: int32
                    type: integer
                  priority:
                    default: medium
                    description: The priority of the Kubernetes Job created by the
                      Model (medium, by default)
                    enum:
                    - low
                    - medium
                    - high
                    - urgent
                    type: string
                  resources:
                    description: Resources specifies the resource requirements allocated
                      to the model training workload
                    properties:
                      cpuImage:
                        description: Reference to the managed CPU trainer image, used
                          internally
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      custom:
                        default: false
                        description: If true, ignore the workload class name.
                        type: boolean
                      gpuImage:
                        description: Reference to the managed GPU trainer image, used
                          internally
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      requirements:
                        description: The custom resource requirements for the workload,
                          which are used if `WorkloadName` is not set
                        properties:
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                      workloadName:
                        default: general-large
                        description: If this resource is based on the workload, this
                          field contain the name of the workload. The name of a WorkloadClass.
                          The system will use the resource requirements described
                          by the WorkloadClass
                        type: string
                    type: object
                  samplePct:
                    default: 100
                    description: The number percentage (0 through 100) of rows to
                      be used during training
                    format: int32
                    type: integer
                  seed:
                    default: 42
                    description: The random state used for the model's estimator,
                      if applicable (for example, in RandomForestClassifier)
                    type: number
                  sh:
                    description: SuccessiveHalving specifies the configuration for
                      a Study to execute a model search using successive halving
                    properties:
                      bracket:
                        description: The bracket of the model
                        format: int32
                        maximum: 128
                        minimum: 0
                        type: integer
                      budget:
                        description: The budget to be used in a multi-fidelity search,
                          for example the number of epochs or the percentage of data
                          to train the model with
                        format: int32
                        maximum: 128
                        minimum: 0
                        type: integer
                      confID:
                        description: The configuration ID allocated to the model
                        format: int32
                        type: integer
                      modality:
                        description: The type of modality, based on the type of model
                          For classical models, it should be based on data percentage
                          For deep models, it should be based on epochs
                        enum:
                        - data
                        - epochs
                        type: string
                      rung:
                        description: The rung of the model
                        format: int32
                        maximum: 128
                        minimum: 0
                        type: integer
                    type: object
                  split:
                    description: Split specifies the configuration to generate training,
                      testing, and validation datasets
                    properties:
                      method:
                        default: auto
                        description: The type of split method
                        enum:
                        - random
                        - split-column
                        - time
                        - random-stratified
                        - auto
                        - test-dataset
                        type: string
                      segments:
                        description: The collection of segments
                        items:
                          properties:
                            columnName:
                              description: The name of the column
                              type: string
                            op:
                              description: The segment operation
                              enum:
                              - lt
                              - eq
                              - gt
                              - ne
                              - le
                              - ge
                              type: string
                            value:
                              description: The value operation
                              type: string
                          type: object
                        type: array
                      splitColumn:
                        description: The name of the column containing a binary value
                          that indicates if the row should be split. The split type
                          must use split-column in order for SplitColumn to have an
                          effect
                        type: string
                      test:
                        default: 20
                        description: The number percentage (0 through 100) of rows
                          that will be allocated to the training dataset
                        format: int32
                        maximum: 100
                        minimum: 0
                        type: integer
                      testDataset:
                        default: ""
                        description: The name of the Entity resource which will be
                          used as the testing dataset, applicable if the split type
                          uses test-dataset. If enabled, the training dataset will
                          not be split and used as-is If empty, we will not use test
                          dataset
                        type: string
                      train:
                        default: 80
                        description: The number percentage (0 through 100) of rows
                          that will be allocated to the training dataset
                        format: int32
                        maximum: 100
                        minimum: 1
                        type: integer
                      trainDataset:
                        default: ""
                        description: The name of the Entity resource which will be
                          used as the training dataset
                        type: string
                      validation:
                        default: 0
                        description: The number percentage (0 through 100) of rows
                          that will be allocated to the validation dataset. If Validation
                          is set to 0 the model will default to use cross-validation
                        format: int32
                        maximum: 50
                        minimum: 0
                        type: integer
                      validationDataset:
                        default: ""
                        description: The name of the Entity resource which will be
                          used as the validation dataset, applicable if the split
                          type uses test-dataset. If enabled, the training dataset
                          will not be split and used as-is
                        type: string
                    type: object
                  timeoutInSecs:
                    default: 600
                    description: The maximum time, in seconds, that Jobs associated
                      with the Model can run for before being forcefully cancelled.
                    format: int32
                    type: integer
                type: object
              ttl:
                default: 0
                description: The time-to-live, in seconds, for Model resources produced
                  by the Study
                format: int32
                type: integer
              unitTestsTemplate:
                description: A template for models unit tests
                properties:
                  enabled:
                    description: If false, this test case is disabled
                    type: boolean
                  tests:
                    items:
                      properties:
                        assertThat:
                          description: The assertion type
                          type: string
                        column:
                          description: If unit test is column test, this is the name
                            of the column
                          type: string
                        column2:
                          description: For test that involve two columns (e.g. correlation)
                          type: string
                        columns:
                          description: If unit test is column test, this is the name
                            of the column
                          items:
                            type: string
                          type: array
                        compareToRef:
                          description: Reference to another entity which is a ref.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead
                                of an entire object, this string should contain a
                                valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container
                                within a pod, this would take on a value like: "spec.containers{name}"
                                (where "name" refers to the name of the container
                                that triggered the event) or if no container name
                                is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to
                                have some well-defined way of referencing a part of
                                an object. TODO: this design is not final and this
                                field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info:
                                https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this
                                reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        dataFilter:
                          description: Sql statement to filter the data for this unit
                            test
                          type: string
                        enabled:
                          description: If false, this test case is disabled
                          type: boolean
                        entityRef:
                          description: Reference to an entity.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead
                                of an entire object, this string should contain a
                                valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container
                                within a pod, this would take on a value like: "spec.containers{name}"
                                (where "name" refers to the name of the container
                                that triggered the event) or if no container name
                                is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to
                                have some well-defined way of referencing a part of
                                an object. TODO: this design is not final and this
                                field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info:
                                https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this
                                reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        entityRef2:
                          description: Reference to an entity.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead
                                of an entire object, this string should contain a
                                valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container
                                within a pod, this would take on a value like: "spec.containers{name}"
                                (where "name" refers to the name of the container
                                that triggered the event) or if no container name
                                is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to
                                have some well-defined way of referencing a part of
                                an object. TODO: this design is not final and this
                                field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info:
                                https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this
                                reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        expectedCategory:
                          description: The expected value
                          type: string
                        expectedSet:
                          description: Expected set of values,if the assertion
                          items:
                            type: string
                          type: array
                        expectedValue:
                          description: The expected numerical value
                          type: number
                        featureFilter:
                          description: Filter the filter for this unit test.
                          type: string
                        generated:
                          description: Indicates if this validation rule was automatically
                            generated by the system
                          type: boolean
                        lower:
                          description: For range based tests.
                          format: float
                          type: number
                        lowerInclusive:
                          type: boolean
                        metric:
                          description: The metric that is used for the test
                          type: string
                        name:
                          description: The name of the test case, will be generate
                            if empty by the combination of assertion, entity ref,
                            column name and metric
                          type: string
                        periods:
                          description: The length of the past if we are comparing
                            to moving avg
                          format: int32
                          type: integer
                        referenceType:
                          description: Set the reference type for this unit test
                          type: string
                        tags:
                          description: The test case tags, used for filtering. Optional
                            Test Tags
                          items:
                            type: string
                          type: array
                        type:
                          description: The test type The type of the data test
                          type: string
                        upper:
                          format: float
                          type: number
                        upperInclusive:
                          type: boolean
                      type: object
                    type: array
                type: object
              versionName:
                default: ""
                description: The name of the DataProductVersion which describes the
                  version of the resource that exists in the same DataProduct namespace
                  as the resource
                maxLength: 63
                type: string
            required:
            - datasetName
            - task
            type: object
          status:
            description: StudyStatus defines the observed state of a Study
            properties:
              baseline:
                description: BaselineStatus contains the status of the baseline phase
                properties:
                  bestScore:
                    description: Best score so far in this phase. The best score is
                      the value of the objective.
                    type: number
                  completedAt:
                    description: The time at which the phase concluded
                    format: date-time
                    type: string
                  completedModelsCount:
                    description: The number of models that have been successfully
                      trained
                    format: int32
                    type: integer
                  failedModelsCount:
                    description: The number of models that experienced an error whilst
                      training
                    format: int32
                    type: integer
                  modelsWithNoProgress:
                    description: Actual number of models where no progress was made.
                      This used to decide on early stop.
                    format: int32
                    type: integer
                  runningModelsCount:
                    description: The number of models currently being trained
                    format: int32
                    type: integer
                  startedAt:
                    description: The time at which the phase started
                    format: date-time
                    type: string
                  waitingModelsCount:
                    description: The number of models pending training
                    format: int32
                    type: integer
                type: object
              bestFE:
                description: BestFE specifies the best feature engineering pipeline
                  produced by the Study
                properties:
                  imbalance:
                    default: auto
                    description: The method which will be used to handle an imbalanced
                      dataset
                    enum:
                    - adasyn
                    - baseline-smote
                    - kmean-smote
                    - random-over-sampler
                    - smote
                    - smotenc
                    - svmsmote
                    - none
                    - auto
                    - class-weights
                    type: string
                  pipelines:
                    description: Pipelines contains the collection of feature engineering
                      pipelines that will be applied to a dataset prior to model training
                    items:
                      description: FeatureEngineeringPipeline represent a single pipeline
                        to transform a dataset
                      properties:
                        audio:
                          description: Audio specifies the pipeline to handle audio
                            data (currently unsupported)
                          properties:
                            featurizer:
                              default: auto
                              description: The date time imputer.
                              type: string
                          type: object
                        columns:
                          description: The collection of columns which the pipeline
                            applies to. Each column in the dataset with the data type
                            of the pipeline should be added to the collection of columns
                          items:
                            type: string
                          type: array
                        custom:
                          description: Custom specifies a collection of columns to
                            be generated. Custom columns are specified by end-users
                          items:
                            description: GeneratedColumnSpec describes a column to
                              be generated and applied to a dataset
                            properties:
                              datatype:
                                description: The resulting data type
                                enum:
                                - boolean
                                - datetime
                                - number
                                - categorical
                                - ordinal
                                - text
                                - json
                                - number-list
                                - categorical-list
                                - text-list
                                type: string
                              first:
                                description: The name of the first original column
                                type: string
                              name:
                                description: The name of the generated column
                                type: string
                              original:
                                description: The expression to apply in order to generate
                                  the new column
                                type: string
                              second:
                                description: The name of the second original column,
                                  if the expression is binary operator
                                type: string
                            type: object
                          type: array
                        datatype:
                          description: The type of data which the pipeline applies
                            to
                          enum:
                          - boolean
                          - datetime
                          - number
                          - categorical
                          - ordinal
                          - text
                          - json
                          - number-list
                          - categorical-list
                          - text-list
                          type: string
                        datetimeTransformation:
                          default: none
                          description: The method to use when handling the date-time
                            data type
                          enum:
                          - extract-datetime-information
                          - none
                          - auto
                          type: string
                        discretisation:
                          default: none
                          description: The discretisation method, which converts numerical
                            data types to discrete variables
                          enum:
                          - equal-width-discretisation-
                          - equal-freq-discretisation
                          - kbin-discretisation
                          - kernel-centerer-discretisation
                          - label-binarizer-discretisation
                          - multi-label-binarizer-discretisation
                          - none
                          - auto
                          type: string
                        drop:
                          default: false
                          description: Indicates if all of all the columns specified
                            by the Columns field should be dropped
                          type: boolean
                        encoding:
                          default: none
                          description: The encoding method to use for categorical
                            data types
                          enum:
                          - one-hot-encoding
                          - one-hot-encoding-top-categories
                          - ordinal-encoding
                          - count-encoding
                          - target-encoding
                          - weight-of-evidence-encoding
                          - binary-encoding
                          - label-encoding
                          - hash-encoding
                          - catboost-encoding
                          - loo-encoding
                          - no-encoding
                          - auto
                          - none
                          type: string
                        generated:
                          description: Generated specifies a collection of columns
                            to be generated
                          items:
                            description: GeneratedColumnSpec describes a column to
                              be generated and applied to a dataset
                            properties:
                              datatype:
                                description: The resulting data type
                                enum:
                                - boolean
                                - datetime
                                - number
                                - categorical
                                - ordinal
                                - text
                                - json
                                - number-list
                                - categorical-list
                                - text-list
                                type: string
                              first:
                                description: The name of the first original column
                                type: string
                              name:
                                description: The name of the generated column
                                type: string
                              original:
                                description: The expression to apply in order to generate
                                  the new column
                                type: string
                              second:
                                description: The name of the second original column,
                                  if the expression is binary operator
                                type: string
                            type: object
                          type: array
                        image:
                          description: Image specifies the pipeline to handle image
                            data (currently unsupported)
                          properties:
                            featurizer:
                              default: auto
                              description: The date time imputer.
                              type: string
                          type: object
                        imputation:
                          default: none
                          description: The imputation method to use, which fills in
                            missing values within the columns
                          enum:
                          - remove-rows-with-missing-values
                          - replace-with-mean
                          - replace-with-median
                          - replace-with-arbitrary-value
                          - freq-category-imputation
                          - add-missing-value-indicator
                          - knn
                          - iterative
                          - mice
                          - no-imputation
                          - auto
                          - none
                          type: string
                        name:
                          description: The name of the pipeline
                          type: string
                        outlierHandling:
                          default: none
                          description: The method to use when handling outliers Apply
                            only to numeric data types.
                          enum:
                          - trim-outliers
                          - winsorizer-outliers
                          - cap-outliers
                          - zero-code-outliers
                          - none
                          - auto
                          type: string
                        passthrough:
                          default: false
                          description: Indicates if the pipeline should not be applied
                            and the columns should remain unchanged
                          type: boolean
                        scaling:
                          default: none
                          description: The scaling method to use for numerical data
                            types
                          enum:
                          - standard-scaling
                          - max-abs-scaling
                          - min-max-scaling
                          - normalization-scaling
                          - robust-scaling
                          - scale-to-unit-norm
                          - none
                          - auto
                          type: string
                        text:
                          description: Text specifies the pipeline to handle raw text
                          properties:
                            embedding:
                              description: Indicates if the pipeline will generate
                                a word embedding
                              type: string
                            encoder:
                              default: auto
                              description: The text encoder (e.g. TFIDF)
                              enum:
                              - tfidf
                              - count-vec
                              - hasing-vec
                              - none
                              - auto
                              type: string
                            lemma:
                              default: true
                              description: Indicates if the pipeline will implement
                                lemmatization
                              type: boolean
                            maxSvdComponents:
                              default: 0
                              description: The maximum number of SVD components to
                                use, if applicable
                              format: int32
                              type: integer
                            pos:
                              default: true
                              description: Indicates if the pipeline will add part-of-speech
                                handling
                              type: boolean
                            stem:
                              default: true
                              description: Indicates if the pipeline will implement
                                word stemming
                              type: boolean
                            stopwords:
                              default: true
                              description: Indicates if the pipeline will add stop
                                word handling
                              type: boolean
                            svd:
                              default: true
                              description: Indicates if the pipeline will add singular
                                value decomposition
                              type: boolean
                            tokenizer:
                              description: The text tokenizer character
                              type: string
                          type: object
                        variableTransformation:
                          default: none
                          description: The transformation method to use for numerical
                            data types
                          enum:
                          - log-transformation
                          - reciprocal-transformation
                          - sqrt-transformation
                          - power-transformation
                          - box-cox-transformation
                          - yj-transformation
                          - none
                          - auto
                          type: string
                        video:
                          description: Video specifies the pipeline to handle video
                            data (currently unsupported)
                          properties:
                            featurizer:
                              default: auto
                              description: The date time imputer.
                              type: string
                          type: object
                      type: object
                    type: array
                  selection:
                    description: FeatureSelection specifies the configuration to perform
                      feature selection on a dataset prior to model training
                    properties:
                      corrThreshold:
                        default: 95
                        description: The threshold to remove features with high correlations
                        format: int32
                        type: integer
                      embedding:
                        default: true
                        description: Indicates if embedded methods will be tested
                          as part of the candidate algorithms (e.g. tree-based selection)
                        type: boolean
                      enabled:
                        default: true
                        description: Indicates if feature selection is enabled
                        type: boolean
                      filter:
                        default: true
                        description: Indicates if filter methods will be tested as
                          part of the candidate algorithms (e.g. chi-square or anova
                          tests)
                        type: boolean
                      maxFeatures:
                        default: 0
                        description: The number of features that will be selected
                          based on importance. If TopN is 0, all features will be
                          selected
                        format: int32
                        type: integer
                      percentile:
                        default: 20
                        description: Percent of features to keep
                        format: int32
                        type: integer
                      pipeline:
                        description: The collection of feature selection methods that
                          will be applied in order to the dataset
                        items:
                          enum:
                          - drop-features
                          - drop-constant-features
                          - drop-duplicated-features
                          - drop-correlated-features
                          - mutual-information
                          - chisquare
                          - anova
                          - step-forward
                          - step-backward
                          - lasso-regression
                          - tree-importance
                          - recursive-feature-elimination
                          - recursive-feature-addition
                          - select-percentile
                          - select-kbest
                          - select-fpr
                          - select-fdr
                          - variance-threshold
                          - none
                          - auto
                          type: string
                        type: array
                      reserved:
                        description: List of features that are reserved and will always
                          be included in the final feature selection
                        items:
                          type: string
                        type: array
                      varThreshold:
                        default: 5
                        description: The threshold as a percentage to remove low variance
                          features
                        format: int32
                        type: integer
                      wrapper:
                        default: true
                        description: Indicates if wrapper methods will be tested as
                          part of the candidate algorithms
                        type: boolean
                    type: object
                type: object
              bestModel:
                description: The name of the Model resource which was determined to
                  be the highest-performing
                type: string
              bestModelScore:
                description: The score of the Model resource which was determined
                  to be the highest-performing
                type: number
              completedAt:
                description: CompletedAt represents the time at which the Study was
                  marked as completed, failed, or aborted
                format: date-time
                type: string
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              driftDetection:
                description: OutlierDetection is the status for outlier detection
                properties:
                  outlierModelURI:
                    description: The location of the prediction outlier detection
                    type: string
                type: object
              ensemble:
                description: EnsembleStatus contains the status of the ensemble phase
                properties:
                  bestScore:
                    description: Best score so far in this phase. The best score is
                      the value of the objective.
                    type: number
                  completedAt:
                    description: The time at which the phase concluded
                    format: date-time
                    type: string
                  completedModelsCount:
                    description: The number of models that have been successfully
                      trained
                    format: int32
                    type: integer
                  failedModelsCount:
                    description: The number of models that experienced an error whilst
                      training
                    format: int32
                    type: integer
                  modelsWithNoProgress:
                    description: Actual number of models where no progress was made.
                      This used to decide on early stop.
                    format: int32
                    type: integer
                  runningModelsCount:
                    description: The number of models currently being trained
                    format: int32
                    type: integer
                  startedAt:
                    description: The time at which the phase started
                    format: date-time
                    type: string
                  waitingModelsCount:
                    description: The number of models pending training
                    format: int32
                    type: integer
                type: object
              explain:
                description: ExplainStatus contains the status of the explaining phase
                properties:
                  bestScore:
                    description: Best score so far in this phase. The best score is
                      the value of the objective.
                    type: number
                  completedAt:
                    description: The time at which the phase concluded
                    format: date-time
                    type: string
                  completedModelsCount:
                    description: The number of models that have been successfully
                      trained
                    format: int32
                    type: integer
                  failedModelsCount:
                    description: The number of models that experienced an error whilst
                      training
                    format: int32
                    type: integer
                  modelsWithNoProgress:
                    description: Actual number of models where no progress was made.
                      This used to decide on early stop.
                    format: int32
                    type: integer
                  runningModelsCount:
                    description: The number of models currently being trained
                    format: int32
                    type: integer
                  startedAt:
                    description: The time at which the phase started
                    format: date-time
                    type: string
                  waitingModelsCount:
                    description: The number of models pending training
                    format: int32
                    type: integer
                type: object
              failureMessage:
                description: In the case of failure, the Study resource controller
                  will set this field with a failure message
                type: string
              failureReason:
                description: In the case of failure, the Study resource controller
                  will set this field with a failure reason
                type: string
              featureEngineering:
                description: FeatureEngineeringStatus contains the status of the feature
                  engineering phase
                properties:
                  bestScore:
                    description: Best score so far in this phase. The best score is
                      the value of the objective.
                    type: number
                  completedAt:
                    description: The time at which the phase concluded
                    format: date-time
                    type: string
                  completedModelsCount:
                    description: The number of models that have been successfully
                      trained
                    format: int32
                    type: integer
                  failedModelsCount:
                    description: The number of models that experienced an error whilst
                      training
                    format: int32
                    type: integer
                  modelsWithNoProgress:
                    description: Actual number of models where no progress was made.
                      This used to decide on early stop.
                    format: int32
                    type: integer
                  runningModelsCount:
                    description: The number of models currently being trained
                    format: int32
                    type: integer
                  startedAt:
                    description: The time at which the phase started
                    format: date-time
                    type: string
                  waitingModelsCount:
                    description: The number of models pending training
                    format: int32
                    type: integer
                type: object
              gc:
                description: GC specifies the status of garbage collection relevant
                  to the Study
                properties:
                  collectedModelsCount:
                    description: The number of models that were collected, equal to
                      len(Models)
                    format: int32
                    type: integer
                  models:
                    description: The collection of models that were archived
                    items:
                      description: ModelResult contains the records of a single garbage-collected
                        model
                      properties:
                        alg:
                          description: The type of estimator of the model
                          type: string
                        error:
                          description: Indicates if the model experience an error
                            whilst training
                          type: boolean
                        name:
                          description: The name of the model
                          type: string
                        score:
                          description: The objective score of the model
                          type: number
                        trialID:
                          description: The optimizer trial ID of the model
                          format: int32
                          type: integer
                      type: object
                    type: array
                type: object
              groupby:
                description: Study group by
                properties:
                  studiesURI:
                    description: The locations of the datasets profile files. Each
                      file is the group
                    type: string
                  workerResults:
                    description: Holds the worker on going result, when a worker finish,
                      we update the location of thier result files
                    items:
                      properties:
                        error:
                          type: string
                        id:
                          description: Worker ID
                          format: int32
                          type: integer
                        task:
                          type: string
                        uri:
                          description: URI
                          type: string
                      type: object
                    type: array
                type: object
              lastModelID:
                description: The Kubernetes-internal ID of the last Model resource
                  generated by the Study
                format: int64
                type: integer
              logs:
                description: Logs specifies the location of logs produced by workloads
                  associated with the Study
                properties:
                  bucketName:
                    description: The name of the VirtualBucket resource where the
                      logs are stored
                    type: string
                  containers:
                    description: The collection of ContainerLog objects that describe
                      the location of logs per container
                    items:
                      description: ContainerLog describes the location of logs for
                        a single Job
                      properties:
                        container:
                          description: The container name
                          type: string
                        job:
                          description: The name of the Job
                          type: string
                        key:
                          description: The path to the log in the bucket
                          type: string
                      type: object
                    type: array
                type: object
              modelsCount:
                description: Total models created for the study
                format: int32
                type: integer
              observedGeneration:
                description: ObservedGeneration is the last generation that was acted
                  on
                format: int64
                type: integer
              phase:
                default: Pending
                description: The phase of the Study
                type: string
              profileURI:
                description: The URI of the raw profile data produced by the Study
                type: string
              progress:
                description: The progress percentage of the Study, which is derived
                  from the Study's current phase
                format: int32
                type: integer
              reportName:
                description: Reference to the report object that was generated for
                  the dataset, which exists in the same Location Product namespace
                  as the object
                type: string
              reportURI:
                description: The name of the Report resource produced by the Study
                type: string
              search:
                description: SearchStatus contains the status of the model search
                  phase
                properties:
                  bestScore:
                    description: Best score so far in this phase. The best score is
                      the value of the objective.
                    type: number
                  completedAt:
                    description: The time at which the phase concluded
                    format: date-time
                    type: string
                  completedModelsCount:
                    description: The number of models that have been successfully
                      trained
                    format: int32
                    type: integer
                  failedModelsCount:
                    description: The number of models that experienced an error whilst
                      training
                    format: int32
                    type: integer
                  modelsWithNoProgress:
                    description: Actual number of models where no progress was made.
                      This used to decide on early stop.
                    format: int32
                    type: integer
                  runningModelsCount:
                    description: The number of models currently being trained
                    format: int32
                    type: integer
                  startedAt:
                    description: The time at which the phase started
                    format: date-time
                    type: string
                  waitingModelsCount:
                    description: The number of models pending training
                    format: int32
                    type: integer
                type: object
              test:
                description: TestStatus contains the status of the testing phase
                properties:
                  bestScore:
                    description: Best score so far in this phase. The best score is
                      the value of the objective.
                    type: number
                  completedAt:
                    description: The time at which the phase concluded
                    format: date-time
                    type: string
                  completedModelsCount:
                    description: The number of models that have been successfully
                      trained
                    format: int32
                    type: integer
                  failedModelsCount:
                    description: The number of models that experienced an error whilst
                      training
                    format: int32
                    type: integer
                  modelsWithNoProgress:
                    description: Actual number of models where no progress was made.
                      This used to decide on early stop.
                    format: int32
                    type: integer
                  runningModelsCount:
                    description: The number of models currently being trained
                    format: int32
                    type: integer
                  startedAt:
                    description: The time at which the phase started
                    format: date-time
                    type: string
                  waitingModelsCount:
                    description: The number of models pending training
                    format: int32
                    type: integer
                type: object
              testDataset:
                description: TestDatasetLocation specifies the location of the testing
                  dataset
                properties:
                  bucketName:
                    default: ""
                    description: In the case of the location type being an object
                      storage system, BucketName is the name of the VirtualBucket
                      resource that exists in the same tenant as the resource specifying
                      the DataLocation. Modela will connect to the external object
                      storage system, and will access the file from the path specified
                      by the Path field
                    type: string
                  connectionName:
                    default: ""
                    description: In the case of the type of location being a database,
                      ConnectionName specifies the name of the Connection resource
                      that exists in the same tenant as the resource specifying the
                      DataLocation. Modela will attempt to connect to the database
                      using the credentials specified in the Connection, and will
                      execute the query specified by the SQL field
                    type: string
                  database:
                    default: ""
                    description: The name of a database inside the database system
                      specified by the ConnectionName field
                    type: string
                  path:
                    default: ""
                    description: The path to a flat-file inside an object storage
                      system. When using the Modela API to upload files (through the
                      FileService API), Modela will upload the data to a predetermined
                      path based on the Tenant, DataProduct, DataProductVersion, and
                      resource type of the resource in relation to the file being
                      uploaded. The path does not need to adhere to this format; you
                      can give the path to a file inside a bucket not managed by Modela
                    type: string
                  resourceRef:
                    description: In the case of the location type being Dataset or
                      PublicDataset, ResourceRef references another resource that
                      containing data that will be used as a data source
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  sql:
                    default: ""
                    description: The SQL statement which will be executed to query
                      data from the table specified by Table
                    type: string
                  table:
                    default: ""
                    description: The name of a table inside a database, if applicable
                    type: string
                  topic:
                    default: ""
                    description: The name of the streaming topic (currently unsupported)
                    type: string
                  type:
                    default: object
                    description: The type of location where the data resides, which
                      can either be an object inside an object storage system (i.e.
                      Minio), a SQL location like a table or a view, a data stream
                      (i.e. Kafka, currently unsupported), or a web location (currently
                      unsupported)
                    enum:
                    - object
                    - table
                    - view
                    - stream
                    - web
                    - public-dataset
                    - dataset
                    type: string
                  url:
                    default: ""
                    description: In the case of the location type being WebApi, URL
                      specifies the external location (HTTP or Git) that will be queried
                      and then stored as flat-file by the resource which specifies
                      the DataLocation
                    type: string
                type: object
              testingRowsCount:
                description: The number of rows in the testing dataset
                format: int32
                type: integer
              trainDataset:
                description: TrainDatasetLocation specifies the location of the training
                  dataset
                properties:
                  bucketName:
                    default: ""
                    description: In the case of the location type being an object
                      storage system, BucketName is the name of the VirtualBucket
                      resource that exists in the same tenant as the resource specifying
                      the DataLocation. Modela will connect to the external object
                      storage system, and will access the file from the path specified
                      by the Path field
                    type: string
                  connectionName:
                    default: ""
                    description: In the case of the type of location being a database,
                      ConnectionName specifies the name of the Connection resource
                      that exists in the same tenant as the resource specifying the
                      DataLocation. Modela will attempt to connect to the database
                      using the credentials specified in the Connection, and will
                      execute the query specified by the SQL field
                    type: string
                  database:
                    default: ""
                    description: The name of a database inside the database system
                      specified by the ConnectionName field
                    type: string
                  path:
                    default: ""
                    description: The path to a flat-file inside an object storage
                      system. When using the Modela API to upload files (through the
                      FileService API), Modela will upload the data to a predetermined
                      path based on the Tenant, DataProduct, DataProductVersion, and
                      resource type of the resource in relation to the file being
                      uploaded. The path does not need to adhere to this format; you
                      can give the path to a file inside a bucket not managed by Modela
                    type: string
                  resourceRef:
                    description: In the case of the location type being Dataset or
                      PublicDataset, ResourceRef references another resource that
                      containing data that will be used as a data source
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  sql:
                    default: ""
                    description: The SQL statement which will be executed to query
                      data from the table specified by Table
                    type: string
                  table:
                    default: ""
                    description: The name of a table inside a database, if applicable
                    type: string
                  topic:
                    default: ""
                    description: The name of the streaming topic (currently unsupported)
                    type: string
                  type:
                    default: object
                    description: The type of location where the data resides, which
                      can either be an object inside an object storage system (i.e.
                      Minio), a SQL location like a table or a view, a data stream
                      (i.e. Kafka, currently unsupported), or a web location (currently
                      unsupported)
                    enum:
                    - object
                    - table
                    - view
                    - stream
                    - web
                    - public-dataset
                    - dataset
                    type: string
                  url:
                    default: ""
                    description: In the case of the location type being WebApi, URL
                      specifies the external location (HTTP or Git) that will be queried
                      and then stored as flat-file by the resource which specifies
                      the DataLocation
                    type: string
                type: object
              trainingDataHash:
                description: Sha 256 of the data sig TrainingDataHash specifies the
                  hashes for datasets used by the Study
                properties:
                  testingHash:
                    default: ""
                    type: string
                  trainingHash:
                    default: ""
                    type: string
                  validationHash:
                    default: ""
                    type: string
                type: object
              trainingRowsCount:
                description: The number of rows in the training dataset
                format: int32
                type: integer
              triggeredBy:
                description: The type of trigger which started the Study
                enum:
                - on-demand
                - on-schedule
                - on-new-data
                - on-github-event
                - on-concept-drift
                - on-pref-degradation
                type: string
              updatedAt:
                description: The last time the object was updated
                format: date-time
                type: string
              validationDataset:
                description: ValidationDataset specifies the location of the validation
                  dataset
                properties:
                  bucketName:
                    default: ""
                    description: In the case of the location type being an object
                      storage system, BucketName is the name of the VirtualBucket
                      resource that exists in the same tenant as the resource specifying
                      the DataLocation. Modela will connect to the external object
                      storage system, and will access the file from the path specified
                      by the Path field
                    type: string
                  connectionName:
                    default: ""
                    description: In the case of the type of location being a database,
                      ConnectionName specifies the name of the Connection resource
                      that exists in the same tenant as the resource specifying the
                      DataLocation. Modela will attempt to connect to the database
                      using the credentials specified in the Connection, and will
                      execute the query specified by the SQL field
                    type: string
                  database:
                    default: ""
                    description: The name of a database inside the database system
                      specified by the ConnectionName field
                    type: string
                  path:
                    default: ""
                    description: The path to a flat-file inside an object storage
                      system. When using the Modela API to upload files (through the
                      FileService API), Modela will upload the data to a predetermined
                      path based on the Tenant, DataProduct, DataProductVersion, and
                      resource type of the resource in relation to the file being
                      uploaded. The path does not need to adhere to this format; you
                      can give the path to a file inside a bucket not managed by Modela
                    type: string
                  resourceRef:
                    description: In the case of the location type being Dataset or
                      PublicDataset, ResourceRef references another resource that
                      containing data that will be used as a data source
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  sql:
                    default: ""
                    description: The SQL statement which will be executed to query
                      data from the table specified by Table
                    type: string
                  table:
                    default: ""
                    description: The name of a table inside a database, if applicable
                    type: string
                  topic:
                    default: ""
                    description: The name of the streaming topic (currently unsupported)
                    type: string
                  type:
                    default: object
                    description: The type of location where the data resides, which
                      can either be an object inside an object storage system (i.e.
                      Minio), a SQL location like a table or a view, a data stream
                      (i.e. Kafka, currently unsupported), or a web location (currently
                      unsupported)
                    enum:
                    - object
                    - table
                    - view
                    - stream
                    - web
                    - public-dataset
                    - dataset
                    type: string
                  url:
                    default: ""
                    description: In the case of the location type being WebApi, URL
                      specifies the external location (HTTP or Git) that will be queried
                      and then stored as flat-file by the resource which specifies
                      the DataLocation
                    type: string
                type: object
              validationRowsCount:
                description: The number of rows in the validation dataset
                format: int32
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
