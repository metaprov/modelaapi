---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: predictionruns.inference.modela.ai
spec:
  group: inference.modela.ai
  names:
    categories:
    - inference
    - modela
    kind: PredictionRun
    listKind: PredictionRunList
    plural: predictionruns
    shortNames:
    - prs
    singular: predictionrun
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - jsonPath: .status.phase
      name: Status
      type: string
    - jsonPath: .status.rows
      name: Rows
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PredictionRun represents a single batch prediction on a dataset
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PredictionRunSpec defines the run configuration for a Prediction
            properties:
              abort:
                default: false
                description: If true, the run will be permanently aborted and all
                  workloads created by the run will be removed
                type: boolean
              datasetName:
                description: PredictionName specifies the name of the Prediction resource
                  which the snapshot will use to determine the model, observation
                  location, and post-processing options of the batch prediction
                type: string
              modelRef:
                description: The reference to the Model which will be used for the
                  run. If unspecified, the model specifies by the parent Prediction
                  will be used
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              owner:
                default: no-one
                description: Owner specifies the name of the Account which the object
                  belongs to
                type: string
              pause:
                default: false
                description: If true, the execution of new workloads associated with
                  the run will be paused
                type: boolean
              timeout:
                description: Timout specifies the time in seconds for the run to be
                  completed. If unspecified, the run deadline specified by the Prediction
                  will be used
                format: int64
                type: integer
            type: object
          status:
            description: PredictionRunStatus is the observed state of a PredictionRun
            properties:
              completedAt:
                description: CompletedAt specifies the time at which the snapshot
                  completed or failed
                format: date-time
                type: string
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              failureMessage:
                description: FailureMessage is set to a failure message in the case
                  that an error occurred during the run
                type: string
              forecast:
                description: Forecast specifies the forecast status for the run
                properties:
                  forecastLocation:
                    description: A pointer to the file containing the metadata about
                      the forecasts
                    properties:
                      bucketName:
                        type: string
                      path:
                        type: string
                    type: object
                  profileURI:
                    description: A pointer to the file containing metadata about forecast
                      profiles
                    type: string
                  reportURI:
                    description: A pointer to the file containing metadata about forecast
                      reports
                    type: string
                  workerResults:
                    description: WorkerResults contains the collection of statuses
                      for ongoing and completed forecast workers
                    items:
                      properties:
                        error:
                          type: string
                        id:
                          description: Worker ID
                          format: int32
                          type: integer
                        task:
                          type: string
                        uri:
                          description: URI
                          type: string
                      type: object
                    type: array
                type: object
              logs:
                description: Logs contains the location of all logs produced by run
                  workloads
                items:
                  description: ContainerLog describes the location of logs for a single
                    Job
                  properties:
                    bucket:
                      description: The bucket the log was stored in
                      type: string
                    container:
                      description: The container name
                      type: string
                    job:
                      description: The name of the Job
                      type: string
                    key:
                      description: The path to the log in the bucket
                      type: string
                  type: object
                type: array
              observedGeneration:
                description: ObservedGeneration is the last generation that was acted
                  on
                format: int64
                type: integer
              phase:
                default: Pending
                description: The current phase of the prediction
                type: string
              predictionManifestLocation:
                description: PredictionManifestLocation specifies the location of
                  the Prediction manifest used during the course of the run
                properties:
                  bucketName:
                    type: string
                  generation:
                    format: int64
                    type: integer
                  path:
                    type: string
                required:
                - generation
                type: object
              rows:
                description: Rows specifies the number of rows predicted
                format: int32
                type: integer
              runVersion:
                description: RunVersion specifies the version of the snapshot, which
                  is determined when the Prediction manifest is saved
                format: int32
                type: integer
              unitTestResults:
                description: UnitTestResults contains the results of the unit test
                  phase
                properties:
                  completedAt:
                    description: Stop time of running the suite.
                    format: date-time
                    type: string
                  entityRef:
                    description: A reference to the object under test. Best practice
                      is to have one suite for an object
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  errors:
                    description: Total number of assertion errors.
                    format: int32
                    type: integer
                  failures:
                    description: Total number of failures. A failure is an unplanned
                      error, e.g. cannot connect to a dataset
                    format: int32
                    type: integer
                  startedAt:
                    description: Start time of running the suite
                    format: date-time
                    type: string
                  tests:
                    description: The result of executing the test suite. The result
                      contain one result object per test case.
                    items:
                      description: Result for a specific case
                      properties:
                        actual:
                          description: Actual observation
                          properties:
                            algorithm:
                              description: The name of the algorithm that generated
                                this measurment
                              type: string
                            boolQty:
                              description: If the metric refer to a bool unit, store
                                the bool value
                              type: boolean
                            category:
                              description: If the metric refer to categorical measure,store
                                the category.
                              type: string
                            column:
                              type: string
                            entity:
                              description: 'ObjectReference contains enough information
                                to let you inspect or modify the referred object.
                                --- New uses of this type are discouraged because
                                of difficulty describing its usage when embedded in
                                APIs. 1. Ignored fields.  It includes many fields
                                which are not generally honored.  For instance, ResourceVersion
                                and FieldPath are both very rarely valid in actual
                                usage. 2. Invalid usage help.  It is impossible to
                                add specific help for individual usage.  In most embedded
                                usages, there are particular restrictions like, "must
                                refer only to types A and B" or "UID not honored"
                                or "name must be restricted". Those cannot be well
                                described when embedded. 3. Inconsistent validation.  Because
                                the usages are different, the validation rules are
                                different by usage, which makes it hard for users
                                to predict what will happen. 4. The fields are both
                                imprecise and overly precise.  Kind is not a precise
                                mapping to a URL. This can produce ambiguity during
                                interpretation and require a REST mapping.  In most
                                cases, the dependency is on the group,resource tuple
                                and the version of the actual struct is irrelevant.
                                5. We cannot easily change it.  Because this type
                                is embedded in many locations, updates to this type
                                will affect numerous schemas.  Don''t make new APIs
                                embed an underspecified API type they do not control.
                                Instead of using this type, create a locally provided
                                and used type that is well-focused on your reference.
                                For example, ServiceReferences for admission registration:
                                https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                                .'
                              properties:
                                apiVersion:
                                  description: API version of the referent.
                                  type: string
                                fieldPath:
                                  description: 'If referring to a piece of an object
                                    instead of an entire object, this string should
                                    contain a valid JSON/Go field access statement,
                                    such as desiredState.manifest.containers[2]. For
                                    example, if the object reference is to a container
                                    within a pod, this would take on a value like:
                                    "spec.containers{name}" (where "name" refers to
                                    the name of the container that triggered the event)
                                    or if no container name is specified "spec.containers[2]"
                                    (container with index 2 in this pod). This syntax
                                    is chosen only to have some well-defined way of
                                    referencing a part of an object. TODO: this design
                                    is not final and this field is subject to change
                                    in the future.'
                                  type: string
                                kind:
                                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                namespace:
                                  description: 'Namespace of the referent. More info:
                                    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                  type: string
                                resourceVersion:
                                  description: 'Specific resourceVersion to which
                                    this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                  type: string
                                uid:
                                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            metric:
                              description: The metric type name (e.g. F1 / Accuracy)
                              type: string
                            stddev:
                              description: Metric standard diviation for quantative
                                observations.
                              type: number
                            taskType:
                              description: The measurment task type (e.g. train, test,
                                cv, feature)
                              type: string
                            timePoint:
                              description: The Time when the observation was taken
                              format: date-time
                              type: string
                            value:
                              description: The value of the metric for quantitive
                                observations
                              type: number
                            valueSet:
                              description: Capture a set of values.
                              items:
                                type: string
                              type: array
                          type: object
                        error:
                          description: An error occur if the system cannot execute
                            the test case (e.g. connection error).
                          type: boolean
                        failure:
                          description: A failure occur on assertion failure
                          type: boolean
                        failureMsg:
                          description: An optional
                          type: string
                        name:
                          description: The test case name for this result.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                type: object
              updatedAt:
                format: date-time
                type: string
              usage:
                description: Store resource consumption for a task
                properties:
                  cpu:
                    format: int64
                    type: integer
                  gpu:
                    format: int64
                    type: integer
                  memory:
                    format: int64
                    type: integer
                type: object
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
