---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: licenses.infra.modela.ai
spec:
  group: infra.modela.ai
  names:
    categories:
    - infra
    - modela
    kind: License
    listKind: LicenseList
    plural: licenses
    singular: license
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Valid")].status
      name: Ready
      type: string
    - jsonPath: .spec.owner
      name: Owner
      type: string
    - jsonPath: .spec.secretRef.name
      name: Secret
      type: string
    - jsonPath: .spec.trialStart
      name: Trial Start
      type: string
    - jsonPath: .spec.trialEnd
      name: Trial End
      type: string
    - jsonPath: .spec.maxTrainers
      name: ExpectedValueMax Trainers
      priority: 1
      type: string
    - jsonPath: .spec.maxServers
      name: ExpectedValueMax Nodes
      priority: 1
      type: string
    - jsonPath: .spec.maxUsers
      name: ExpectedValueMax Users
      priority: 1
      type: string
    - jsonPath: .spec.expireAt
      name: Expire FiredAt
      type: date
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: License represents the license key and limitations of a cluster-wide
          license obtained from Modela.ai
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: LicenseSpec defines the details of a License. The contents
              of the specification are derived from the actual license key, and changing
              the specification has no effect on the limitations of the license
            properties:
              chatbot:
                default: false
                description: Chatbot indicates if chatbot models are supported
                type: boolean
              email:
                default: ""
                description: The e-mail address of the Modela.ai account which owns
                  the license
                type: string
              expireAt:
                description: The date at which the license expires
                format: date-time
                type: string
              forecast:
                default: false
                description: Forecast indicates if Modela can generate forecasting
                  models
                type: boolean
              maxDataPlanes:
                description: MaxDataPlanes specifies the maximum number of data plane
                  replicas that may exist at once
                format: int32
                minimum: 0
                type: integer
              maxProducts:
                description: MaxProducts specifies the maximum number of DataProduct
                  across the cluster
                format: int32
                minimum: 0
                type: integer
              maxServers:
                description: MaxServers specifies the maximum number of Kubernetes
                  nodes that may be utilized at once
                format: int32
                minimum: 0
                type: integer
              maxTrainers:
                description: MaxTrainers specifies the maximum number of parallel
                  trainers that can be active at once
                format: int32
                minimum: 0
                type: integer
              maxUsers:
                description: MaxUsers specifies the maximum number of Accounts that
                  can be created across all tenants
                format: int32
                minimum: 0
                type: integer
              nlp:
                default: false
                description: NLP indicates if natural language processing models are
                  supported
                type: boolean
              notifierName:
                description: The reference to a Notifier resource that receives Alerts
                  for license expiration
                type: string
              priceName:
                description: The name of the license price, internal to Modela.ai
                type: string
              productName:
                default: ""
                description: The name of the license product, internal to Modela.ai
                type: string
              secretRef:
                description: The reference to the secret containing the license token
                properties:
                  name:
                    description: name is unique within a namespace to reference a
                      secret resource.
                    type: string
                  namespace:
                    description: namespace defines the space within which the secret
                      name must be unique.
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              trialEndAt:
                description: TrialEndAt specifies when the free trial expires, if
                  active
                format: date-time
                type: string
              trialStartAt:
                description: TrialStartAt is the start date for of the free trial
                  period, if active
                format: date-time
                type: string
              vision:
                default: false
                description: Vision indicates if computer vision models are supported
                type: boolean
            type: object
          status:
            description: LicenseStatus is the observed state of a License
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              failureMessage:
                description: In the case of failure, the License resource controller
                  will set this field with a failure message
                type: string
              failureReason:
                description: In the case of failure, the License resource controller
                  will set this field with a failure reason
                type: string
              observedGeneration:
                description: ObservedGeneration is the last generation that was acted
                  on
                format: int64
                type: integer
              updatedAt:
                description: The last time the object was updated
                format: date-time
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
