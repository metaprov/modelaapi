---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: dataproducts.data.modela.ai
spec:
  group: data.modela.ai
  names:
    categories:
    - data
    - modela
    - all
    kind: DataProduct
    listKind: DataProductList
    plural: dataproducts
    shortNames:
    - prod
    singular: dataproduct
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - jsonPath: .spec.owner
      name: Owner
      type: string
    - jsonPath: .spec.task
      name: Task
      type: string
    - jsonPath: .spec.public
      name: Public
      type: boolean
    - jsonPath: .status.errorAlertsCount
      name: Errors
      type: integer
    - jsonPath: .status.datasourcesCount
      name: Data Sources
      priority: 1
      type: integer
    - jsonPath: .status.datasetsCount
      name: Datasets
      priority: 1
      type: integer
    - jsonPath: .status.studiesCount
      name: Studies
      priority: 1
      type: integer
    - jsonPath: .status.modelsCount
      name: ModelsCount
      priority: 1
      type: integer
    - jsonPath: .status.predictorsCount
      name: Predictors
      priority: 1
      type: integer
    - jsonPath: .status.appsCount
      name: Apps
      priority: 1
      type: integer
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DataProduct represents a single DataProduct namespace, which
          contains all non-infrastructure resources. Additionally, it specifies default
          parameters for resources to be created under the namespace, such as workload
          class and storage location
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DataProductSpec defines the desired state of the DataProduct
            properties:
              clearanceLevel:
                default: unclassified
                description: The clearance level required to access the DataProduct.
                  Accounts which do not have a clearance level greater than or equal
                  to ClearanceLevel will be denied access to the DataProduct namespace
                enum:
                - unclassified
                - confidential
                - secret
                - top-secret
                type: string
              color:
                default: none
                description: The color assigned to the product, for visual purposes
                  only
                type: string
              compilation:
                description: The default compilation specification for Study resources
                  created under the DataProduct
                properties:
                  compiler:
                    default: none
                    description: Set one or more targets Enable set the enable to
                    enum:
                    - tvm
                    - onyx
                    - xla
                    - none
                    type: string
                  enable:
                    default: false
                    description: Enable set the enable to
                    type: boolean
                  targets:
                    description: Set one or more targets for the compiler
                    items:
                      enum:
                      - amd-epyc-2
                      - arma-53
                      - arma-72
                      - intel-cascade-lake
                      - intel-broadwell
                      - intel-skylake
                      - tesla-v100
                      - tesla-k80
                      - t4
                      - raspberry-pi8-modela-b
                      type: string
                    type: array
                type: object
              description:
                default: ""
                description: User-provided description of the object
                maxLength: 512
                type: string
              gitLocation:
                description: GitLocation is the default Git location where all child
                  resources will be tracked as YAML
                properties:
                  branch:
                    default: ""
                    description: The branch inside the Git repository
                    maxLength: 256
                    type: string
                  gitConnectionName:
                    default: ""
                    description: The Git ConnectionName resource which exists in the
                      same tenant as the parent DataProduct
                    type: string
                  private:
                    default: true
                    description: Indicates if the repository is private
                    type: boolean
                  url:
                    default: ""
                    description: The URL to the destination Git repository
                    maxLength: 256
                    type: string
                type: object
              governance:
                description: The Governance requirements (not functional as of the
                  current release)
                properties:
                  businessReviewer:
                    description: The account name of the business reviewer
                    type: string
                  complianceReviewer:
                    description: The account name of the compliance reviewer
                    type: string
                  country:
                    description: The country whose regulations are under consideration
                    type: string
                  enabled:
                    default: false
                    description: Indicates if governance is enabled
                    type: boolean
                  itReviewer:
                    description: The account name of the IT reviewer
                    type: string
                  members:
                    description: The name of the team members account that goveren
                      this data product.
                    items:
                      type: string
                    type: array
                type: object
              imageLocation:
                description: ImageLocation is the default Docker image repository
                  where model images produced under the DataProduct will be stored
                properties:
                  name:
                    default: ""
                    description: The canonical name of the image repository. If not
                      set, it will default to docker/{dataproduct_name}
                    maxLength: 256
                    type: string
                  registryConnectionName:
                    default: ""
                    description: The image repository ConnectionName resource which
                      exists in the same tenant as the parent DataProduct. If the
                      field is not set, Modela will ignore the image location and
                      not push images
                    type: string
                type: object
              kpis:
                description: KPIs define key performance indicators for the DataProduct
                  (not functional as of the current release)
                items:
                  description: KPI specifies a key performance indicator for a DataProduct.
                    Currently not implemented.
                  properties:
                    name:
                      default: ""
                      description: The name of the KPI
                      type: string
                    value:
                      description: The value of the KPI
                      type: number
                  type: object
                type: array
              labName:
                description: The name of the Lab that will be used by default with
                  all compute-requiring child resources
                maxLength: 63
                pattern: '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'
                type: string
              location:
                description: The default location for all artifacts created under
                  the DataProduct. All data-producing resources will use the VirtualBucket
                  specified by the Location by default
                properties:
                  bucket:
                    type: string
                  path:
                    type: string
                type: object
              notification:
                description: The default notification specification for all resources
                  under the DataProduct
                properties:
                  errorTTL:
                    default: 3600
                    description: Time-to-live for error messages, in seconds
                    format: int32
                    type: integer
                  notifierName:
                    default: ""
                    description: The name of the Notifier which exists in the same
                      tenant as the resource specifying the NotificationSpec
                    type: string
                  selector:
                    additionalProperties:
                      type: string
                    description: The labels which will be searched for in all Notifiers
                      to determine the target Notifiers
                    type: object
                  successTTL:
                    default: 3600
                    description: Time-to-live for success messages. In seconds
                    format: int32
                    type: integer
                type: object
              onCallAccountName:
                description: The name of the Account which should be responsible for
                  events that occur under the DataProduct
                type: string
              owner:
                default: no-one
                description: The name of the Account which created the object, which
                  exists in the same tenant as the object
                type: string
              permissions:
                description: Permissions denotes the specification that determines
                  which Accounts can access the DataProduct and what actions they
                  can perform
                properties:
                  stakeholders:
                    items:
                      description: Stakeholder specifies the User Role Classes of
                        an individual Account
                      properties:
                        account:
                          description: The name of an Account
                          type: string
                        roles:
                          description: The object references to UserRoleClass resources
                            which describe the actions the Account may perform
                          items:
                            description: 'ObjectReference contains enough information
                              to let you inspect or modify the referred object. ---
                              New uses of this type are discouraged because of difficulty
                              describing its usage when embedded in APIs. 1. Ignored
                              fields.  It includes many fields which are not generally
                              honored.  For instance, ResourceVersion and FieldPath
                              are both very rarely valid in actual usage. 2. Invalid
                              usage help.  It is impossible to add specific help for
                              individual usage.  In most embedded usages, there are
                              particular restrictions like, "must refer only to types
                              A and B" or "UID not honored" or "name must be restricted".
                              Those cannot be well described when embedded. 3. Inconsistent
                              validation.  Because the usages are different, the validation
                              rules are different by usage, which makes it hard for
                              users to predict what will happen. 4. The fields are
                              both imprecise and overly precise.  Kind is not a precise
                              mapping to a URL. This can produce ambiguity during
                              interpretation and require a REST mapping.  In most
                              cases, the dependency is on the group,resource tuple
                              and the version of the actual struct is irrelevant.
                              5. We cannot easily change it.  Because this type is
                              embedded in many locations, updates to this type will
                              affect numerous schemas.  Don''t make new APIs embed
                              an underspecified API type they do not control. Instead
                              of using this type, create a locally provided and used
                              type that is well-focused on your reference. For example,
                              ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                              .'
                            properties:
                              apiVersion:
                                description: API version of the referent.
                                type: string
                              fieldPath:
                                description: 'If referring to a piece of an object
                                  instead of an entire object, this string should
                                  contain a valid JSON/Go field access statement,
                                  such as desiredState.manifest.containers[2]. For
                                  example, if the object reference is to a container
                                  within a pod, this would take on a value like: "spec.containers{name}"
                                  (where "name" refers to the name of the container
                                  that triggered the event) or if no container name
                                  is specified "spec.containers[2]" (container with
                                  index 2 in this pod). This syntax is chosen only
                                  to have some well-defined way of referencing a part
                                  of an object. TODO: this design is not final and
                                  this field is subject to change in the future.'
                                type: string
                              kind:
                                description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                              namespace:
                                description: 'Namespace of the referent. More info:
                                  https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                type: string
                              resourceVersion:
                                description: 'Specific resourceVersion to which this
                                  reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                type: string
                              uid:
                                description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                          type: array
                      type: object
                    type: array
                type: object
              priority:
                default: medium
                description: The default priority level assigned to Jobs created under
                  the DataProduct namespace
                enum:
                - low
                - medium
                - high
                - urgent
                type: string
              public:
                default: false
                description: Indicates if the DataProduct is public and can be accessed
                  without permissions
                type: boolean
              retriesOnFailure:
                default: 3
                description: Specifies how many times Jobs created under the DataProduct
                  namespace will retry after failure
                format: int32
                maximum: 10
                minimum: 0
                type: integer
              servingResources:
                description: The default resource allocation for model serving workloads
                  that takes place under the DataProduct
                properties:
                  custom:
                    default: false
                    description: If true, ignore the workload class name.
                    type: boolean
                  requirements:
                    description: The custom resource requirements for the workload,
                      which are used if `WorkloadName` is not set
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  workloadName:
                    default: general-large
                    description: If this resource is based on the workload, this field
                      contain the name of the workload. The name of a WorkloadClass.
                      The system will use the resource requirements described by the
                      WorkloadClass
                    type: string
                type: object
              servingSiteName:
                description: The name of the Serving Site which will be used by default
                  with all Predictor resources
                maxLength: 63
                pattern: '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'
                type: string
              subtask:
                default: none
                description: Subtask specifies the default subtask relevant to the
                  primary task (text classification, image object detection, etc.)
                enum:
                - text-ner
                - text-classification
                - text-multi-classification
                - text-regression
                - text-multi-label-classification
                - text-conversation
                - text-lang-generation
                - text-lang-model
                - text-multi-modal
                - text-ner
                - text-qa
                - text-summarization
                - text-sentence-pair
                - text-representation-generation
                - text-sentiment-analysis
                - text-code-generation
                - text-translation
                - text-lang-detection
                - text-grammar-correction
                - text-paraphrasing
                - text-intent-classification
                - text-semantic-similarity
                - text-keyword-extraction
                - text-pos
                - text-tokenization
                - text-lemma
                - image-classification
                - image-multi-label-classification
                - image-object-detection
                - image-segmentation
                - none
                type: string
              tags:
                description: Assign tags to data product
                items:
                  type: string
                type: array
              task:
                description: Task specifies the default machine learning task of the
                  product (classification, regression, etc.)
                enum:
                - binary-classification
                - multi-classification
                - forecasting
                - regression
                - clustering
                - recommendation
                - outlier-detection
                - novelty-detection
                - auto
                - unknown
                - partition-forecasting
                - monitoring
                type: string
              tenantRef:
                description: The reference to the Tenant which owns the DataProduct.
                  Defaults to `default-tenant`
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              trainingResources:
                description: The default resource allocation for model training and
                  data workloads that takes place under the DataProduct
                properties:
                  custom:
                    default: false
                    description: If true, ignore the workload class name.
                    type: boolean
                  requirements:
                    description: The custom resource requirements for the workload,
                      which are used if `WorkloadName` is not set
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  workloadName:
                    default: general-large
                    description: If this resource is based on the workload, this field
                      contain the name of the workload. The name of a WorkloadClass.
                      The system will use the resource requirements described by the
                      WorkloadClass
                    type: string
                type: object
            type: object
          status:
            description: DataProductStatus defines the observed state of DataProduct
            properties:
              baselineVersion:
                description: The name of the DataProductVersion which currently represents
                  the latest version of the DataProduct. Newly-created resources will
                  be instantiated with this version by default
                type: string
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              dataAppsCount:
                description: The number of DataApp resources that exist under the
                  namespace
                format: int32
                type: integer
              dataPipelineCount:
                description: The number of DataPipeline resources that exist under
                  the namespace
                format: int32
                type: integer
              dataPipelineRunsCount:
                description: The number of DataPipelineRun resources that exist under
                  the namespace
                format: int32
                type: integer
              datasetsCount:
                description: The number of Dataset resources that exist under the
                  namespace
                format: int32
                type: integer
              datasourcesCount:
                description: The number of DataSource resources that exist under the
                  namespace
                format: int32
                type: integer
              errorAlertsCount:
                description: The number of error alerts produced under the namespace
                format: int32
                type: integer
              failureMessage:
                description: In the case of failure, the DataProduct resource controller
                  will set this field with a failure message
                type: string
              failureReason:
                description: In the case of failure, the DataProduct resource controller
                  will set this field with a failure reason
                type: string
              infoAlertsCount:
                description: The number of informative alerts produced under the namespace
                format: int32
                type: integer
              modelClassesCount:
                description: Count the number of model classes
                format: int32
                type: integer
              modelsCount:
                description: The number of Model resources that exist under the namespace
                format: int32
                type: integer
              observedGeneration:
                description: ObservedGeneration is the last generation that was acted
                  on
                format: int64
                type: integer
              predictionsCount:
                description: The number of BatchPrediction resources that exist under
                  the namespace
                format: int32
                type: integer
              predictorsCount:
                description: The number of Predictor resources that exist under the
                  namespace
                format: int32
                type: integer
              studiesCount:
                description: The number of Study resources that exist under the namespace
                format: int32
                type: integer
              updatedAt:
                description: The last time the object was updated
                format: date-time
                type: string
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
