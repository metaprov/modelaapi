---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: dataproducts.data.modela.ai
spec:
  group: data.modela.ai
  names:
    categories:
    - data
    - modela
    - all
    kind: DataProduct
    listKind: DataProductList
    plural: dataproducts
    shortNames:
    - prod
    singular: dataproduct
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - jsonPath: .spec.owner
      name: Owner
      type: string
    - jsonPath: .spec.task
      name: Task
      type: string
    - jsonPath: .spec.public
      name: Public
      type: boolean
    - jsonPath: .status.errorAlertsCount
      name: Errors
      type: integer
    - jsonPath: .status.datasourcesCount
      name: Data Sources
      priority: 1
      type: integer
    - jsonPath: .status.datasetsCount
      name: Datasets
      priority: 1
      type: integer
    - jsonPath: .status.studiesCount
      name: Studies
      priority: 1
      type: integer
    - jsonPath: .status.modelsCount
      name: ModelsCount
      priority: 1
      type: integer
    - jsonPath: .status.predictorsCount
      name: Predictors
      priority: 1
      type: integer
    - jsonPath: .status.appsCount
      name: Apps
      priority: 1
      type: integer
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DataProduct represents a single DataProduct namespace, which
          contains all non-infrastructure resources. Additionally, it specifies default
          parameters for resources to be created under the namespace, such as workload
          class and storage location
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DataProductSpec defines the desired state of the DataProduct
            properties:
              approval:
                description: Approval specifies the default model approval requirements
                properties:
                  decisionType:
                    description: DecisionType specifies the requirements for the model
                      to be approved in the case of there being multiple reviewers
                    type: string
                  enabled:
                    default: false
                    description: Enabled indicates if model approval is enabled
                    type: boolean
                  members:
                    description: Reviewers contains the name of Accounts that will
                      be required to approve models for promotion
                    items:
                      type: string
                    type: array
                type: object
              cacheBucketName:
                description: CacheBucketName specifies the name of the Virtual Bucket
                  which workloads for resources under the Data Product will use internally
                  for caching workloads. Setting CacheBucketName to a valid Virtual
                  Bucket is highly recommended for stability and performance
                type: string
              color:
                default: none
                description: The implementation-specific color assigned to the Data
                  Product, for visual purposes only
                type: string
              defaultBucketName:
                description: The name of the Virtual Bucket that resources under the
                  Data Product will use by default
                maxLength: 63
                pattern: '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'
                type: string
              defaultLabName:
                description: The name of the Lab which will be used by all training
                  and data-related workloads, in the case that the resource creating
                  the workload does not specify a Lab
                maxLength: 63
                pattern: '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'
                type: string
              defaultServingSiteName:
                description: The name of the Serving Site which will be used by all
                  inference-related workloads, in the case that the resource creating
                  the workload does not specify a Serving Site
                maxLength: 63
                pattern: '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'
                type: string
              description:
                default: ""
                description: User-provided description of the object
                maxLength: 512
                type: string
              gitLocation:
                description: GitLocation specifies the location of a Git repository
                  where resources under the Data Product will be saved as YAML
                properties:
                  branch:
                    default: ""
                    description: The branch inside the Git repository
                    maxLength: 256
                    type: string
                  gitConnectionName:
                    default: ""
                    description: The Git ConnectionName resource which exists in the
                      same tenant as the parent DataProduct
                    type: string
                  private:
                    default: true
                    description: Indicates if the repository is private
                    type: boolean
                  url:
                    default: ""
                    description: The URL to the destination Git repository
                    maxLength: 256
                    type: string
                type: object
              notification:
                description: The default notification specification for all resources
                  under the DataProduct
                properties:
                  notifierName:
                    description: NotifierName specifies the name of a single Notifier
                      resource which the Alert will be forwarded to
                    type: string
                  selector:
                    additionalProperties:
                      type: string
                    description: Selector defines a map of labels that will be matched
                      to find multiple Notifier resource to forward alerts to
                    type: object
                  ttl:
                    default: 3600
                    description: TTL defines the time-to-live for Alerts, in seconds,
                      after which they will be deleted
                    format: int32
                    type: integer
                type: object
              owner:
                default: no-one
                description: The name of the Account which created the object, which
                  exists in the same tenant as the object
                type: string
              permissions:
                description: Permissions defines the set of permissions applied to
                  each Account when accessing resources within the Data Product
                properties:
                  accounts:
                    items:
                      description: AccountPermissions specifies the User Role Classes
                        of an individual Account
                      properties:
                        accountName:
                          description: The name of the Account receiving the permissions
                          type: string
                        roles:
                          description: Roles contains a list of User Role Classes
                            that will be bound to the Account
                          items:
                            description: LocalObjectReference contains enough information
                              to let you locate the referenced object inside the same
                              namespace.
                            properties:
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                          type: array
                      type: object
                    type: array
                type: object
              priority:
                default: medium
                description: The default priority level assigned to Jobs created by
                  resources under the Data Product
                enum:
                - low
                - medium
                - high
                - urgent
                type: string
              public:
                default: false
                description: Public indicates if the Data Product can be accessed
                  without any permissions. If enabled, all resources and verbs will
                  be accessible
                type: boolean
              servingResources:
                description: The default resource allocation for model serving workloads
                  that takes place under the DataProduct
                properties:
                  custom:
                    default: false
                    description: Custom indicates if the custom requirements specified
                      by Requirements will be used
                    type: boolean
                  requirements:
                    description: Requirements specifies the custom resource requirements
                      for the workload
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  workloadName:
                    description: WorkloadName references the name of a Workload Class
                      resource that will be used to determine the resource requirements
                      of the workload. If specified, WorkloadName will take precedence
                      over custom requirements
                    type: string
                type: object
              subtask:
                default: none
                description: Subtask specifies the default subtask relevant to the
                  primary task (text classification, image object detection, etc.)
                enum:
                - text-ner
                - text-classification
                - text-multi-classification
                - text-regression
                - text-multi-label-classification
                - text-conversation
                - text-lang-generation
                - text-lang-model
                - text-multi-modal
                - text-ner
                - text-qa
                - text-summarization
                - text-sentence-pair
                - text-representation-generation
                - text-sentiment-analysis
                - text-code-generation
                - text-translation
                - text-lang-detection
                - text-grammar-correction
                - text-paraphrasing
                - text-intent-classification
                - text-semantic-similarity
                - text-keyword-extraction
                - text-pos
                - text-tokenization
                - text-lemma
                - image-classification
                - image-multi-label-classification
                - image-object-detection
                - image-segmentation
                - none
                type: string
              tags:
                description: Tags contain user-defined tags associated with the Data
                  Product
                items:
                  type: string
                type: array
              task:
                description: Task specifies the default machine learning task of the
                  Data Product (classification, regression, etc.)
                enum:
                - binary-classification
                - multi-classification
                - forecasting
                - regression
                - clustering
                - recommendation
                - outlier-detection
                - novelty-detection
                - auto
                - unknown
                - partition-forecasting
                - monitoring
                type: string
              tenantRef:
                description: The reference to the Tenant of the Data Product (which
                  must equal the namespace of the Data Product)
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              trainingResources:
                description: The default resource allocation for model training and
                  data workloads that takes place under the DataProduct
                properties:
                  custom:
                    default: false
                    description: Custom indicates if the custom requirements specified
                      by Requirements will be used
                    type: boolean
                  requirements:
                    description: Requirements specifies the custom resource requirements
                      for the workload
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  workloadName:
                    description: WorkloadName references the name of a Workload Class
                      resource that will be used to determine the resource requirements
                      of the workload. If specified, WorkloadName will take precedence
                      over custom requirements
                    type: string
                type: object
            type: object
          status:
            description: DataProductStatus defines the observed state of DataProduct
            properties:
              baselineVersion:
                description: The name of the DataProductVersion which currently represents
                  the latest version of the DataProduct. Newly-created resources will
                  be instantiated with this version by default
                type: string
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              dataAppsCount:
                description: The number of DataApp resources that exist under the
                  namespace
                format: int32
                type: integer
              dataPipelineCount:
                description: The number of DataPipeline resources that exist under
                  the namespace
                format: int32
                type: integer
              dataPipelineRunsCount:
                description: The number of DataPipelineRun resources that exist under
                  the namespace
                format: int32
                type: integer
              datasetsCount:
                description: The number of Dataset resources that exist under the
                  namespace
                format: int32
                type: integer
              datasourcesCount:
                description: The number of DataSource resources that exist under the
                  namespace
                format: int32
                type: integer
              errorAlertsCount:
                description: The number of error alerts produced under the namespace
                format: int32
                type: integer
              failureMessage:
                description: In the case of failure, the DataProduct resource controller
                  will set this field with a failure message
                type: string
              failureReason:
                description: In the case of failure, the DataProduct resource controller
                  will set this field with a failure reason
                type: string
              infoAlertsCount:
                description: The number of informative alerts produced under the namespace
                format: int32
                type: integer
              modelClassesCount:
                description: Count the number of model classes
                format: int32
                type: integer
              modelsCount:
                description: The number of Model resources that exist under the namespace
                format: int32
                type: integer
              observedGeneration:
                description: ObservedGeneration is the last generation that was acted
                  on
                format: int64
                type: integer
              predictionsCount:
                description: The number of BatchPrediction resources that exist under
                  the namespace
                format: int32
                type: integer
              predictorsCount:
                description: The number of Predictor resources that exist under the
                  namespace
                format: int32
                type: integer
              studiesCount:
                description: The number of Study resources that exist under the namespace
                format: int32
                type: integer
              updatedAt:
                description: The last time the object was updated
                format: date-time
                type: string
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
