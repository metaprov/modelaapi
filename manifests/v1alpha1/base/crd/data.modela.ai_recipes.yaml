---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: recipes.data.modela.ai
spec:
  group: data.modela.ai
  names:
    categories:
    - data
    - modela
    - all
    kind: Recipe
    listKind: RecipeList
    plural: recipes
    shortNames:
    - rc
    singular: recipe
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - jsonPath: .spec.owner
      name: Owner
      type: string
    - jsonPath: .spec.versionName
      name: Version
      type: string
    - jsonPath: .spec.description
      name: Description
      type: string
    - jsonPath: .status.lastRun.at
      name: Last Run
      type: date
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Recipe represents a single batch of data
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RecipeSpec defines the desired state of a dataset
            properties:
              description:
                default: ""
                description: Description is the user provided description
                maxLength: 512
                type: string
              input:
                description: Input is the input recipe spec
                properties:
                  datasetName:
                    default: ""
                    description: DatasetName is the name of the dataset
                    type: string
                  format:
                    default: csv
                    description: Format is the dataset format
                    enum:
                    - csv
                    - tsv
                    - excel
                    - fwf
                    - hdf
                    - html
                    - json
                    - pickle
                    - sas
                    - stata
                    - feather
                    - parquet
                    type: string
                  location:
                    description: Location is the folder of the actual data resides,
                      if not using dataset
                    properties:
                      bucket:
                        default: ""
                        description: In the case of the location type being an object
                          storage system, BucketName is the name of the VirtualBucket
                          resource that exists in the same tenant as the resource
                          specifying the DataLocation. Modela will connect to the
                          external object storage system, and will access the file
                          from the path specified by the Path field
                        type: string
                      connection:
                        default: ""
                        description: In the case of the type of location being a database,
                          ConnectionName specifies the name of the ConnectionName
                          resource that exists in the same tenant as the resource
                          specifying the DataLocation. Modela will attempt to connect
                          to the database using the credentials specified in the ConnectionName,
                          and will execute the query specified by the SQL field
                        type: string
                      database:
                        default: ""
                        description: The name of a database inside the database system
                          specified by the ConnectionName field
                        type: string
                      path:
                        default: ""
                        description: The path to a flat-file inside an object storage
                          system. When using the Modela API to upload files (through
                          the FileService API), Modela will upload the data to a predetermined
                          path based on the Tenant, DataProduct, DataProductVersion,
                          and resource type of the resource in relation to the file
                          being uploaded. The path does not need to adhere to this
                          format; you can give the path to a file inside a bucket
                          not managed by Modela
                        type: string
                      resourceRef:
                        description: In the case of the location type being Dataset
                          or PublicDataset, ResourceRef references another resource
                          that containing data that will be used as a data source
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      sql:
                        default: ""
                        description: The SQL statement which will be executed to query
                          data from the table specified by Table
                        type: string
                      table:
                        default: ""
                        description: The name of a table inside a database, if applicable
                        type: string
                      topic:
                        default: ""
                        description: The name of the streaming topic (currently unsupported)
                        type: string
                      type:
                        default: object
                        description: The type of location where the data resides,
                          which can either be an object inside an object storage system
                          (i.e. Minio), a SQL location like a table or a view, a data
                          stream (i.e. Kafka, currently unsupported), or a web location
                          (currently unsupported)
                        enum:
                        - object
                        - table
                        - view
                        - stream
                        - web
                        - public-dataset
                        - dataset
                        type: string
                      url:
                        default: ""
                        description: In the case of the location type being WebApi,
                          URL specifies the external location (HTTP or Git) that will
                          be queried and then stored as flat-file by the resource
                          which specifies the DataLocation
                        type: string
                    type: object
                type: object
              output:
                description: Output is the desired output
                properties:
                  createDataset:
                    default: false
                    description: CreateDataset if true, create a new dataset when
                      the recipe is done.
                    type: boolean
                  datasetName:
                    default: ""
                    description: DatasetName is the name of the dataset output to
                      the recipe
                    type: string
                  location:
                    description: Location is the data location folder of the actual
                      data resides.
                    properties:
                      bucket:
                        default: ""
                        description: In the case of the location type being an object
                          storage system, BucketName is the name of the VirtualBucket
                          resource that exists in the same tenant as the resource
                          specifying the DataLocation. Modela will connect to the
                          external object storage system, and will access the file
                          from the path specified by the Path field
                        type: string
                      connection:
                        default: ""
                        description: In the case of the type of location being a database,
                          ConnectionName specifies the name of the ConnectionName
                          resource that exists in the same tenant as the resource
                          specifying the DataLocation. Modela will attempt to connect
                          to the database using the credentials specified in the ConnectionName,
                          and will execute the query specified by the SQL field
                        type: string
                      database:
                        default: ""
                        description: The name of a database inside the database system
                          specified by the ConnectionName field
                        type: string
                      path:
                        default: ""
                        description: The path to a flat-file inside an object storage
                          system. When using the Modela API to upload files (through
                          the FileService API), Modela will upload the data to a predetermined
                          path based on the Tenant, DataProduct, DataProductVersion,
                          and resource type of the resource in relation to the file
                          being uploaded. The path does not need to adhere to this
                          format; you can give the path to a file inside a bucket
                          not managed by Modela
                        type: string
                      resourceRef:
                        description: In the case of the location type being Dataset
                          or PublicDataset, ResourceRef references another resource
                          that containing data that will be used as a data source
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      sql:
                        default: ""
                        description: The SQL statement which will be executed to query
                          data from the table specified by Table
                        type: string
                      table:
                        default: ""
                        description: The name of a table inside a database, if applicable
                        type: string
                      topic:
                        default: ""
                        description: The name of the streaming topic (currently unsupported)
                        type: string
                      type:
                        default: object
                        description: The type of location where the data resides,
                          which can either be an object inside an object storage system
                          (i.e. Minio), a SQL location like a table or a view, a data
                          stream (i.e. Kafka, currently unsupported), or a web location
                          (currently unsupported)
                        enum:
                        - object
                        - table
                        - view
                        - stream
                        - web
                        - public-dataset
                        - dataset
                        type: string
                      url:
                        default: ""
                        description: In the case of the location type being WebApi,
                          URL specifies the external location (HTTP or Git) that will
                          be queried and then stored as flat-file by the resource
                          which specifies the DataLocation
                        type: string
                    type: object
                type: object
              owner:
                default: no-one
                description: Owner is the owner of the recipe
                type: string
              resources:
                description: Resource define the resource requirements to run the
                  recipe
                properties:
                  custom:
                    default: false
                    description: If true, ignore the workload class name.
                    type: boolean
                  requirements:
                    description: The custom resource requirements for the workload,
                      which are used if `WorkloadName` is not set
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  workloadName:
                    default: general-large
                    description: If this resource is based on the workload, this field
                      contain the name of the workload. The name of a WorkloadClass.
                      The system will use the resource requirements described by the
                      WorkloadClass
                    type: string
                type: object
              sample:
                description: Sample specify the sampling paramters when viewing the
                  recipe
                properties:
                  column:
                    default: ""
                    description: The name of the column to be used for stratified
                      sampling
                    type: string
                  enabled:
                    default: false
                    description: Indicates if sampling is enabled
                    type: boolean
                  filter:
                    default: ""
                    description: The filter formula, valid only if the sample type
                      is a filter
                    type: string
                  percent:
                    default: 100
                    description: The percentage of rows to sample
                    format: int32
                    minimum: 0
                    type: integer
                  rows:
                    default: 500
                    description: The number of rows to sample (by default, 500)
                    format: int32
                    minimum: 0
                    type: integer
                  type:
                    default: random
                    description: The type of sampling (random sampling, by default)
                    enum:
                    - header
                    - random
                    - filter
                    - anomaly
                    - stratified
                    type: string
                type: object
              steps:
                description: Steps are the list of recipe steps
                items:
                  description: RecipeStep defines one step in the recipe
                  properties:
                    op:
                      description: RecipeStepOperation is the operation name of one
                        step in the recipe
                      type: string
                    parameters:
                      items:
                        description: RecipeStepParam is a key value parameter of the
                          recipe
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                        type: object
                      type: array
                  type: object
                type: array
              timeout:
                default: 600
                description: Timeout is the deadline setup on jobs for this recipe.
                format: int64
                type: integer
              ttl:
                default: 0
                description: TTL.
                format: int32
                type: integer
              unitTestsTemplate:
                description: Unit tests templates operating on the recipe run.
                properties:
                  enabled:
                    description: If false, this test case is disabled
                    type: boolean
                  tests:
                    items:
                      properties:
                        assertThat:
                          description: The assertion type
                          type: string
                        column:
                          description: If unit test is column test, this is the name
                            of the column
                          type: string
                        column2:
                          description: For test that involve two columns (e.g. correlation)
                          type: string
                        columns:
                          description: If unit test is column test, this is the name
                            of the column
                          items:
                            type: string
                          type: array
                        compareToRef:
                          description: Reference to another entity which is a ref.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead
                                of an entire object, this string should contain a
                                valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container
                                within a pod, this would take on a value like: "spec.containers{name}"
                                (where "name" refers to the name of the container
                                that triggered the event) or if no container name
                                is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to
                                have some well-defined way of referencing a part of
                                an object. TODO: this design is not final and this
                                field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info:
                                https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this
                                reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        dataFilter:
                          description: Sql statement to filter the data for this unit
                            test
                          type: string
                        enabled:
                          description: If false, this test case is disabled
                          type: boolean
                        entityRef:
                          description: Reference to an entity.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead
                                of an entire object, this string should contain a
                                valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container
                                within a pod, this would take on a value like: "spec.containers{name}"
                                (where "name" refers to the name of the container
                                that triggered the event) or if no container name
                                is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to
                                have some well-defined way of referencing a part of
                                an object. TODO: this design is not final and this
                                field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info:
                                https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this
                                reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        entityRef2:
                          description: Reference to an entity.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead
                                of an entire object, this string should contain a
                                valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container
                                within a pod, this would take on a value like: "spec.containers{name}"
                                (where "name" refers to the name of the container
                                that triggered the event) or if no container name
                                is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to
                                have some well-defined way of referencing a part of
                                an object. TODO: this design is not final and this
                                field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info:
                                https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this
                                reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        expectedCategory:
                          description: The expected value
                          type: string
                        expectedSet:
                          description: Expected set of values,if the assertion
                          items:
                            type: string
                          type: array
                        expectedValue:
                          description: The expected numerical value
                          type: number
                        featureFilter:
                          description: Filter the filter for this unit test.
                          type: string
                        generated:
                          description: Indicates if this validation rule was automatically
                            generated by the system
                          type: boolean
                        lower:
                          description: For range based tests.
                          format: float
                          type: number
                        lowerInclusive:
                          type: boolean
                        metric:
                          description: The metric that is used for the test
                          type: string
                        name:
                          description: The name of the test case, will be generate
                            if empty by the combination of assertion, entity ref,
                            column name and metric
                          type: string
                        periods:
                          description: The length of the past if we are comparing
                            to moving avg
                          format: int32
                          type: integer
                        referenceType:
                          description: Set the reference type for this unit test
                          type: string
                        tags:
                          description: The test case tags, used for filtering. Optional
                            Test Tags
                          items:
                            type: string
                          type: array
                        type:
                          description: The test type The type of the data test
                          type: string
                        upper:
                          format: float
                          type: number
                        upperInclusive:
                          type: boolean
                      type: object
                    type: array
                type: object
              versionName:
                default: ""
                description: VersionName is the data product version of the recipe
                  required.
                maxLength: 63
                type: string
            type: object
          status:
            description: RecipeStatus defines the observed state of Recipe
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              lastRun:
                description: Last run is the last time a data pipeline run was created
                properties:
                  completedAt:
                    description: The time at which the run concluded
                    format: date-time
                    type: string
                  duration:
                    description: The duration of the run in seconds
                    format: int32
                    type: integer
                  failureMessage:
                    description: In the case of failure, the resource controller which
                      created the run will set this field with a failure message
                    type: string
                  failureReason:
                    description: In the case of failure, the resource controller which
                      created the run will set this field with a failure reason
                    type: string
                  name:
                    description: The name of the run
                    type: string
                  status:
                    description: The status of the last run
                    type: string
                type: object
              observedGeneration:
                description: ObservedGeneration is the Last generation that was acted
                  on
                format: int64
                type: integer
              updatedAt:
                description: Last time the object was updated
                format: date-time
                type: string
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
