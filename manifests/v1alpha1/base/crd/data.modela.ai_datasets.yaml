---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: datasets.data.modela.ai
spec:
  group: data.modela.ai
  names:
    categories:
    - data
    - modela
    - all
    kind: Dataset
    listKind: DatasetList
    plural: datasets
    shortNames:
    - ds
    singular: dataset
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Status
      type: string
    - jsonPath: .spec.owner
      name: Owner
      type: string
    - jsonPath: .spec.versionName
      name: Version
      type: string
    - jsonPath: .spec.datasourceName
      name: Data Source
      type: string
    - jsonPath: .spec.type
      name: Type
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Dataset represents the specification for a dataset to be processed
          from an external data source
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DatasetSpec defines the desired state of the Dataset
            properties:
              artifactBucketName:
                description: The name of the Virtual Bucket where Dataset artifacts
                  (reports, snapshots) generated by the Study will be stored. If empty,
                  it will default to the default Virtual Bucket of the Data Product
                type: string
              correlation:
                description: The specification for how to find the correlations of
                  the Dataset's features during the profiling phase. Based on the
                  specification, the data plane will compute the correlation between
                  each feature and will store the highest-scoring
                properties:
                  cutoff:
                    default: 50
                    description: The minimum value of a computed correlation to be
                      stored as a result
                    type: number
                  method:
                    default: pearson
                    description: The method to be used when computing correlations
                    type: string
                  top:
                    default: 10
                    description: The number of top correlations to be included in
                      the correlation results
                    format: int32
                    type: integer
                type: object
              dataSourceName:
                default: ""
                description: DataSourceName specifies the name of the Data Source
                  which Dataset runs will use as a schema for incoming data
                maxLength: 63
                type: string
              description:
                default: ""
                description: Description contains the user-provided description of
                  the object
                maxLength: 512
                type: string
              fast:
                default: false
                description: Indicates if the Dataset should be quickly processed.
                  If enabled, the validation, profiling, and reporting will be skipped
                type: boolean
              featureGroupName:
                description: FeatureGroupName specifies the name of the Feature Group
                  that created the Dataset, if applicable
                type: string
              featureGroups:
                description: FeatureGroups contains the list of feature groups that
                  were used to construct the dataset, if applicable
                items:
                  description: 'ObjectReference contains enough information to let
                    you inspect or modify the referred object. --- New uses of this
                    type are discouraged because of difficulty describing its usage
                    when embedded in APIs. 1. Ignored fields.  It includes many fields
                    which are not generally honored.  For instance, ResourceVersion
                    and FieldPath are both very rarely valid in actual usage. 2. Invalid
                    usage help.  It is impossible to add specific help for individual
                    usage.  In most embedded usages, there are particular restrictions
                    like, "must refer only to types A and B" or "UID not honored"
                    or "name must be restricted". Those cannot be well described when
                    embedded. 3. Inconsistent validation.  Because the usages are
                    different, the validation rules are different by usage, which
                    makes it hard for users to predict what will happen. 4. The fields
                    are both imprecise and overly precise.  Kind is not a precise
                    mapping to a URL. This can produce ambiguity during interpretation
                    and require a REST mapping.  In most cases, the dependency is
                    on the group,resource tuple and the version of the actual struct
                    is irrelevant. 5. We cannot easily change it.  Because this type
                    is embedded in many locations, updates to this type will affect
                    numerous schemas.  Don''t make new APIs embed an underspecified
                    API type they do not control. Instead of using this type, create
                    a locally provided and used type that is well-focused on your
                    reference. For example, ServiceReferences for admission registration:
                    https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                    .'
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              generateFeatureHistogram:
                default: true
                description: Indicates if a Feature Histogram will be generated from
                  the dataset's columns
                type: boolean
              groupBy:
                description: Define how to group by the base dataset, before making
                  the forecasts. By default, this dataset is assigned
                properties:
                  aggregate:
                    default: sum
                    description: Aggregation function. Define how to aggregate By
                      default this is the aggregation function from the data source.
                    enum:
                    - min
                    - max
                    - mean
                    - median
                    - sum
                    - stddev
                    - var
                    - none
                    type: string
                  enabled:
                    description: Enabled the group by, if not enabled, the dataset
                      is treated as defined in the data source.
                    type: boolean
                  frequency:
                    default: day
                    description: The time series frequency, if not specify they freq
                      will be the base freq from the data source.
                    enum:
                    - second
                    - minute
                    - hour
                    - day
                    - week
                    - month
                    - quarter
                    - year
                    - multi-year
                    type: string
                  groupBy:
                    description: For group forecasting, this is the key of the group
                      If not specify this will be the key from the data source.
                    items:
                      type: string
                    type: array
                  interval:
                    default: 1
                    description: The interval to forecast at this level. If not specify
                      the interval will be the base interval the data source
                    format: int32
                    type: integer
                type: object
              groupLocations:
                description: Define how to group by the base dataset, before making
                  the forecasts. By default, this dataset is assigned
                properties:
                  groupDataFile:
                    description: The folder of group data
                    type: string
                  groupDataFolder:
                    description: The folder of group data
                    type: string
                  groupFeaturesFile:
                    description: The path of the group features files
                    type: string
                  groupProfileFolder:
                    description: The folder group data profile
                    type: string
                  groupReportFile:
                    description: The path of the group report
                    type: string
                  groupRoot:
                    description: The root of the group folders and files
                    type: string
                  groupsRoot:
                    description: The root folder of all the groups
                    type: string
                type: object
              key:
                description: If this dataset represent a group in a multi-series dataset,
                  these are the values of the group key.
                items:
                  type: string
                type: array
              labRef:
                description: The reference to the Lab under which Jobs created by
                  the Dataset will be executed. If empty, it will default to the default
                  Lab of the Data Product for the Dataset
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              modelClassName:
                description: ModelClassName specifies the name of the Model Class
                  which created the Dataset, if applicable
                type: string
              modelClassRunName:
                description: ModelClassRunName specifies the name of the Model Class
                  Run which created the Dataset, if applicable
                type: string
              notification:
                description: Notification specifies the configuration for Alerts generated
                  by the resource
                properties:
                  notifierName:
                    description: NotifierName specifies the name of a single Notifier
                      resource which the Alert will be forwarded to
                    type: string
                  selector:
                    additionalProperties:
                      type: string
                    description: Selector defines a map of labels that will be matched
                      to find multiple Notifier resource to forward alerts to
                    type: object
                  ttl:
                    default: 3600
                    description: TTL defines the time-to-live for Alerts, in seconds,
                      after which they will be deleted
                    format: int32
                    type: integer
                type: object
              origin:
                description: Origin is the location of the data file or database query
                  which holds the raw data of the Dataset. When the Dataset is created,
                  a workload will be created to snapshot the location and store it
                  in the bucket specified by ArtifactBucketName
                properties:
                  bucket:
                    default: ""
                    description: In the case of the location type being an object
                      storage system, BucketName is the name of the VirtualBucket
                      resource that exists in the same tenant as the resource specifying
                      the DataLocation. Modela will connect to the external object
                      storage system, and will access the file from the path specified
                      by the Path field
                    type: string
                  connection:
                    default: ""
                    description: In the case of the type of location being a database,
                      ConnectionName specifies the name of the ConnectionName resource
                      that exists in the same tenant as the resource specifying the
                      DataLocation. Modela will attempt to connect to the database
                      using the credentials specified in the ConnectionName, and will
                      execute the query specified by the SQL field
                    type: string
                  database:
                    default: ""
                    description: The name of a database inside the database system
                      specified by the ConnectionName field
                    type: string
                  path:
                    default: ""
                    description: The path to a flat-file inside an object storage
                      system. When using the Modela API to upload files (through the
                      FileService API), Modela will upload the data to a predetermined
                      path based on the Tenant, Data Product, Data Product Version,
                      and resource type of the resource in relation to the file being
                      uploaded. The path does not need to adhere to this format; you
                      may also specify an arbitrary path
                    type: string
                  resourceRef:
                    description: In the case of the location type being Dataset or
                      PublicDataset, ResourceRef references another resource that
                      containing data that will be used as a data source
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  sql:
                    default: ""
                    description: The SQL statement which will be executed to query
                      data from the table specified by Table
                    type: string
                  table:
                    default: ""
                    description: The name of a table inside a database, if applicable
                    type: string
                  topic:
                    default: ""
                    description: The name of the streaming topic (currently unsupported)
                    type: string
                  type:
                    default: object
                    description: The type of location where the data resides, which
                      can either be an object inside an object storage system (i.e.
                      Minio), a SQL location like a table or a view, a data stream
                      (i.e. Kafka, currently unsupported), or a web location (currently
                      unsupported)
                    enum:
                    - object
                    - table
                    - view
                    - stream
                    - web
                    - public-dataset
                    - dataset
                    type: string
                  url:
                    default: ""
                    description: In the case of the location type being WebApi, URL
                      specifies the external location (HTTP or Git) that will be queried
                      and then stored as flat-file by the resource which specifies
                      the DataLocation
                    type: string
                type: object
              owner:
                default: no-one
                description: Owner specifies the name of the Account which the object
                  belongs to
                type: string
              predictorRef:
                description: Used for prediction dataset, contain a reference to the
                  predictor resource that created the dataset
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              reported:
                default: true
                description: Indicates if a PDF report containing the Dataset profile
                  should be generated
                type: boolean
              resources:
                description: Resources specifies the resource requirements that will
                  be allocated for the Dataset
                properties:
                  custom:
                    default: false
                    description: Custom indicates if the custom requirements specified
                      by Requirements will be used
                    type: boolean
                  requirements:
                    description: Requirements specifies the custom resource requirements
                      for the workload
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  workloadName:
                    description: WorkloadName references the name of a Workload Class
                      resource that will be used to determine the resource requirements
                      of the workload. If specified, WorkloadName will take precedence
                      over custom requirements
                    type: string
                type: object
              role:
                default: training
                description: Role specifies the role of the dataset (training, feedback,
                  etc.)
                enum:
                - unlabled
                - serving
                - feedback
                - training
                - prediction
                - featuregroup
                type: string
              run:
                description: RunSpec specifies the configuration for runs created
                  by the Dataset
                properties:
                  maxPreviousRuns:
                    default: 1
                    description: MaxPreviousRuns specifies the amount of previous
                      runs to maintain, sorted by their run version. When a new run
                      is created, any runs with a version below that of the latest
                      version minus MaxPreviousRuns will be garbage collected. Runs
                      which are still in progress will not be affected
                    format: int32
                    type: integer
                  timeout:
                    description: Timeout specifies the deadline in seconds for a run
                      to complete, after which it will be aborted. If empty, runs
                      will not have a deadline
                    format: int32
                    type: integer
                type: object
              sample:
                description: Sample specifies the configuration to sample the dataset's
                  data
                properties:
                  column:
                    default: ""
                    description: The name of the column to be used for stratified
                      sampling
                    type: string
                  enabled:
                    default: false
                    description: Indicates if sampling is enabled
                    type: boolean
                  filter:
                    default: ""
                    description: The filter formula, valid only if the sample type
                      is a filter
                    type: string
                  percent:
                    default: 100
                    description: The percentage of rows to sample
                    format: int32
                    minimum: 0
                    type: integer
                  rows:
                    default: 500
                    description: The number of rows to sample (by default, 500)
                    format: int32
                    minimum: 0
                    type: integer
                  type:
                    default: random
                    description: The type of sampling (random sampling, by default)
                    enum:
                    - header
                    - random
                    - filter
                    - anomaly
                    - stratified
                    type: string
                type: object
              schedule:
                description: Schedule specifies the schedule to create new runs for
                  the Dataset
                properties:
                  cron:
                    description: The cron string for the schedule, applicable if the
                      trigger type is Cron. See https://docs.oracle.com/cd/E12058_01/doc/doc.1014/e12030/cron_expressions.htm
                      for more information
                    type: string
                  enabled:
                    default: false
                    description: Enabled indicates if the schedule is enabled. When
                      enabled, a CronJob will be created which when triggered will
                      initiate the creation of a run for the resource that specifies
                      the schedule
                    type: boolean
                  type:
                    description: The type of schedule, which can be a frequency interval
                      or a cron expression
                    enum:
                    - now
                    - once
                    - hourly
                    - daily
                    - weekly
                    - monthly
                    - yearly
                    - cron
                    type: string
                type: object
              servingDatasetRef:
                description: For dataset that contain feedback information, this is
                  reference to the serving dataset
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              subtask:
                default: none
                description: The machine learning sub-task relevant to the Dataset.
                  This field must be the same as the subtask specified by the Data
                  Source
                enum:
                - text-ner
                - text-classification
                - text-multi-classification
                - text-regression
                - text-multi-label-classification
                - text-conversation
                - text-lang-generation
                - text-lang-model
                - text-multi-modal
                - text-ner
                - text-qa
                - text-summarization
                - text-sentence-pair
                - text-representation-generation
                - text-sentiment-analysis
                - text-code-generation
                - text-translation
                - text-lang-detection
                - text-grammar-correction
                - text-paraphrasing
                - text-intent-classification
                - text-semantic-similarity
                - text-keyword-extraction
                - text-pos
                - text-tokenization
                - text-lemma
                - image-classification
                - image-multi-label-classification
                - image-object-detection
                - image-segmentation
                - none
                type: string
              synthetic:
                description: Synthetic specifies to configuration to augment the dataset
                  with synthetic data
                properties:
                  enabled:
                    description: Indicates if the generation of synthetic data is
                      enabled
                    type: boolean
                  rows:
                    default: 0
                    description: The number of top correlations to be included in
                      the correlation results
                    format: int32
                    type: integer
                type: object
              tags:
                description: Tags attached to the dataset
                items:
                  type: string
                type: array
              task:
                description: The machine learning task relevant to the Dataset. This
                  field must be the same as the task specified by the Data Source
                enum:
                - binary-classification
                - multi-classification
                - forecasting
                - regression
                - clustering
                - recommendation
                - outlier-detection
                - novelty-detection
                - auto
                - unknown
                - partition-forecasting
                - monitoring
                type: string
              type:
                default: tabular
                description: The type of dataset which was uploaded. Tabular is the
                  only supported type as of the current release
                enum:
                - tabular
                - image
                - nlp
                - video
                - audio
                type: string
              unitTest:
                default: true
                description: Indicates if the Dataset should be checked against the
                  validation rules of its Data Source
                type: boolean
              unitTests:
                description: UnitTests specifies the unit tests that will be run against
                  ingested datasets
                properties:
                  enabled:
                    description: If false, this test case is disabled
                    type: boolean
                  tests:
                    items:
                      properties:
                        assertThat:
                          description: The assertion type
                          type: string
                        column:
                          description: If unit test is column test, this is the name
                            of the column
                          type: string
                        column2:
                          description: For test that involve two columns (e.g. correlation)
                          type: string
                        columns:
                          description: If unit test is column test, this is the name
                            of the column
                          items:
                            type: string
                          type: array
                        compareToRef:
                          description: Reference to another entity which is a ref.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead
                                of an entire object, this string should contain a
                                valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container
                                within a pod, this would take on a value like: "spec.containers{name}"
                                (where "name" refers to the name of the container
                                that triggered the event) or if no container name
                                is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to
                                have some well-defined way of referencing a part of
                                an object. TODO: this design is not final and this
                                field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info:
                                https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this
                                reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        dataFilter:
                          description: Sql statement to filter the data for this unit
                            test
                          type: string
                        enabled:
                          description: If false, this test case is disabled
                          type: boolean
                        entityRef:
                          description: Reference to an entity.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead
                                of an entire object, this string should contain a
                                valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container
                                within a pod, this would take on a value like: "spec.containers{name}"
                                (where "name" refers to the name of the container
                                that triggered the event) or if no container name
                                is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to
                                have some well-defined way of referencing a part of
                                an object. TODO: this design is not final and this
                                field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info:
                                https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this
                                reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        entityRef2:
                          description: Reference to an entity.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead
                                of an entire object, this string should contain a
                                valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container
                                within a pod, this would take on a value like: "spec.containers{name}"
                                (where "name" refers to the name of the container
                                that triggered the event) or if no container name
                                is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to
                                have some well-defined way of referencing a part of
                                an object. TODO: this design is not final and this
                                field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info:
                                https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this
                                reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        expectedCategory:
                          description: The expected value
                          type: string
                        expectedSet:
                          description: Expected set of values,if the assertion
                          items:
                            type: string
                          type: array
                        expectedValue:
                          description: The expected numerical value
                          type: number
                        featureFilter:
                          description: Filter the filter for this unit test.
                          type: string
                        generated:
                          description: Indicates if this validation rule was automatically
                            generated by the system
                          type: boolean
                        lower:
                          description: For range based tests.
                          format: float
                          type: number
                        lowerInclusive:
                          type: boolean
                        metric:
                          description: The metric that is used for the test
                          type: string
                        name:
                          description: The name of the test case, will be generate
                            if empty by the combination of assertion, entity ref,
                            column name and metric
                          type: string
                        periods:
                          description: The length of the past if we are comparing
                            to moving avg
                          format: int32
                          type: integer
                        referenceType:
                          description: Set the reference type for this unit test
                          type: string
                        tags:
                          description: The test case tags, used for filtering. Optional
                            Test Tags
                          items:
                            type: string
                          type: array
                        type:
                          description: The test type The type of the data test
                          type: string
                        upper:
                          format: float
                          type: number
                        upperInclusive:
                          type: boolean
                      type: object
                    type: array
                type: object
            type: object
          status:
            description: DatasetStatus defines the observed state of a Dataset object
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              failureMessage:
                description: LastFailureMessage specifies the failure message of the
                  last run. If the last run succeeded, the field will be cleared
                type: string
              lastRunAt:
                description: LastRunAt specifies the time at which a run was last
                  created for the Dataset
                format: date-time
                type: string
              observedGeneration:
                description: ObservedGeneration specifies the last generation that
                  was reconciled
                format: int64
                type: integer
              runVersion:
                default: 1
                description: RunVersion contains the version of the last run, which
                  is incremented for each new run
                format: int32
                type: integer
              schedule:
                description: Schedule specifies the status of the run schedule
                properties:
                  failureMessage:
                    description: The failure message of the last run; if the run succeeded,
                      the field will be set to empty
                    type: string
                  lastRunCompletionAt:
                    description: Last time a run ended in completion or failure
                    format: date-time
                    type: string
                  lastRunCreationAt:
                    description: Last time a run was created
                    format: date-time
                    type: string
                  lastRunLogs:
                    description: The logs from the last run
                    items:
                      description: ContainerLog describes the location of logs for
                        a single Job
                      properties:
                        bucket:
                          description: The bucket the log was stored in
                          type: string
                        container:
                          description: The container name
                          type: string
                        job:
                          description: The name of the Job
                          type: string
                        key:
                          description: The path to the log in the bucket
                          type: string
                      type: object
                    type: array
                  lastRunName:
                    description: The version of the last run
                    format: int32
                    type: integer
                type: object
              updatedAt:
                description: UpdatedAt specifies the last time the Dataset was changed
                format: date-time
                type: string
              version:
                default: 1
                description: Version specifies the numerical generation of the object
                  as tracked by Modela, which is incremented each time the object
                  is changed
                format: int32
                type: integer
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
