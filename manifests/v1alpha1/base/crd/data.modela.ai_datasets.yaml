---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: datasets.data.modela.ai
spec:
  group: data.modela.ai
  names:
    categories:
    - data
    - modela
    - all
    kind: Dataset
    listKind: DatasetList
    plural: datasets
    shortNames:
    - ds
    singular: dataset
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Status
      type: string
    - jsonPath: .spec.owner
      name: Owner
      type: string
    - jsonPath: .spec.versionName
      name: Version
      type: string
    - jsonPath: .spec.datasourceName
      name: Location Source
      type: string
    - jsonPath: .spec.type
      name: Type
      type: string
    - jsonPath: .status.statistics.rows
      name: Rows
      type: integer
    - jsonPath: .status.statistics.cols
      name: Columns
      type: integer
    - jsonPath: .status.statistics.fileSize
      name: Size
      type: integer
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Dataset represents a chunk of data that has been analyzed and
          stored inside a managed bucket
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DatasetSpec defines the desired state of the Dataset
            properties:
              activeDeadlineSeconds:
                default: 600
                description: The deadline in seconds for all Jobs created by the Dataset
                format: int64
                type: integer
              correlation:
                description: The specification for how to find the correlations of
                  the Dataset's features during the profiling phase. Based on the
                  specification, the data plane will compute the correlation between
                  each feature and will store the highest-scoring
                properties:
                  cutoff:
                    default: 50
                    description: The minimum value of a computed correlation to be
                      stored as a result
                    type: number
                  method:
                    default: pearson
                    description: The method to be used when computing correlations
                    type: string
                  top:
                    default: 10
                    description: The number of top correlations to be included in
                      the correlation results
                    format: int32
                    type: integer
                type: object
              datasourceName:
                default: ""
                description: The reference to the Location Source resource which exists
                  in the same Location Product namespace as the object. The Location
                  Source must represent the columns and the task type of the Dataset.
                  The validation rules associated with the Location Source will be
                  validated against the raw data of the Dataset once it is created
                maxLength: 63
                type: string
              description:
                default: ""
                description: User-provided description of the object
                maxLength: 512
                type: string
              displayName:
                default: ""
                description: User-provided display name of the object
                type: string
              fast:
                default: false
                description: Indicates if the Dataset should be quickly processed.
                  If enabled, the validation, profiling, and reporting phases will
                  be skipped.
                type: boolean
              featureGroupName:
                description: In case of training data, this is the model class name
                  that created it.
                type: string
              featureGroups:
                description: List the feature groups that were used to create this
                  dataset This is used for lineage.
                items:
                  description: 'ObjectReference contains enough information to let
                    you inspect or modify the referred object. --- New uses of this
                    type are discouraged because of difficulty describing its usage
                    when embedded in APIs. 1. Ignored fields.  It includes many fields
                    which are not generally honored.  For instance, ResourceVersion
                    and FieldPath are both very rarely valid in actual usage. 2. Invalid
                    usage help.  It is impossible to add specific help for individual
                    usage.  In most embedded usages, there are particular restrictions
                    like, "must refer only to types A and B" or "UID not honored"
                    or "name must be restricted". Those cannot be well described when
                    embedded. 3. Inconsistent validation.  Because the usages are
                    different, the validation rules are different by usage, which
                    makes it hard for users to predict what will happen. 4. The fields
                    are both imprecise and overly precise.  Kind is not a precise
                    mapping to a URL. This can produce ambiguity during interpretation
                    and require a REST mapping.  In most cases, the dependency is
                    on the group,resource tuple and the version of the actual struct
                    is irrelevant. 5. We cannot easily change it.  Because this type
                    is embedded in many locations, updates to this type will affect
                    numerous schemas.  Don''t make new APIs embed an underspecified
                    API type they do not control. Instead of using this type, create
                    a locally provided and used type that is well-focused on your
                    reference. For example, ServiceReferences for admission registration:
                    https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                    .'
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              featurized:
                default: false
                description: Indicates if the Dataset should be featurized. Features
                  are computed using tsfresh. If the dataset is grouped dataset, a
                  feature will be computed to each group. If enabled, the validation,
                  profiling, and reporting phases will be skipped.
                type: boolean
              generateFeatureHistogram:
                default: false
                description: If true generate feature histogram object from this dataset
                  columns.
                type: boolean
              groupBy:
                description: Define how to group by the base dataset, before making
                  the forecasts. By default, this dataset is assigned
                properties:
                  aggr:
                    default: sum
                    description: Aggregation function. Define how to aggregate By
                      default this is the aggregation function from the data source.
                    enum:
                    - min
                    - max
                    - mean
                    - median
                    - sum
                    - stddev
                    - var
                    - none
                    type: string
                  enabled:
                    description: Enabled the group by, if not enabled, the dataset
                      is treated as defined in the data source.
                    type: boolean
                  freq:
                    default: day
                    description: The time series frequency, if not specify they freq
                      will be the base freq from the data source.
                    enum:
                    - second
                    - minute
                    - hour
                    - day
                    - week
                    - month
                    - quarter
                    - year
                    - multi-year
                    type: string
                  groupby:
                    description: For group forecasting, this is the key of the group
                      If not specify this will be the key from the data source.
                    items:
                      type: string
                    type: array
                  interval:
                    default: 1
                    description: The interval to forecast at this level. If not specify
                      the interval will be the base interval the data source
                    format: int32
                    type: integer
                type: object
              groupLocations:
                description: Define how to group by the base dataset, before making
                  the forecasts. By default, this dataset is assigned
                properties:
                  groupDataFile:
                    description: The folder of group data
                    type: string
                  groupDataFolder:
                    description: The folder of group data
                    type: string
                  groupFeaturesFile:
                    description: The path of the group features files
                    type: string
                  groupProfileFolder:
                    description: The folder group data profile
                    type: string
                  groupReportFile:
                    description: The path of the group report
                    type: string
                  groupRoot:
                    description: The root of the group folders and files
                    type: string
                  groupsRoot:
                    description: The root folder of all the groups
                    type: string
                type: object
              key:
                description: If this dataset represent a group in a multi series dataset,
                  these are the values of the group key.
                items:
                  type: string
                type: array
              labRef:
                description: The reference to the Lab under which Jobs created by
                  the Dataset will be executed
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              location:
                description: Location is the final location of the data which was
                  copied from the `Origin` location during the ingestion phase. This
                  field is set by the Dataset resource controller and should not be
                  changed by any end-users
                properties:
                  bucketName:
                    default: ""
                    description: In the case of the location type being an object
                      storage system, BucketName is the name of the VirtualBucket
                      resource that exists in the same tenant as the resource specifying
                      the DataLocation. Modela will connect to the external object
                      storage system, and will access the file from the path specified
                      by the Path field
                    type: string
                  connectionName:
                    default: ""
                    description: In the case of the type of location being a database,
                      ConnectionName specifies the name of the Connection resource
                      that exists in the same tenant as the resource specifying the
                      DataLocation. Modela will attempt to connect to the database
                      using the credentials specified in the Connection, and will
                      execute the query specified by the SQL field
                    type: string
                  database:
                    default: ""
                    description: The name of a database inside the database system
                      specified by the ConnectionName field
                    type: string
                  path:
                    default: ""
                    description: The path to a flat-file inside an object storage
                      system. When using the Modela API to upload files (through the
                      FileService API), Modela will upload the data to a predetermined
                      path based on the Tenant, DataProduct, DataProductVersion, and
                      resource type of the resource in relation to the file being
                      uploaded. The path does not need to adhere to this format; you
                      can give the path to a file inside a bucket not managed by Modela
                    type: string
                  resourceRef:
                    description: In the case of the location type being Dataset or
                      PublicDataset, ResourceRef references another resource that
                      containing data that will be used as a data source
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  sql:
                    default: ""
                    description: The SQL statement which will be executed to query
                      data from the table specified by Table
                    type: string
                  table:
                    default: ""
                    description: The name of a table inside a database, if applicable
                    type: string
                  topic:
                    default: ""
                    description: The name of the streaming topic (currently unsupported)
                    type: string
                  type:
                    default: object
                    description: The type of location where the data resides, which
                      can either be an object inside an object storage system (i.e.
                      Minio), a SQL location like a table or a view, a data stream
                      (i.e. Kafka, currently unsupported), or a web location (currently
                      unsupported)
                    enum:
                    - object
                    - table
                    - view
                    - stream
                    - web
                    - public-dataset
                    - dataset
                    type: string
                  url:
                    default: ""
                    description: In the case of the location type being WebApi, URL
                      specifies the external location (HTTP or Git) that will be queried
                      and then stored as flat-file by the resource which specifies
                      the DataLocation
                    type: string
                type: object
              maxEventTime:
                description: For filtering
                format: date-time
                type: string
              minEventTime:
                description: For filtering
                format: date-time
                type: string
              modelClassName:
                description: The model class for this dataset if the dataset was created
                  by a model class
                type: string
              modelClassRunName:
                description: If this report was created by a model class run, this
                  is the run name
                type: string
              origin:
                description: Origin is the location of the data file or database query
                  which holds the raw data of the Dataset. When the Dataset is created,
                  the resource controller will retrieve the data from the location,
                  validate it against its Location Source if applicable, and store
                  it inside the `live` section of the Virtual Bucket resource specified
                  by the location
                properties:
                  bucketName:
                    default: ""
                    description: In the case of the location type being an object
                      storage system, BucketName is the name of the VirtualBucket
                      resource that exists in the same tenant as the resource specifying
                      the DataLocation. Modela will connect to the external object
                      storage system, and will access the file from the path specified
                      by the Path field
                    type: string
                  connectionName:
                    default: ""
                    description: In the case of the type of location being a database,
                      ConnectionName specifies the name of the Connection resource
                      that exists in the same tenant as the resource specifying the
                      DataLocation. Modela will attempt to connect to the database
                      using the credentials specified in the Connection, and will
                      execute the query specified by the SQL field
                    type: string
                  database:
                    default: ""
                    description: The name of a database inside the database system
                      specified by the ConnectionName field
                    type: string
                  path:
                    default: ""
                    description: The path to a flat-file inside an object storage
                      system. When using the Modela API to upload files (through the
                      FileService API), Modela will upload the data to a predetermined
                      path based on the Tenant, DataProduct, DataProductVersion, and
                      resource type of the resource in relation to the file being
                      uploaded. The path does not need to adhere to this format; you
                      can give the path to a file inside a bucket not managed by Modela
                    type: string
                  resourceRef:
                    description: In the case of the location type being Dataset or
                      PublicDataset, ResourceRef references another resource that
                      containing data that will be used as a data source
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  sql:
                    default: ""
                    description: The SQL statement which will be executed to query
                      data from the table specified by Table
                    type: string
                  table:
                    default: ""
                    description: The name of a table inside a database, if applicable
                    type: string
                  topic:
                    default: ""
                    description: The name of the streaming topic (currently unsupported)
                    type: string
                  type:
                    default: object
                    description: The type of location where the data resides, which
                      can either be an object inside an object storage system (i.e.
                      Minio), a SQL location like a table or a view, a data stream
                      (i.e. Kafka, currently unsupported), or a web location (currently
                      unsupported)
                    enum:
                    - object
                    - table
                    - view
                    - stream
                    - web
                    - public-dataset
                    - dataset
                    type: string
                  url:
                    default: ""
                    description: In the case of the location type being WebApi, URL
                      specifies the external location (HTTP or Git) that will be queried
                      and then stored as flat-file by the resource which specifies
                      the DataLocation
                    type: string
                type: object
              owner:
                default: no-one
                description: The name of the Account which created the object, which
                  exists in the same tenant as the object
                type: string
              predictorRef:
                description: Used for prediction dataset, contain a reference to the
                  predictor resource that created this dataset
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              reported:
                default: true
                description: Indicates if a PDF report containing the Dataset's profile
                  should be generated
                type: boolean
              resources:
                description: Resources specifies the resource requirements which the
                  Dataset will request when creating Jobs to analyze the data
                properties:
                  cpuImage:
                    description: Reference to the managed CPU trainer image, used
                      internally
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  custom:
                    default: false
                    description: If true, ignore the workload class name.
                    type: boolean
                  gpuImage:
                    description: Reference to the managed GPU trainer image, used
                      internally
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  requirements:
                    description: The custom resource requirements for the workload,
                      which are used if `WorkloadName` is not set
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  workloadName:
                    default: general-large
                    description: If this resource is based on the workload, this field
                      contain the name of the workload. The name of a WorkloadClass.
                      The system will use the resource requirements described by the
                      WorkloadClass
                    type: string
                type: object
              role:
                default: training
                description: The dataset role
                enum:
                - unlabled
                - serving
                - feedback
                - training
                - prediction
                - featuregroup
                type: string
              sample:
                description: The specification for how the data should be sampled,
                  if applicable. Sampling may improve dataset and model creation time
                  in the case of very large datasets that are being rapidly prototyped
                  and iterated on
                properties:
                  column:
                    default: ""
                    description: The name of the column to be used for stratified
                      sampling
                    type: string
                  enabled:
                    default: false
                    description: Indicates if sampling is enabled
                    type: boolean
                  filter:
                    default: ""
                    description: The filter formula, valid only if the sample type
                      is a filter
                    type: string
                  percent:
                    default: 100
                    description: The percentage of rows to sample
                    format: int32
                    minimum: 0
                    type: integer
                  rows:
                    default: 500
                    description: The number of rows to sample (by default, 500)
                    format: int32
                    minimum: 0
                    type: integer
                  type:
                    default: random
                    description: The type of sampling (random sampling, by default)
                    enum:
                    - header
                    - random
                    - filter
                    - anomaly
                    - stratified
                    type: string
                type: object
              servingDatasetRef:
                description: For dataset that contain feedback information, this is
                  reference to the serving dataset
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              snapshotted:
                default: false
                description: Indicates if the resource controller has created a snapshot
                  of the data in the case that it is being read directly from a database,
                  and must be converted to a flat-file type such as a CSV as a result
                type: boolean
              subtask:
                default: none
                description: The machine learning sub task relevant to the Dataset.
                  This field *must* be the same as the Location Source of the object
                enum:
                - text-ner
                - text-classification
                - text-multi-classification
                - text-regression
                - text-multi-label-classification
                - text-conversation
                - text-lang-generation
                - text-lang-model
                - text-multi-modal
                - text-ner
                - text-qa
                - text-summarization
                - text-sentence-pair
                - text-representation-generation
                - text-sentiment-analysis
                - text-code-generation
                - text-translation
                - text-lang-detection
                - text-grammar-correction
                - text-paraphrasing
                - text-intent-classification
                - text-semantic-similarity
                - text-keyword-extraction
                - text-pos
                - text-tokenization
                - text-lemma
                - image-classification
                - image-multi-label-classification
                - image-object-detection
                - image-segmentation
                - none
                type: string
              synthetic:
                description: If the dataset is Synthetic , this is the syntactic spec
                properties:
                  enabled:
                    description: Enabled syntatic data
                    type: boolean
                  rows:
                    default: 0
                    description: The number of top correlations to be included in
                      the correlation results
                    format: int32
                    type: integer
                type: object
              tags:
                description: Tags attached to the dataset
                items:
                  type: string
                type: array
              task:
                description: The machine learning task relevant to the Dataset. This
                  field *must* be the same as the Location Source of the object
                enum:
                - binary-classification
                - multi-classification
                - forecasting
                - regression
                - clustering
                - recommendation
                - outlier-detection
                - novelty-detection
                - auto
                - unknown
                - partition-forecasting
                - monitoring
                type: string
              type:
                default: tabular
                description: The type of dataset which was uploaded. `tabular` is
                  the only supported type as of the current release
                enum:
                - tabular
                - image
                - nlp
                - video
                - audio
                type: string
              unitTested:
                default: true
                description: Indicates if the Dataset should be checked against the
                  validation rules of its Location Source
                type: boolean
              unitTests:
                description: The specification for tests for a new dataset
                properties:
                  enabled:
                    description: If false, this test case is disabled
                    type: boolean
                  tests:
                    items:
                      properties:
                        assertThat:
                          description: The assertion type
                          type: string
                        column:
                          description: If unit test is column test, this is the name
                            of the column
                          type: string
                        column2:
                          description: For test that involve two columns (e.g. correlation)
                          type: string
                        columns:
                          description: If unit test is column test, this is the name
                            of the column
                          items:
                            type: string
                          type: array
                        compareToRef:
                          description: Reference to another entity which is a ref.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead
                                of an entire object, this string should contain a
                                valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container
                                within a pod, this would take on a value like: "spec.containers{name}"
                                (where "name" refers to the name of the container
                                that triggered the event) or if no container name
                                is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to
                                have some well-defined way of referencing a part of
                                an object. TODO: this design is not final and this
                                field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info:
                                https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this
                                reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        enabled:
                          description: If false, this test case is disabled
                          type: boolean
                        entityRef:
                          description: Reference to an entity.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead
                                of an entire object, this string should contain a
                                valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container
                                within a pod, this would take on a value like: "spec.containers{name}"
                                (where "name" refers to the name of the container
                                that triggered the event) or if no container name
                                is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to
                                have some well-defined way of referencing a part of
                                an object. TODO: this design is not final and this
                                field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info:
                                https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this
                                reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        entityRef2:
                          description: Reference to an entity.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead
                                of an entire object, this string should contain a
                                valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container
                                within a pod, this would take on a value like: "spec.containers{name}"
                                (where "name" refers to the name of the container
                                that triggered the event) or if no container name
                                is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to
                                have some well-defined way of referencing a part of
                                an object. TODO: this design is not final and this
                                field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info:
                                https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this
                                reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        expectedCategory:
                          description: The expected value
                          type: string
                        expectedSet:
                          description: Expected set of values,if the assertion
                          items:
                            type: string
                          type: array
                        expectedValue:
                          description: The expected numerical value
                          type: number
                        featureFilter:
                          description: Filter the filter for this unit test.
                          type: string
                        generated:
                          description: Indicates if this validation rule was automatically
                            generated by the system
                          type: boolean
                        lower:
                          description: For range based tests.
                          format: float
                          type: number
                        lowerInclusive:
                          type: boolean
                        metric:
                          description: The metric that is used for the test
                          type: string
                        name:
                          description: The name of the test case, will be generate
                            if empty by the combination of assertion, entity ref,
                            column name and metric
                          type: string
                        periods:
                          description: The length of the past if we are comparing
                            to moving avg
                          format: int32
                          type: integer
                        referenceType:
                          description: Set the reference type for this unit test
                          type: string
                        tags:
                          description: The test case tags, used for filtering. Optional
                            Test Tags
                          items:
                            type: string
                          type: array
                        type:
                          description: The test type The type of the data test
                          type: string
                        upper:
                          format: float
                          type: number
                        upperInclusive:
                          type: boolean
                      type: object
                    type: array
                type: object
              versionName:
                default: ""
                description: The name of the DataProductVersion which describes the
                  version of the resource that exists in the same DataProduct namespace
                  as the resource
                maxLength: 63
                type: string
            type: object
          status:
            description: DatasetStatus defines the observed state of a Dataset object
            properties:
              anomaliesUri:
                description: The location of anomaly file. The file contain the list
                  of rows that were marked as anomaly by an isolation forest. algorithm
                type: string
              completedAt:
                description: The time that the Dataset finished processing, either
                  due to completion or failure
                format: date-time
                type: string
              conditions:
                items:
                  description: DatasetCondition describes the state of a dataset at
                    a certain point
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown
                      type: string
                    type:
                      description: Condition on the dataset
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              derivedFromDataset:
                description: If the dataset is derived, the name of the Dataset that
                  the object is derived from
                type: string
              failureMessage:
                description: In the case of failure, the Dataset resource controller
                  will set this field with a failure message
                type: string
              failureReason:
                description: In the case of failure, the Dataset resource controller
                  will set this field with a failure reason
                type: string
              featureHistogramRef:
                description: The generated training feature histogram, Empty if no
                  feature histogram generated
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              groupby:
                description: The location of dataset index file
                properties:
                  datasetsURI:
                    description: The locations of the datasets files. Each file is
                      the group
                    type: string
                  featuresURI:
                    description: The locations of the time series feature files. The
                      file contain a line for each feature
                    type: string
                  profilesURI:
                    description: The locations of the datasets files.
                    type: string
                  reportsURI:
                    description: The locations of the report file. One report for
                      each key
                    type: string
                  unitTestsURI:
                    description: The locations of the report file. One report for
                      each key
                    type: string
                  workerResults:
                    description: Holds the worker on going result, when a worker finish,
                      we update the location of thier result files
                    items:
                      properties:
                        error:
                          type: string
                        id:
                          description: Worker ID
                          format: int32
                          type: integer
                        task:
                          type: string
                        uri:
                          description: URI
                          type: string
                      type: object
                    type: array
                type: object
              hash:
                default: ""
                description: Sha256 signature of the raw data. Intended for internal
                  use
                type: string
              images:
                description: The Docker images used during the analysis of the Dataset
                properties:
                  dataImage:
                    description: The image used for data operations
                    type: string
                  publisherImage:
                    description: The image used to deploy models
                    type: string
                  trainerImage:
                    description: The image used during training
                    type: string
                type: object
              imbalanced:
                description: Whether or not the data was detected as imbalanced
                type: boolean
              lastStudyAt:
                description: Last time the Dataset was used with a Study
                format: date-time
                type: string
              logs:
                description: The log file specification that determines the location
                  of all logs produced by the object
                properties:
                  bucketName:
                    description: The name of the VirtualBucket resource where the
                      logs are stored
                    type: string
                  containers:
                    description: The collection of ContainerLog objects that describe
                      the location of logs per container
                    items:
                      description: ContainerLog describes the location of logs for
                        a single Job
                      properties:
                        container:
                          description: The container name
                          type: string
                        job:
                          description: The name of the Job
                          type: string
                        key:
                          description: The path to the log in the bucket
                          type: string
                      type: object
                    type: array
                type: object
              observedGeneration:
                description: ObservedGeneration is the last generation that was acted
                  on
                format: int64
                type: integer
              phase:
                default: Pending
                description: The current phase of the Dataset progress
                type: string
              profileUri:
                description: The location of raw profile data. This field is intended
                  for internal use
                type: string
              progress:
                default: 0
                description: The current progress of the Dataset, with a maximum of
                  100, that is associated with the current phase
                format: int32
                type: integer
              reportName:
                description: Reference to the report object that was generated for
                  the dataset, which exists in the same Location Product namespace
                  as the object
                type: string
              reportUri:
                description: The location of report generated during the reporting
                  phase. This field is intended for internal use
                type: string
              statistics:
                description: Statistics for each column of the Dataset, which are
                  generated during the profiling phase.
                properties:
                  cols:
                    description: Number of columns observed from the data
                    format: int32
                    type: integer
                  columns:
                    description: Columns contains the collection of statistics for
                      each feature
                    items:
                      description: ColumnStatistics contains statistical parameters
                        for a single feature from a dataset
                      properties:
                        completeness:
                          description: The ratio between non-null and null values
                            in the column
                          type: number
                        constant:
                          type: boolean
                        corrToTarget:
                          description: Correlation to the target feature
                          type: number
                        count:
                          description: Amount of rows which contain a value for the
                            feature
                          type: number
                        datatype:
                          description: The data type of the column
                          enum:
                          - boolean
                          - datetime
                          - number
                          - categorical
                          - ordinal
                          - text
                          - json
                          - number-list
                          - categorical-list
                          - text-list
                          type: string
                        distinct:
                          description: Amount of unique values present in the column
                          format: int32
                          type: integer
                        distinctValueCount:
                          description: The ratio between unique values and non-unique
                            values in the column
                          type: number
                        duplicate:
                          description: Indicates if the column is a duplicate of another
                            column
                          type: boolean
                        highCardinality:
                          description: Indicates if the column has high cardinality
                            and should use the high cardinality encoder during feature
                            engineering
                          type: boolean
                        highCorrWithOtherFeatures:
                          description: Indicates if the column has high correlation
                            with another feature, and that it should be dropped
                          type: boolean
                        highMissingPct:
                          description: Indicates if the column has a high percentage
                            of missing values, and that it should be dropped
                          type: boolean
                        histogram:
                          description: Histogram data representing the distribution
                            of the values in the column
                          properties:
                            bins:
                              description: The bins if the histogram describes continous
                                variables
                              items:
                                type: number
                              type: array
                            categories:
                              description: The name of the categories, one per bin
                                if this is a categorical histogram
                              items:
                                type: string
                              type: array
                            counts:
                              description: The set of values per bin
                              items:
                                type: number
                              type: array
                            invalid:
                              description: The number of invalid values
                              format: int32
                              minimum: 0
                              type: integer
                            missing:
                              description: The number of missing values
                              format: int32
                              minimum: 0
                              type: integer
                          type: object
                        id:
                          description: Indicates if the column is an ID column, such
                            as a primary key
                          type: boolean
                        ignore:
                          description: Indicates if the column should be ignored,
                            as specified by the Dataset's DataSource
                          type: boolean
                        importance:
                          description: The feature importance of the column
                          type: number
                        index:
                          description: The column index in the dataset
                          format: int32
                          type: integer
                        indexOfPeculiarity:
                          description: Used for text attributes
                          type: number
                        invalid:
                          description: The number of invalid values in the column
                          format: int32
                          type: integer
                        iqr:
                          description: The interquartile range of the columns values
                          type: number
                        kurtosis:
                          description: The computed kurtosis, which measures the peakedness
                            of the distribution of values in the column
                          type: number
                        lowCorrWithTarget:
                          description: Indicate that the feature has low correlation
                            with the target feature, and that it should be dropped
                          type: boolean
                        mad:
                          description: The sum of all values in the column
                          type: number
                        max:
                          description: The maximum value of all values in the column
                          type: number
                        mean:
                          description: The mean of all values in the column, if the
                            column data type is a number
                          type: number
                        min:
                          description: The minimum value of all values in the column
                          type: number
                        missing:
                          description: Amount of missing values present in the column
                          format: int32
                          type: integer
                        mode:
                          description: The mode value of the column, also known as
                            the most frequent value
                          type: string
                        mostFreqValuesRatio:
                          description: The ratio between most the most frequent value
                            to the number of total values in the column
                          type: number
                        name:
                          description: The name of the column
                          type: string
                        nullable:
                          description: Indicates if the column may contain null values,
                            as specified by the Dataset's DataSource
                          type: boolean
                        outliers:
                          description: Outlier statistics.
                          properties:
                            lower:
                              description: The number of outliers below baseline
                              format: int32
                              type: integer
                            percent:
                              description: Percentage of rows detected as outliers
                              type: number
                            upper:
                              description: The number of outliers above baseline
                              format: int32
                              type: integer
                          type: object
                        p25:
                          description: The 25% point of all the values of the column
                            in order
                          type: number
                        p50:
                          description: The 50% point of all the values of the column
                            in order, also known as the median
                          type: number
                        p75:
                          description: The 75% point of all the values of the column
                            in order
                          type: number
                        percentMissing:
                          description: Percentage of missing values in the column
                          type: number
                        reserved:
                          description: Indicates if the column is reserved and must
                            be a feature included in model training
                          type: boolean
                        skewed:
                          description: "Marks that the column is skewed and would
                            require a power transform. \n If skewness is less than
                            -1 or greater than 1, the distribution is highly skewed.
                            If skewness is between -1 and -0.5 or between 0.5 and
                            1, the distribution is moderately skewed. If skewness
                            is between -0.5 and 0.5, the distribution is approximately
                            symmetric"
                          type: boolean
                        skewness:
                          description: The computed skewness, which measures the asymmetry
                            of the distribution of values in the column
                          type: number
                        stddev:
                          description: The standard deviation of the columns values
                          type: number
                        sum:
                          description: Skewness is the standard deviation value of
                            the attribute
                          type: number
                        target:
                          description: Indicates if the feature is the target attribute
                            for a Study, as specified by the Dataset's DataSource
                          type: boolean
                        variance:
                          description: The variability of the columns values from
                            the columns mean
                          type: number
                        zeros:
                          description: The number of zero values in the column
                          type: number
                      type: object
                    type: array
                  correlationsWithTarget:
                    description: The top correlations between all features and the
                      target feature
                    items:
                      description: Correlation records the correlation between two
                        features in a Dataset
                      properties:
                        feature1:
                          description: The first feature name
                          type: string
                        feature2:
                          description: The second feature name
                          type: string
                        method:
                          description: How the value was calculated
                          type: string
                        value:
                          description: The correlation value
                          type: number
                      required:
                      - feature1
                      - feature2
                      type: object
                    type: array
                  fileSize:
                    description: The file size of the data in bytes
                    format: int32
                    type: integer
                  rows:
                    description: Number of rows observed from the data
                    format: int32
                    type: integer
                  topCorrelations:
                    description: The top correlations between features, computed per
                      the CorrelationSpec of the parent Dataset
                    items:
                      description: Correlation records the correlation between two
                        features in a Dataset
                      properties:
                        feature1:
                          description: The first feature name
                          type: string
                        feature2:
                          description: The second feature name
                          type: string
                        method:
                          description: How the value was calculated
                          type: string
                        value:
                          description: The correlation value
                          type: number
                      required:
                      - feature1
                      - feature2
                      type: object
                    type: array
                type: object
              unitTestResults:
                description: List of validation results which are generated for every
                  validation rule associated with the Dataset's Location Source
                properties:
                  completedAt:
                    description: Stop time of running the suite.
                    format: date-time
                    type: string
                  entityRef:
                    description: A reference to the object under test. Best practice
                      is to have one suite for an object
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  errors:
                    description: Total number of assertion errors.
                    format: int32
                    type: integer
                  failures:
                    description: Total number of failures. A failure is an unplanned
                      error, e.g. cannot connect to a dataset
                    format: int32
                    type: integer
                  startedAt:
                    description: Start time of running the suite
                    format: date-time
                    type: string
                  tests:
                    description: The result of executing the test suite. The result
                      contain one result object per test case.
                    items:
                      description: Result for a specific case
                      properties:
                        actual:
                          description: Actual observation
                          properties:
                            algorithm:
                              description: The name of the algorithm that generated
                                this measurment
                              type: string
                            boolQty:
                              description: If the metric refer to a bool unit, store
                                the bool value
                              type: boolean
                            category:
                              description: If the metric refer to categorical measure,store
                                the category.
                              type: string
                            column:
                              type: string
                            entity:
                              description: 'ObjectReference contains enough information
                                to let you inspect or modify the referred object.
                                --- New uses of this type are discouraged because
                                of difficulty describing its usage when embedded in
                                APIs. 1. Ignored fields.  It includes many fields
                                which are not generally honored.  For instance, ResourceVersion
                                and FieldPath are both very rarely valid in actual
                                usage. 2. Invalid usage help.  It is impossible to
                                add specific help for individual usage.  In most embedded
                                usages, there are particular restrictions like, "must
                                refer only to types A and B" or "UID not honored"
                                or "name must be restricted". Those cannot be well
                                described when embedded. 3. Inconsistent validation.  Because
                                the usages are different, the validation rules are
                                different by usage, which makes it hard for users
                                to predict what will happen. 4. The fields are both
                                imprecise and overly precise.  Kind is not a precise
                                mapping to a URL. This can produce ambiguity during
                                interpretation and require a REST mapping.  In most
                                cases, the dependency is on the group,resource tuple
                                and the version of the actual struct is irrelevant.
                                5. We cannot easily change it.  Because this type
                                is embedded in many locations, updates to this type
                                will affect numerous schemas.  Don''t make new APIs
                                embed an underspecified API type they do not control.
                                Instead of using this type, create a locally provided
                                and used type that is well-focused on your reference.
                                For example, ServiceReferences for admission registration:
                                https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                                .'
                              properties:
                                apiVersion:
                                  description: API version of the referent.
                                  type: string
                                fieldPath:
                                  description: 'If referring to a piece of an object
                                    instead of an entire object, this string should
                                    contain a valid JSON/Go field access statement,
                                    such as desiredState.manifest.containers[2]. For
                                    example, if the object reference is to a container
                                    within a pod, this would take on a value like:
                                    "spec.containers{name}" (where "name" refers to
                                    the name of the container that triggered the event)
                                    or if no container name is specified "spec.containers[2]"
                                    (container with index 2 in this pod). This syntax
                                    is chosen only to have some well-defined way of
                                    referencing a part of an object. TODO: this design
                                    is not final and this field is subject to change
                                    in the future.'
                                  type: string
                                kind:
                                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                namespace:
                                  description: 'Namespace of the referent. More info:
                                    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                  type: string
                                resourceVersion:
                                  description: 'Specific resourceVersion to which
                                    this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                  type: string
                                uid:
                                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            metric:
                              description: The metric type name (e.g. F1 / Accuracy)
                              type: string
                            stddev:
                              description: Metric standard diviation for quantative
                                observations.
                              type: number
                            taskType:
                              description: The measurment task type (e.g. train, test,
                                cv, feature)
                              type: string
                            timePoint:
                              description: The Time when the observation was taken
                              format: date-time
                              type: string
                            value:
                              description: The value of the metric for quantitive
                                observations
                              type: number
                            valueSet:
                              description: Capture a set of values.
                              items:
                                type: string
                              type: array
                          type: object
                        error:
                          description: An error occur if the system cannot execute
                            the test case (e.g. connection error).
                          type: boolean
                        failure:
                          description: A failure occur on assertion failure
                          type: boolean
                        failureMsg:
                          description: An optional
                          type: string
                        name:
                          description: The test case name for this result.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                type: object
              updatedAt:
                description: The last time the object was updated
                format: date-time
                type: string
            required:
            - logs
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
