---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: modelclasses.training.modela.ai
spec:
  group: training.modela.ai
  names:
    categories:
    - training
    - modela
    kind: ModelClass
    listKind: ModelClassList
    plural: modelclasses
    shortNames:
    - mc
    singular: modelclass
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.owner
      name: Owner
      priority: 1
      type: string
    - jsonPath: .spec.versionName
      name: Version
      priority: 1
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ModelClass represents an automatic search for the best machine
          learning model for a given dataset
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ModelClassSpec defines the desired state of a ModelClass
              and the parameters for a model search
            properties:
              batchPrediction:
                description: Specify when and from where to perform batch prediction
                properties:
                  location:
                    description: The source location for data to predict
                    properties:
                      bucketName:
                        default: ""
                        description: In the case of the location type being an object
                          storage system, BucketName is the name of the VirtualBucket
                          resource that exists in the same tenant as the resource
                          specifying the DataLocation. Modela will connect to the
                          external object storage system, and will access the file
                          from the path specified by the Path field
                        type: string
                      connectionName:
                        default: ""
                        description: In the case of the type of location being a database,
                          ConnectionName specifies the name of the Connection resource
                          that exists in the same tenant as the resource specifying
                          the DataLocation. Modela will attempt to connect to the
                          database using the credentials specified in the Connection,
                          and will execute the query specified by the SQL field
                        type: string
                      database:
                        default: ""
                        description: The name of a database inside the database system
                          specified by the ConnectionName field
                        type: string
                      path:
                        default: ""
                        description: The path to a flat-file inside an object storage
                          system. When using the Modela API to upload files (through
                          the FileService API), Modela will upload the data to a predetermined
                          path based on the Tenant, DataProduct, DataProductVersion,
                          and resource type of the resource in relation to the file
                          being uploaded. The path does not need to adhere to this
                          format; you can give the path to a file inside a bucket
                          not managed by Modela
                        type: string
                      resourceRef:
                        description: In the case of the location type being Dataset
                          or PublicDataset, ResourceRef references another resource
                          that containing data that will be used as a data source
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      sql:
                        default: ""
                        description: The SQL statement which will be executed to query
                          data from the table specified by Table
                        type: string
                      table:
                        default: ""
                        description: The name of a table inside a database, if applicable
                        type: string
                      topic:
                        default: ""
                        description: The name of the streaming topic (currently unsupported)
                        type: string
                      type:
                        default: object
                        description: The type of location where the data resides,
                          which can either be an object inside an object storage system
                          (i.e. Minio), a SQL location like a table or a view, a data
                          stream (i.e. Kafka, currently unsupported), or a web location
                          (currently unsupported)
                        enum:
                        - object
                        - table
                        - view
                        - stream
                        - web
                        - public-dataset
                        - dataset
                        type: string
                      url:
                        default: ""
                        description: In the case of the location type being WebApi,
                          URL specifies the external location (HTTP or Git) that will
                          be queried and then stored as flat-file by the resource
                          which specifies the DataLocation
                        type: string
                    type: object
                  schedule:
                    description: BatchPrediction schedule
                    properties:
                      cron:
                        description: The cron string of the schedule. See https://docs.oracle.com/cd/E12058_01/doc/doc.1014/e12030/cron_expressions.htm
                          for more information
                        type: string
                      enabled:
                        default: false
                        description: Indicates if the schedule is enabled and the
                          Jobs associated it will be created at the specified time
                        type: boolean
                      type:
                        description: The type of schedule, which can be a frequency
                          interval or a cron expression
                        enum:
                        - now
                        - once
                        - hourly
                        - daily
                        - weekly
                        - monthly
                        - yearly
                        - cron
                        type: string
                    type: object
                type: object
              data:
                description: The modelclass data spec.
                properties:
                  artifactLocation:
                    description: The data location where ModelClass artifacts (metadata,
                      reports, and model artifacts) generated by the ModelClass will
                      be stored
                    properties:
                      bucketName:
                        default: ""
                        description: In the case of the location type being an object
                          storage system, BucketName is the name of the VirtualBucket
                          resource that exists in the same tenant as the resource
                          specifying the DataLocation. Modela will connect to the
                          external object storage system, and will access the file
                          from the path specified by the Path field
                        type: string
                      connectionName:
                        default: ""
                        description: In the case of the type of location being a database,
                          ConnectionName specifies the name of the Connection resource
                          that exists in the same tenant as the resource specifying
                          the DataLocation. Modela will attempt to connect to the
                          database using the credentials specified in the Connection,
                          and will execute the query specified by the SQL field
                        type: string
                      database:
                        default: ""
                        description: The name of a database inside the database system
                          specified by the ConnectionName field
                        type: string
                      path:
                        default: ""
                        description: The path to a flat-file inside an object storage
                          system. When using the Modela API to upload files (through
                          the FileService API), Modela will upload the data to a predetermined
                          path based on the Tenant, DataProduct, DataProductVersion,
                          and resource type of the resource in relation to the file
                          being uploaded. The path does not need to adhere to this
                          format; you can give the path to a file inside a bucket
                          not managed by Modela
                        type: string
                      resourceRef:
                        description: In the case of the location type being Dataset
                          or PublicDataset, ResourceRef references another resource
                          that containing data that will be used as a data source
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      sql:
                        default: ""
                        description: The SQL statement which will be executed to query
                          data from the table specified by Table
                        type: string
                      table:
                        default: ""
                        description: The name of a table inside a database, if applicable
                        type: string
                      topic:
                        default: ""
                        description: The name of the streaming topic (currently unsupported)
                        type: string
                      type:
                        default: object
                        description: The type of location where the data resides,
                          which can either be an object inside an object storage system
                          (i.e. Minio), a SQL location like a table or a view, a data
                          stream (i.e. Kafka, currently unsupported), or a web location
                          (currently unsupported)
                        enum:
                        - object
                        - table
                        - view
                        - stream
                        - web
                        - public-dataset
                        - dataset
                        type: string
                      url:
                        default: ""
                        description: In the case of the location type being WebApi,
                          URL specifies the external location (HTTP or Git) that will
                          be queried and then stored as flat-file by the resource
                          which specifies the DataLocation
                        type: string
                    type: object
                  entities:
                    description: If using the feature store (pre defined features),
                      specify the feature groups the would be used to create the training
                      data.
                    items:
                      properties:
                        exclude:
                          description: Feature to exclude from the link
                          items:
                            type: string
                          type: array
                        name:
                          description: The name of the entity
                          type: string
                      type: object
                    type: array
                  ttl:
                    default: 0
                    description: The length of the windows used to create training
                      data. In general the training data will take into account all
                      rows which are
                    format: int32
                    type: integer
                type: object
              description:
                default: ""
                description: The user-provided description of the ModelClass
                maxLength: 512
                type: string
              labels:
                description: Description of the labels file for this model class.
                  The labels file is used to build the complete training data.
                properties:
                  location:
                    description: The location or the sql of the labels file. the labels
                      file contain the training data. The labels file can reside in
                      the cloud or in a database.
                    properties:
                      bucketName:
                        default: ""
                        description: In the case of the location type being an object
                          storage system, BucketName is the name of the VirtualBucket
                          resource that exists in the same tenant as the resource
                          specifying the DataLocation. Modela will connect to the
                          external object storage system, and will access the file
                          from the path specified by the Path field
                        type: string
                      connectionName:
                        default: ""
                        description: In the case of the type of location being a database,
                          ConnectionName specifies the name of the Connection resource
                          that exists in the same tenant as the resource specifying
                          the DataLocation. Modela will attempt to connect to the
                          database using the credentials specified in the Connection,
                          and will execute the query specified by the SQL field
                        type: string
                      database:
                        default: ""
                        description: The name of a database inside the database system
                          specified by the ConnectionName field
                        type: string
                      path:
                        default: ""
                        description: The path to a flat-file inside an object storage
                          system. When using the Modela API to upload files (through
                          the FileService API), Modela will upload the data to a predetermined
                          path based on the Tenant, DataProduct, DataProductVersion,
                          and resource type of the resource in relation to the file
                          being uploaded. The path does not need to adhere to this
                          format; you can give the path to a file inside a bucket
                          not managed by Modela
                        type: string
                      resourceRef:
                        description: In the case of the location type being Dataset
                          or PublicDataset, ResourceRef references another resource
                          that containing data that will be used as a data source
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      sql:
                        default: ""
                        description: The SQL statement which will be executed to query
                          data from the table specified by Table
                        type: string
                      table:
                        default: ""
                        description: The name of a table inside a database, if applicable
                        type: string
                      topic:
                        default: ""
                        description: The name of the streaming topic (currently unsupported)
                        type: string
                      type:
                        default: object
                        description: The type of location where the data resides,
                          which can either be an object inside an object storage system
                          (i.e. Minio), a SQL location like a table or a view, a data
                          stream (i.e. Kafka, currently unsupported), or a web location
                          (currently unsupported)
                        enum:
                        - object
                        - table
                        - view
                        - stream
                        - web
                        - public-dataset
                        - dataset
                        type: string
                      url:
                        default: ""
                        description: In the case of the location type being WebApi,
                          URL specifies the external location (HTTP or Git) that will
                          be queried and then stored as flat-file by the resource
                          which specifies the DataLocation
                        type: string
                    type: object
                  predictionTimeColumn:
                    description: Define the column name that contains the prediction
                      time for each row in the label data. The system uses the prediction
                      time in order to avoid data leakage. I.e. the training dataset
                      will contain only data that was known before the prediction
                      time If null, the system will set the prediction time column
                      as the time index column in the schema.
                    type: string
                  primaryKey:
                    description: The training file primary key. This key will be used
                      as unique id for each row in the training dataset If empty the
                      system will set the join key as the primary key based on the
                      schema.
                    items:
                      type: string
                    type: array
                  schema:
                    description: The schema of the labels file
                    properties:
                      columns:
                        description: The collection of columns and their attributes
                        items:
                          description: Column specifies the attribute of a single
                            column in a dataset. The fields of the Column align with
                            the JSON schema standard; you can view detailed documentation
                            at https://json-schema.org/draft/2020-12/json-schema-validation.html
                          properties:
                            DefaultValueNum:
                              description: The default value for number types; used
                                internally for synthetic data and validation
                              type: number
                            aggr:
                              description: If this column is aggregate. Define the
                                aggregate
                              enum:
                              - min
                              - max
                              - mean
                              - median
                              - sum
                              - stddev
                              - var
                              - none
                              type: string
                            datatype:
                              description: The data type of the feature (e.g. number,
                                string, boolean, etc.)
                              enum:
                              - boolean
                              - datetime
                              - number
                              - categorical
                              - ordinal
                              - text
                              - json
                              - number-list
                              - categorical-list
                              - text-list
                              type: string
                            datetimeFormat:
                              description: The format of the datetime column. This
                                is only setup if the column contain datetime type.
                              type: string
                            description:
                              description: The user-specified description of the feature
                              maxLength: 63
                              type: string
                            displayName:
                              description: The display name of the column, which is
                                used in reports and other visual elements. If omitted,
                                it will use the raw name
                              maxLength: 63
                              type: string
                            driftThreshold:
                              description: The threshold drift value for model drift
                                detection for the feature represented by this feature
                              type: number
                            enum:
                              description: The collection of unique values for categorical
                                features
                              items:
                                type: string
                              type: array
                            example:
                              description: A user-specified example value
                              type: string
                            exclusiveMaximum:
                              description: The exclusive upper limit of all values
                                in the column, which does not include the maximum
                                value
                              type: boolean
                            exclusiveMinimum:
                              description: The exclusive lower limit of all values
                                in the column, which does not include the minimum
                                value
                              type: boolean
                            externalDocs:
                              description: A link to user-specified external documentation
                              type: string
                            fk:
                              description: Denotes if the column specifies a foreign
                                key of another database table
                              type: boolean
                            fold:
                              description: Indicates if the column holds fold values
                              type: boolean
                            format:
                              description: The data domain of the feature, which constrains
                                the contents of the feature to a specific set of values
                              enum:
                              - url
                              - path
                              - password
                              - time
                              - count
                              - interval
                              - nominal
                              - email
                              - creditcard
                              - uuid
                              - uuid5
                              - uuid
                              - base64
                              - latitude
                              - longtitude
                              - dns
                              - ip4
                              - ip6
                              - ssn
                              - alpha
                              - alphanumeric
                              - unknown
                              - color
                              - currency
                              - date
                              - guid
                              - hyperlink
                              - image
                              - media
                              - file
                              - embedding
                              - record
                              - useless
                              - none
                              type: string
                            formula:
                              description: The formula used to generate the column
                              type: string
                            generated:
                              description: Indicates if the feature was automatically
                                generated
                              type: boolean
                            id:
                              description: Indicates if the column is an ID column
                              type: boolean
                            ignore:
                              description: Indicates if the feature should be ignored
                                when building models
                              type: boolean
                            imputation:
                              description: The recommended imputation method for the
                                column
                              enum:
                              - remove-rows-with-missing-values
                              - replace-with-mean
                              - replace-with-median
                              - replace-with-arbitrary-value
                              - freq-category-imputation
                              - add-missing-value-indicator
                              - knn
                              - iterative
                              - mice
                              - no-imputation
                              - auto
                              - none
                              type: string
                            key:
                              description: Indicates if the column is an key column
                              type: boolean
                            laggedRegressor:
                              description: In forecasting based data sets Indicates
                                if the column is regressor This is relevant only for
                                time series schema
                              type: boolean
                            loc:
                              description: Contain the Index for the column in the
                                schema
                              format: int32
                              type: integer
                            log:
                              description: Indicates if values from this column will
                                be sampled on a logarithmic scale
                              type: boolean
                            maxItems:
                              description: The maximum number of items if the column
                                is a list of values
                              format: int32
                              minimum: 0
                              type: integer
                            maxLength:
                              description: The maximum length of values in the column,
                                if the column data type is a string
                              format: int32
                              minimum: 0
                              type: integer
                            maximum:
                              description: The maximum value of values all values
                                in the column
                              type: number
                            minItems:
                              description: The minimum number of items if the column
                                is a list of values
                              format: int32
                              minimum: 0
                              type: integer
                            minLength:
                              description: The minimum length of values in the column,
                                if the column data type is a string
                              format: int32
                              minimum: 0
                              type: integer
                            minimum:
                              description: The minimum value of values all values
                                in the column
                              type: number
                            mu:
                              description: Mu is the mean of the normal distribution
                              type: number
                            multipleOf:
                              description: The integer value which the values of the
                                column should be a multiple of
                              format: int32
                              minimum: 0
                              type: integer
                            name:
                              description: The name of the column
                              maxLength: 63
                              minLength: 1
                              type: string
                            nullable:
                              description: Indicates if the column can contain null
                                values
                              type: boolean
                            ordinal:
                              default: false
                              description: Indicates if the feature is ordinal, in
                                the case of categorical features
                              type: boolean
                            pattern:
                              description: The regex pattern which values in the column
                                must adhere to
                              type: string
                            phi:
                              description: Indicates if the column contains personal
                                health information
                              type: boolean
                            pii:
                              description: Indicates if the column contains personally
                                identifiable information
                              type: boolean
                            pk:
                              description: Denotes if the column specifies a primary
                                key of a database table (i.e. a users ID)
                              type: boolean
                            protected:
                              description: Protected means that this feature is important
                                for ethical AI / Fairness
                              type: boolean
                            regressor:
                              description: In forecasting based data sets Indicates
                                if the column is regressor This is relevant only for
                                time series schema
                              type: boolean
                            required:
                              description: Required
                              type: boolean
                            reserved:
                              description: Indicates that the feature should always
                                be used in training
                              type: boolean
                            scaling:
                              description: The recommended scaling method for the
                                column
                              enum:
                              - standard-scaling
                              - max-abs-scaling
                              - min-max-scaling
                              - normalization-scaling
                              - robust-scaling
                              - scale-to-unit-norm
                              - none
                              - auto
                              type: string
                            sigma:
                              description: Sigma is the standard deviation of the
                                distribution
                              type: number
                            skewThreshold:
                              description: The threshold skew for skew detection for
                                the feature represented by this feature.
                              type: number
                            step:
                              description: The step value if the column values are
                                a sequence of numbers
                              type: number
                            target:
                              description: Indicates if the feature is the target
                                feature of the model, and the feature which predictions
                                will be made on
                              type: boolean
                            timeIndex:
                              description: For time series, the field indicate tha
                                this column will be used as the data time index for
                                the time series. Note that there can multiple datatime
                                type columns, but only one time column.
                              type: boolean
                            timeseries:
                              description: Indicates if the column is contain a time
                                series, In case of forecasting, if only one column
                                is a time series, this is a univariate time series
                                Otherwise, if two or more columns contain time series,
                                than this is a univariate time series.
                              type: boolean
                            uniqueItems:
                              description: Enforce that all the items in the list
                                are unique
                              type: boolean
                            weight:
                              description: If True than this is a weight column
                              type: boolean
                            window:
                              description: If this column is aggregate
                              format: int32
                              type: integer
                          required:
                          - datatype
                          - name
                          type: object
                        type: array
                      key:
                        description: The keys columns are the index of the file or
                          table. The set of keys will be used as an index for the
                          in memory representation(e.g. pandas)
                        items:
                          type: string
                        type: array
                      recommendationSchema:
                        description: The recommendation schema, which is used for
                          the recommendation ML task
                        properties:
                          itemIDColumn:
                            default: item_id
                            description: The name of the column that specifies item
                              IDs
                            type: string
                          ratingColumn:
                            default: rating
                            description: The name of the column that specifies ratings
                            type: string
                          userIDColumn:
                            default: user_id
                            description: The name of the column that specifies user
                              IDs (i.e. the primary key)
                            type: string
                        type: object
                      timeSeriesSchema:
                        description: The time-series schema, which sets time-series
                          specific parameters
                        properties:
                          freq:
                            default: day
                            description: The time series frequency
                            enum:
                            - second
                            - minute
                            - hour
                            - day
                            - week
                            - month
                            - quarter
                            - year
                            - multi-year
                            type: string
                          interval:
                            default: 1
                            description: The interval to forecast at this level
                            format: int32
                            type: integer
                          type:
                            default: series
                            description: The time series type
                            enum:
                            - series
                            - panel
                            - hierarchical
                            type: string
                        type: object
                    type: object
                  target:
                    description: Name of the target column If null, the system will
                      assign this column based on the schema.
                    type: string
                type: object
              notification:
                description: The notification specification that determines which
                  notifiers will receive Alerts generated by the object
                properties:
                  errorTTL:
                    default: 3600
                    description: Time-to-live for error messages, in seconds
                    format: int32
                    type: integer
                  notifierName:
                    default: ""
                    description: The name of the Notifier which exists in the same
                      tenant as the resource specifying the NotificationSpec
                    type: string
                  selector:
                    additionalProperties:
                      type: string
                    description: The labels which will be searched for in all Notifiers
                      to determine the target Notifiers
                    type: object
                  successTTL:
                    default: 3600
                    description: Time-to-live for success messages. In seconds
                    format: int32
                    type: integer
                type: object
              owner:
                default: no-one
                description: The name of the Account which created the object, which
                  exists in the same tenant as the object
                type: string
              reportSchedule:
                description: The schedule for summary report
                properties:
                  cron:
                    description: The cron string of the schedule. See https://docs.oracle.com/cd/E12058_01/doc/doc.1014/e12030/cron_expressions.htm
                      for more information
                    type: string
                  enabled:
                    default: false
                    description: Indicates if the schedule is enabled and the Jobs
                      associated it will be created at the specified time
                    type: boolean
                  type:
                    description: The type of schedule, which can be a frequency interval
                      or a cron expression
                    enum:
                    - now
                    - once
                    - hourly
                    - daily
                    - weekly
                    - monthly
                    - yearly
                    - cron
                    type: string
                type: object
              serving:
                description: ServingTemplate specifies the model format and resource
                  requirements that will be applied to the Predictor created for the
                  Model that will be selected by the ModelClass
                properties:
                  access:
                    description: Access specifies the configuration for the Predictor
                      service to be exposed externally
                    properties:
                      accessType:
                        default: cluster-ip
                        description: The Kubernetes-native access method which specifies
                          how the Kubernetes Service created by the Predictor will
                          be exposed. See https://modela.ai/docs/docs/serving/production/#access-method
                          for a detailed description of each access type (defaults
                          to cluster-ip)
                        enum:
                        - cluster-ip
                        - node-port
                        - load-balancer
                        - ingress
                        - mesh
                        - none
                        type: string
                      apikeySecretRef:
                        description: ApiKeySecretRef references a Kubernetes Secret
                          containing an API key that must be passed in prediction
                          requests to the Predictor
                        properties:
                          name:
                            description: name is unique within a namespace to reference
                              a secret resource.
                            type: string
                          namespace:
                            description: namespace defines the space within which
                              the secret name must be unique.
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      authMethod:
                        default: none
                        description: Indicates
                        enum:
                        - api-token
                        - jwt-token
                        - none
                        type: string
                      nodePort:
                        description: The port number that will be exposed on the external
                          address of every node on the cluster, in the case of the
                          Predictor's access type being NodePort. Traffic from the
                          port will be forwarded to the Predictor's backend service
                        format: int32
                        maximum: 65535
                        minimum: 0
                        type: integer
                      path:
                        default: ""
                        description: The auto-generated DNS path where the Predictor
                          service can be accessed. If the access type is ClusterIP,
                          it will be a cluster-internal DNS name (i.e. predictor.default-serving-site.svc.cluster.local).
                          In the case of the Ingress access type, it will be determined
                          by the FQDN of the host ServingSite (i.e. predictor.default-serving-site.your-domain.ai).
                        maxLength: 256
                        type: string
                      port:
                        default: 8080
                        description: The port number that will be exposed on the Predictor's
                          Pods to serve prediction traffic through the GRPCInferenceService
                          API. The Kubernetes Service created by the Predictor will
                          expose the port and forward GRPC traffic to the backend
                          pods
                        format: int32
                        maximum: 65535
                        minimum: 1024
                        type: integer
                      rest:
                        default: false
                        description: Indicates if the prediction service should expose
                          an additional port to serve the GRPCInferenceService API
                          through REST. The port one digit above the number specified
                          by the Port field will be exposed to accept HTTP/1.1 traffic
                        type: boolean
                    type: object
                  dashboard:
                    description: Setup a dashboard for the predictor.
                    type: boolean
                  monitoringSchedule:
                    description: Schedule for computing drift
                    properties:
                      cron:
                        description: The cron string of the schedule. See https://docs.oracle.com/cd/E12058_01/doc/doc.1014/e12030/cron_expressions.htm
                          for more information
                        type: string
                      enabled:
                        default: false
                        description: Indicates if the schedule is enabled and the
                          Jobs associated it will be created at the specified time
                        type: boolean
                      type:
                        description: The type of schedule, which can be a frequency
                          interval or a cron expression
                        enum:
                        - now
                        - once
                        - hourly
                        - daily
                        - weekly
                        - monthly
                        - yearly
                        - cron
                        type: string
                    type: object
                  online:
                    description: Create an online predictor, if the model is used
                      only for batch prediction, set this option to false.
                    type: boolean
                  pipeline:
                    description: Define the stages to test the model before release
                    items:
                      description: Define a test stage
                      properties:
                        name:
                          description: The stage name
                          type: string
                        resources:
                          description: The resources to use when running tests at
                            this stage
                          properties:
                            cpuImage:
                              description: Reference to the managed CPU trainer image,
                                used internally
                              properties:
                                apiVersion:
                                  description: API version of the referent.
                                  type: string
                                fieldPath:
                                  description: 'If referring to a piece of an object
                                    instead of an entire object, this string should
                                    contain a valid JSON/Go field access statement,
                                    such as desiredState.manifest.containers[2]. For
                                    example, if the object reference is to a container
                                    within a pod, this would take on a value like:
                                    "spec.containers{name}" (where "name" refers to
                                    the name of the container that triggered the event)
                                    or if no container name is specified "spec.containers[2]"
                                    (container with index 2 in this pod). This syntax
                                    is chosen only to have some well-defined way of
                                    referencing a part of an object. TODO: this design
                                    is not final and this field is subject to change
                                    in the future.'
                                  type: string
                                kind:
                                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                namespace:
                                  description: 'Namespace of the referent. More info:
                                    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                  type: string
                                resourceVersion:
                                  description: 'Specific resourceVersion to which
                                    this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                  type: string
                                uid:
                                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            custom:
                              default: false
                              description: If true, ignore the workload class name.
                              type: boolean
                            gpuImage:
                              description: Reference to the managed GPU trainer image,
                                used internally
                              properties:
                                apiVersion:
                                  description: API version of the referent.
                                  type: string
                                fieldPath:
                                  description: 'If referring to a piece of an object
                                    instead of an entire object, this string should
                                    contain a valid JSON/Go field access statement,
                                    such as desiredState.manifest.containers[2]. For
                                    example, if the object reference is to a container
                                    within a pod, this would take on a value like:
                                    "spec.containers{name}" (where "name" refers to
                                    the name of the container that triggered the event)
                                    or if no container name is specified "spec.containers[2]"
                                    (container with index 2 in this pod). This syntax
                                    is chosen only to have some well-defined way of
                                    referencing a part of an object. TODO: this design
                                    is not final and this field is subject to change
                                    in the future.'
                                  type: string
                                kind:
                                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                namespace:
                                  description: 'Namespace of the referent. More info:
                                    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                  type: string
                                resourceVersion:
                                  description: 'Specific resourceVersion to which
                                    this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                  type: string
                                uid:
                                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            requirements:
                              description: The custom resource requirements for the
                                workload, which are used if `WorkloadName` is not
                                set
                              properties:
                                limits:
                                  additionalProperties:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  description: 'Limits describes the maximum amount
                                    of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                  type: object
                                requests:
                                  additionalProperties:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  description: 'Requests describes the minimum amount
                                    of compute resources required. If Requests is
                                    omitted for a container, it defaults to Limits
                                    if that is explicitly specified, otherwise to
                                    an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                  type: object
                              type: object
                            workloadName:
                              default: general-large
                              description: If this resource is based on the workload,
                                this field contain the name of the workload. The name
                                of a WorkloadClass. The system will use the resource
                                requirements described by the WorkloadClass
                              type: string
                          type: object
                        servingSiteRef:
                          description: The lab to install and run the test suite
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead
                                of an entire object, this string should contain a
                                valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container
                                within a pod, this would take on a value like: "spec.containers{name}"
                                (where "name" refers to the name of the container
                                that triggered the event) or if no container name
                                is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to
                                have some well-defined way of referencing a part of
                                an object. TODO: this design is not final and this
                                field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info:
                                https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this
                                reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        tests:
                          description: the Tests to run on the stage
                          properties:
                            enabled:
                              description: If false, this test case is disabled
                              type: boolean
                            tests:
                              items:
                                properties:
                                  assertThat:
                                    description: The assertion type
                                    type: string
                                  column:
                                    description: If unit test is column test, this
                                      is the name of the column
                                    type: string
                                  column2:
                                    description: For test that involve two columns
                                      (e.g. correlation)
                                    type: string
                                  columns:
                                    description: If unit test is column test, this
                                      is the name of the column
                                    items:
                                      type: string
                                    type: array
                                  compareToRef:
                                    description: Reference to another entity which
                                      is a ref.
                                    properties:
                                      apiVersion:
                                        description: API version of the referent.
                                        type: string
                                      fieldPath:
                                        description: 'If referring to a piece of an
                                          object instead of an entire object, this
                                          string should contain a valid JSON/Go field
                                          access statement, such as desiredState.manifest.containers[2].
                                          For example, if the object reference is
                                          to a container within a pod, this would
                                          take on a value like: "spec.containers{name}"
                                          (where "name" refers to the name of the
                                          container that triggered the event) or if
                                          no container name is specified "spec.containers[2]"
                                          (container with index 2 in this pod). This
                                          syntax is chosen only to have some well-defined
                                          way of referencing a part of an object.
                                          TODO: this design is not final and this
                                          field is subject to change in the future.'
                                        type: string
                                      kind:
                                        description: 'Kind of the referent. More info:
                                          https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                      namespace:
                                        description: 'Namespace of the referent. More
                                          info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                        type: string
                                      resourceVersion:
                                        description: 'Specific resourceVersion to
                                          which this reference is made, if any. More
                                          info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                        type: string
                                      uid:
                                        description: 'UID of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                        type: string
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  enabled:
                                    description: If false, this test case is disabled
                                    type: boolean
                                  entityRef:
                                    description: Reference to an entity.
                                    properties:
                                      apiVersion:
                                        description: API version of the referent.
                                        type: string
                                      fieldPath:
                                        description: 'If referring to a piece of an
                                          object instead of an entire object, this
                                          string should contain a valid JSON/Go field
                                          access statement, such as desiredState.manifest.containers[2].
                                          For example, if the object reference is
                                          to a container within a pod, this would
                                          take on a value like: "spec.containers{name}"
                                          (where "name" refers to the name of the
                                          container that triggered the event) or if
                                          no container name is specified "spec.containers[2]"
                                          (container with index 2 in this pod). This
                                          syntax is chosen only to have some well-defined
                                          way of referencing a part of an object.
                                          TODO: this design is not final and this
                                          field is subject to change in the future.'
                                        type: string
                                      kind:
                                        description: 'Kind of the referent. More info:
                                          https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                      namespace:
                                        description: 'Namespace of the referent. More
                                          info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                        type: string
                                      resourceVersion:
                                        description: 'Specific resourceVersion to
                                          which this reference is made, if any. More
                                          info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                        type: string
                                      uid:
                                        description: 'UID of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                        type: string
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  entityRef2:
                                    description: Reference to an entity.
                                    properties:
                                      apiVersion:
                                        description: API version of the referent.
                                        type: string
                                      fieldPath:
                                        description: 'If referring to a piece of an
                                          object instead of an entire object, this
                                          string should contain a valid JSON/Go field
                                          access statement, such as desiredState.manifest.containers[2].
                                          For example, if the object reference is
                                          to a container within a pod, this would
                                          take on a value like: "spec.containers{name}"
                                          (where "name" refers to the name of the
                                          container that triggered the event) or if
                                          no container name is specified "spec.containers[2]"
                                          (container with index 2 in this pod). This
                                          syntax is chosen only to have some well-defined
                                          way of referencing a part of an object.
                                          TODO: this design is not final and this
                                          field is subject to change in the future.'
                                        type: string
                                      kind:
                                        description: 'Kind of the referent. More info:
                                          https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                      namespace:
                                        description: 'Namespace of the referent. More
                                          info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                        type: string
                                      resourceVersion:
                                        description: 'Specific resourceVersion to
                                          which this reference is made, if any. More
                                          info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                        type: string
                                      uid:
                                        description: 'UID of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                        type: string
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  expectedCategory:
                                    description: The expected value
                                    type: string
                                  expectedSet:
                                    description: Expected set of values,if the assertion
                                    items:
                                      type: string
                                    type: array
                                  expectedValue:
                                    description: The expected numerical value
                                    type: number
                                  featureFilter:
                                    description: Filter the filter for this unit test.
                                    type: string
                                  generated:
                                    description: Indicates if this validation rule
                                      was automatically generated by the system
                                    type: boolean
                                  lower:
                                    description: For range based tests.
                                    format: float
                                    type: number
                                  lowerInclusive:
                                    type: boolean
                                  metric:
                                    description: The metric that is used for the test
                                    type: string
                                  name:
                                    description: The name of the test case, will be
                                      generate if empty by the combination of assertion,
                                      entity ref, column name and metric
                                    type: string
                                  periods:
                                    description: The length of the past if we are
                                      comparing to moving avg
                                    format: int32
                                    type: integer
                                  referenceType:
                                    description: Set the reference type for this unit
                                      test
                                    type: string
                                  tags:
                                    description: The test case tags, used for filtering.
                                      Optional Test Tags
                                    items:
                                      type: string
                                    type: array
                                  type:
                                    description: The test type The type of the data
                                      test
                                    type: string
                                  upper:
                                    format: float
                                    type: number
                                  upperInclusive:
                                    type: boolean
                                type: object
                              type: array
                          type: object
                      type: object
                    type: array
                  predictorTemplateName:
                    description: The name of the predictor template
                    type: string
                  replicas:
                    description: The number of replicas for the Kubernetes Serving
                      associated with the Predictor, which will instantiate multiple
                      copies of the service in the case that automatic scaling is
                      disabled
                    format: int32
                    type: integer
                  servingSiteRef:
                    description: The reference to the serving site, where online predictor
                      will be served. If unspecified, the default Lab from the parent
                      DataProduct will be used
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                type: object
              subtask:
                default: none
                description: The machine learning subtask relevant to the primary
                  task (text classification, image object detection, etc.)
                enum:
                - text-ner
                - text-classification
                - text-multi-classification
                - text-regression
                - text-multi-label-classification
                - text-conversation
                - text-lang-generation
                - text-lang-model
                - text-multi-modal
                - text-ner
                - text-qa
                - text-summarization
                - text-sentence-pair
                - text-representation-generation
                - text-sentiment-analysis
                - text-code-generation
                - text-translation
                - text-lang-detection
                - text-grammar-correction
                - text-paraphrasing
                - text-intent-classification
                - text-semantic-similarity
                - text-keyword-extraction
                - text-pos
                - text-tokenization
                - text-lemma
                - image-classification
                - image-multi-label-classification
                - image-object-detection
                - image-segmentation
                - none
                type: string
              task:
                description: The machine learning task type (i.e. regression, classification)
                enum:
                - binary-classification
                - multi-classification
                - forecasting
                - regression
                - clustering
                - recommendation
                - outlier-detection
                - novelty-detection
                - auto
                - unknown
                - group-forecasting
                type: string
              training:
                description: TrainingTemplate specifies the configuration to train
                  and evaluate models
                properties:
                  labRef:
                    description: The reference to the Lab under which the Model for
                      the class will be trained If unspecified, the default Lab from
                      the parent DataProduct will be used
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  modelImage:
                    description: ModelImage specifies the configuration to upload
                      Docker images of models to an image registry
                    properties:
                      exist:
                        default: false
                        type: boolean
                      imageName:
                        default: ""
                        description: The full name of the image to upload to
                        type: string
                      registryConnectionName:
                        default: ""
                        description: The name of the Connection resource to an external
                          Docker image registry
                        type: string
                    type: object
                  modelUnitTests:
                    description: A template for models unit tests
                    properties:
                      enabled:
                        description: If false, this test case is disabled
                        type: boolean
                      tests:
                        items:
                          properties:
                            assertThat:
                              description: The assertion type
                              type: string
                            column:
                              description: If unit test is column test, this is the
                                name of the column
                              type: string
                            column2:
                              description: For test that involve two columns (e.g.
                                correlation)
                              type: string
                            columns:
                              description: If unit test is column test, this is the
                                name of the column
                              items:
                                type: string
                              type: array
                            compareToRef:
                              description: Reference to another entity which is a
                                ref.
                              properties:
                                apiVersion:
                                  description: API version of the referent.
                                  type: string
                                fieldPath:
                                  description: 'If referring to a piece of an object
                                    instead of an entire object, this string should
                                    contain a valid JSON/Go field access statement,
                                    such as desiredState.manifest.containers[2]. For
                                    example, if the object reference is to a container
                                    within a pod, this would take on a value like:
                                    "spec.containers{name}" (where "name" refers to
                                    the name of the container that triggered the event)
                                    or if no container name is specified "spec.containers[2]"
                                    (container with index 2 in this pod). This syntax
                                    is chosen only to have some well-defined way of
                                    referencing a part of an object. TODO: this design
                                    is not final and this field is subject to change
                                    in the future.'
                                  type: string
                                kind:
                                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                namespace:
                                  description: 'Namespace of the referent. More info:
                                    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                  type: string
                                resourceVersion:
                                  description: 'Specific resourceVersion to which
                                    this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                  type: string
                                uid:
                                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            enabled:
                              description: If false, this test case is disabled
                              type: boolean
                            entityRef:
                              description: Reference to an entity.
                              properties:
                                apiVersion:
                                  description: API version of the referent.
                                  type: string
                                fieldPath:
                                  description: 'If referring to a piece of an object
                                    instead of an entire object, this string should
                                    contain a valid JSON/Go field access statement,
                                    such as desiredState.manifest.containers[2]. For
                                    example, if the object reference is to a container
                                    within a pod, this would take on a value like:
                                    "spec.containers{name}" (where "name" refers to
                                    the name of the container that triggered the event)
                                    or if no container name is specified "spec.containers[2]"
                                    (container with index 2 in this pod). This syntax
                                    is chosen only to have some well-defined way of
                                    referencing a part of an object. TODO: this design
                                    is not final and this field is subject to change
                                    in the future.'
                                  type: string
                                kind:
                                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                namespace:
                                  description: 'Namespace of the referent. More info:
                                    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                  type: string
                                resourceVersion:
                                  description: 'Specific resourceVersion to which
                                    this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                  type: string
                                uid:
                                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            entityRef2:
                              description: Reference to an entity.
                              properties:
                                apiVersion:
                                  description: API version of the referent.
                                  type: string
                                fieldPath:
                                  description: 'If referring to a piece of an object
                                    instead of an entire object, this string should
                                    contain a valid JSON/Go field access statement,
                                    such as desiredState.manifest.containers[2]. For
                                    example, if the object reference is to a container
                                    within a pod, this would take on a value like:
                                    "spec.containers{name}" (where "name" refers to
                                    the name of the container that triggered the event)
                                    or if no container name is specified "spec.containers[2]"
                                    (container with index 2 in this pod). This syntax
                                    is chosen only to have some well-defined way of
                                    referencing a part of an object. TODO: this design
                                    is not final and this field is subject to change
                                    in the future.'
                                  type: string
                                kind:
                                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                namespace:
                                  description: 'Namespace of the referent. More info:
                                    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                  type: string
                                resourceVersion:
                                  description: 'Specific resourceVersion to which
                                    this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                  type: string
                                uid:
                                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            expectedCategory:
                              description: The expected value
                              type: string
                            expectedSet:
                              description: Expected set of values,if the assertion
                              items:
                                type: string
                              type: array
                            expectedValue:
                              description: The expected numerical value
                              type: number
                            featureFilter:
                              description: Filter the filter for this unit test.
                              type: string
                            generated:
                              description: Indicates if this validation rule was automatically
                                generated by the system
                              type: boolean
                            lower:
                              description: For range based tests.
                              format: float
                              type: number
                            lowerInclusive:
                              type: boolean
                            metric:
                              description: The metric that is used for the test
                              type: string
                            name:
                              description: The name of the test case, will be generate
                                if empty by the combination of assertion, entity ref,
                                column name and metric
                              type: string
                            periods:
                              description: The length of the past if we are comparing
                                to moving avg
                              format: int32
                              type: integer
                            referenceType:
                              description: Set the reference type for this unit test
                              type: string
                            tags:
                              description: The test case tags, used for filtering.
                                Optional Test Tags
                              items:
                                type: string
                              type: array
                            type:
                              description: The test type The type of the data test
                              type: string
                            upper:
                              format: float
                              type: number
                            upperInclusive:
                              type: boolean
                          type: object
                        type: array
                    type: object
                  promotionPolicy:
                    description: Promotion defines the way to promote models
                    enum:
                    - manual
                    - best
                    - latest
                    type: string
                  retrainOnDrift:
                    description: If true, retrain on drift
                    type: boolean
                  retrainOnFeaturesMetadataChange:
                    default: true
                    description: If true, retrain on the model when a ever a metadata
                      change occur. A metadata change is adding or removing feature
                      from a feature group that the model depends on adding or removing
                      entities, etc. When a metadata change is detected, the system
                      will retrain the models
                    type: boolean
                  retrainOnLabelsDataChange:
                    default: true
                    description: If true, retrain when there is a change in the labels
                      data file. For example, if new labels were added
                    type: boolean
                  studyTemplateName:
                    description: Define a reference to a study template. The study
                      template will be the basis for training models From this model
                      class.
                    type: string
                  trainingSchedule:
                    description: Training schedule
                    properties:
                      cron:
                        description: The cron string of the schedule. See https://docs.oracle.com/cd/E12058_01/doc/doc.1014/e12030/cron_expressions.htm
                          for more information
                        type: string
                      enabled:
                        default: false
                        description: Indicates if the schedule is enabled and the
                          Jobs associated it will be created at the specified time
                        type: boolean
                      type:
                        description: The type of schedule, which can be a frequency
                          interval or a cron expression
                        enum:
                        - now
                        - once
                        - hourly
                        - daily
                        - weekly
                        - monthly
                        - yearly
                        - cron
                        type: string
                    type: object
                type: object
              versionName:
                default: ""
                description: The name of the DataProductVersion which describes the
                  version of the resource that exists in the same DataProduct namespace
                  as the resource
                maxLength: 63
                type: string
            required:
            - data
            - task
            type: object
          status:
            properties:
              bestFE:
                description: BestFE specifies the best feature engineering pipeline
                  produced by the ModelClass
                properties:
                  imbalance:
                    default: auto
                    description: The method which will be used to handle an imbalanced
                      dataset
                    enum:
                    - adasyn
                    - baseline-smote
                    - kmean-smote
                    - random-over-sampler
                    - smote
                    - smotenc
                    - svmsmote
                    - none
                    - auto
                    - class-weights
                    type: string
                  pipelines:
                    description: Pipelines contains the collection of feature engineering
                      pipelines that will be applied to a dataset prior to model training
                    items:
                      description: FeatureEngineeringPipeline represent a single pipeline
                        to transform a dataset
                      properties:
                        audio:
                          description: Audio specifies the pipeline to handle audio
                            data (currently unsupported)
                          properties:
                            featurizer:
                              default: auto
                              description: The date time imputer.
                              type: string
                          type: object
                        columns:
                          description: The collection of columns which the pipeline
                            applies to. Each column in the dataset with the data type
                            of the pipeline should be added to the collection of columns
                          items:
                            type: string
                          type: array
                        custom:
                          description: Custom specifies a collection of columns to
                            be generated. Custom columns are specified by end-users
                          items:
                            description: GeneratedColumnSpec describes a column to
                              be generated and applied to a dataset
                            properties:
                              datatype:
                                description: The resulting data type
                                enum:
                                - boolean
                                - datetime
                                - number
                                - categorical
                                - ordinal
                                - text
                                - json
                                - number-list
                                - categorical-list
                                - text-list
                                type: string
                              first:
                                description: The name of the first original column
                                type: string
                              name:
                                description: The name of the generated column
                                type: string
                              original:
                                description: The expression to apply in order to generate
                                  the new column
                                type: string
                              second:
                                description: The name of the second original column,
                                  if the expression is binary operator
                                type: string
                            type: object
                          type: array
                        datatype:
                          description: The type of data which the pipeline applies
                            to
                          enum:
                          - boolean
                          - datetime
                          - number
                          - categorical
                          - ordinal
                          - text
                          - json
                          - number-list
                          - categorical-list
                          - text-list
                          type: string
                        datetimeTransformation:
                          default: none
                          description: The method to use when handling the date-time
                            data type
                          enum:
                          - extract-datetime-information
                          - none
                          - auto
                          type: string
                        discretisation:
                          default: none
                          description: The discretisation method, which converts numerical
                            data types to discrete variables
                          enum:
                          - equal-width-discretisation-
                          - equal-freq-discretisation
                          - kbin-discretisation
                          - kernel-centerer-discretisation
                          - label-binarizer-discretisation
                          - multi-label-binarizer-discretisation
                          - none
                          - auto
                          type: string
                        drop:
                          default: false
                          description: Indicates if all of all the columns specified
                            by the Columns field should be dropped
                          type: boolean
                        encoding:
                          default: none
                          description: The encoding method to use for categorical
                            data types
                          enum:
                          - one-hot-encoding
                          - one-hot-encoding-top-categories
                          - ordinal-encoding
                          - count-encoding
                          - target-encoding
                          - weight-of-evidence-encoding
                          - binary-encoding
                          - label-encoding
                          - hash-encoding
                          - catboost-encoding
                          - loo-encoding
                          - no-encoding
                          - auto
                          - none
                          type: string
                        generated:
                          description: Generated specifies a collection of columns
                            to be generated
                          items:
                            description: GeneratedColumnSpec describes a column to
                              be generated and applied to a dataset
                            properties:
                              datatype:
                                description: The resulting data type
                                enum:
                                - boolean
                                - datetime
                                - number
                                - categorical
                                - ordinal
                                - text
                                - json
                                - number-list
                                - categorical-list
                                - text-list
                                type: string
                              first:
                                description: The name of the first original column
                                type: string
                              name:
                                description: The name of the generated column
                                type: string
                              original:
                                description: The expression to apply in order to generate
                                  the new column
                                type: string
                              second:
                                description: The name of the second original column,
                                  if the expression is binary operator
                                type: string
                            type: object
                          type: array
                        image:
                          description: Image specifies the pipeline to handle image
                            data (currently unsupported)
                          properties:
                            featurizer:
                              default: auto
                              description: The date time imputer.
                              type: string
                          type: object
                        imputation:
                          default: none
                          description: The imputation method to use, which fills in
                            missing values within the columns
                          enum:
                          - remove-rows-with-missing-values
                          - replace-with-mean
                          - replace-with-median
                          - replace-with-arbitrary-value
                          - freq-category-imputation
                          - add-missing-value-indicator
                          - knn
                          - iterative
                          - mice
                          - no-imputation
                          - auto
                          - none
                          type: string
                        name:
                          description: The name of the pipeline
                          type: string
                        outlierHandling:
                          default: none
                          description: The method to use when handling outliers Apply
                            only to numeric data types.
                          enum:
                          - trim-outliers
                          - winsorizer-outliers
                          - cap-outliers
                          - zero-code-outliers
                          - none
                          - auto
                          type: string
                        passthrough:
                          default: false
                          description: Indicates if the pipeline should not be applied
                            and the columns should remain unchanged
                          type: boolean
                        scaling:
                          default: none
                          description: The scaling method to use for numerical data
                            types
                          enum:
                          - standard-scaling
                          - max-abs-scaling
                          - min-max-scaling
                          - normalization-scaling
                          - robust-scaling
                          - scale-to-unit-norm
                          - none
                          - auto
                          type: string
                        text:
                          description: Text specifies the pipeline to handle raw text
                          properties:
                            embedding:
                              description: Indicates if the pipeline will generate
                                a word embedding
                              type: string
                            encoder:
                              default: auto
                              description: The text encoder (e.g. TFIDF)
                              enum:
                              - tfidf
                              - count-vec
                              - hasing-vec
                              - none
                              - auto
                              type: string
                            lemma:
                              default: true
                              description: Indicates if the pipeline will implement
                                lemmatization
                              type: boolean
                            maxSvdComponents:
                              default: 0
                              description: The maximum number of SVD components to
                                use, if applicable
                              format: int32
                              type: integer
                            pos:
                              default: true
                              description: Indicates if the pipeline will add part-of-speech
                                handling
                              type: boolean
                            stem:
                              default: true
                              description: Indicates if the pipeline will implement
                                word stemming
                              type: boolean
                            stopwords:
                              default: true
                              description: Indicates if the pipeline will add stop
                                word handling
                              type: boolean
                            svd:
                              default: true
                              description: Indicates if the pipeline will add singular
                                value decomposition
                              type: boolean
                            tokenizer:
                              description: The text tokenizer character
                              type: string
                          type: object
                        variableTransformation:
                          default: none
                          description: The transformation method to use for numerical
                            data types
                          enum:
                          - log-transformation
                          - reciprocal-transformation
                          - sqrt-transformation
                          - power-transformation
                          - box-cox-transformation
                          - yj-transformation
                          - none
                          - auto
                          type: string
                        video:
                          description: Video specifies the pipeline to handle video
                            data (currently unsupported)
                          properties:
                            featurizer:
                              default: auto
                              description: The date time imputer.
                              type: string
                          type: object
                      type: object
                    type: array
                  selection:
                    description: FeatureSelection specifies the configuration to perform
                      feature selection on a dataset prior to model training
                    properties:
                      corrThreshold:
                        default: 95
                        description: The threshold to remove features with high correlations
                        format: int32
                        type: integer
                      embedding:
                        default: true
                        description: Indicates if embedded methods will be tested
                          as part of the candidate algorithms (e.g. tree-based selection)
                        type: boolean
                      enabled:
                        default: true
                        description: Indicates if feature selection is enabled
                        type: boolean
                      filter:
                        default: true
                        description: Indicates if filter methods will be tested as
                          part of the candidate algorithms (e.g. chi-square or anova
                          tests)
                        type: boolean
                      maxFeatures:
                        default: 0
                        description: The number of features that will be selected
                          based on importance. If TopN is 0, all features will be
                          selected
                        format: int32
                        type: integer
                      percentile:
                        default: 20
                        description: Percent of features to keep
                        format: int32
                        type: integer
                      pipeline:
                        description: The collection of feature selection methods that
                          will be applied in order to the dataset
                        items:
                          enum:
                          - drop-features
                          - drop-constant-features
                          - drop-duplicated-features
                          - drop-correlated-features
                          - mutual-information
                          - chisquare
                          - anova
                          - step-forward
                          - step-backward
                          - lasso-regression
                          - tree-importance
                          - recursive-feature-elimination
                          - recursive-feature-addition
                          - select-percentile
                          - select-kbest
                          - select-fpr
                          - select-fdr
                          - variance-threshold
                          - none
                          - auto
                          type: string
                        type: array
                      reserved:
                        description: List of features that are reserved and will always
                          be included in the final feature selection
                        items:
                          type: string
                        type: array
                      varThreshold:
                        default: 5
                        description: The threshold as a percentage to remove low variance
                          features
                        format: int32
                        type: integer
                      wrapper:
                        default: true
                        description: Indicates if wrapper methods will be tested as
                          part of the candidate algorithms
                        type: boolean
                    type: object
                type: object
              conditions:
                items:
                  description: ModelClassCondition describes the state of a ModelClass
                    at a certain point
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another
                      format: date-time
                      type: string
                    message:
                      description: A human-readable message indicating details about
                        the transition
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown
                      type: string
                    type:
                      description: Type of ModelClass condition
                      type: string
                  type: object
                type: array
              lastOnlineTrainingSet:
                description: Store the location of the last training set
                properties:
                  bucketName:
                    default: ""
                    description: In the case of the location type being an object
                      storage system, BucketName is the name of the VirtualBucket
                      resource that exists in the same tenant as the resource specifying
                      the DataLocation. Modela will connect to the external object
                      storage system, and will access the file from the path specified
                      by the Path field
                    type: string
                  connectionName:
                    default: ""
                    description: In the case of the type of location being a database,
                      ConnectionName specifies the name of the Connection resource
                      that exists in the same tenant as the resource specifying the
                      DataLocation. Modela will attempt to connect to the database
                      using the credentials specified in the Connection, and will
                      execute the query specified by the SQL field
                    type: string
                  database:
                    default: ""
                    description: The name of a database inside the database system
                      specified by the ConnectionName field
                    type: string
                  path:
                    default: ""
                    description: The path to a flat-file inside an object storage
                      system. When using the Modela API to upload files (through the
                      FileService API), Modela will upload the data to a predetermined
                      path based on the Tenant, DataProduct, DataProductVersion, and
                      resource type of the resource in relation to the file being
                      uploaded. The path does not need to adhere to this format; you
                      can give the path to a file inside a bucket not managed by Modela
                    type: string
                  resourceRef:
                    description: In the case of the location type being Dataset or
                      PublicDataset, ResourceRef references another resource that
                      containing data that will be used as a data source
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  sql:
                    default: ""
                    description: The SQL statement which will be executed to query
                      data from the table specified by Table
                    type: string
                  table:
                    default: ""
                    description: The name of a table inside a database, if applicable
                    type: string
                  topic:
                    default: ""
                    description: The name of the streaming topic (currently unsupported)
                    type: string
                  type:
                    default: object
                    description: The type of location where the data resides, which
                      can either be an object inside an object storage system (i.e.
                      Minio), a SQL location like a table or a view, a data stream
                      (i.e. Kafka, currently unsupported), or a web location (currently
                      unsupported)
                    enum:
                    - object
                    - table
                    - view
                    - stream
                    - web
                    - public-dataset
                    - dataset
                    type: string
                  url:
                    default: ""
                    description: In the case of the location type being WebApi, URL
                      specifies the external location (HTTP or Git) that will be queried
                      and then stored as flat-file by the resource which specifies
                      the DataLocation
                    type: string
                type: object
              lastUpdated:
                description: The last time the object was updated
                format: date-time
                type: string
              latestModel:
                description: The latest best model
                type: string
              latestStudy:
                description: The lastest study name
                type: string
              models:
                description: Total models created for the ModelClass
                format: int32
                type: integer
              observedGeneration:
                description: ObservedGeneration is the last generation that was acted
                  on
                format: int64
                type: integer
              phase:
                description: ModelPhase specifies the current phase of a Model
                type: string
              promotionStatus:
                description: Training schedule status
                properties:
                  approvedBy:
                    description: for manual promotion, who approved the promotion
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  auto:
                    description: If true the promotion was automatic
                    type: boolean
                  promotedAt:
                    description: Last promotion was done
                    format: date-time
                    type: string
                type: object
              trainingStatus:
                description: Training schedule status
                properties:
                  currentStartTime:
                    description: The time when we started the action based on the
                      schedule.
                    format: date-time
                    type: string
                  duration:
                    description: The duration of the run in seconds
                    format: int32
                    type: integer
                  failureMessage:
                    description: In the case of failure, the resource controller which
                      created the run will set this field with a failure message
                    type: string
                  failureReason:
                    description: In the case of failure, the resource controller which
                      created the run will set this field with a failure reason
                    type: string
                  lastRun:
                    description: Last time the job was ended successfuly
                    format: date-time
                    type: string
                  logs:
                    description: Last run logs
                    properties:
                      bucketName:
                        description: The name of the VirtualBucket resource where
                          the logs are stored
                        type: string
                      containers:
                        description: The collection of ContainerLog objects that describe
                          the location of logs per container
                        items:
                          description: ContainerLog describes the location of logs
                            for a single Job
                          properties:
                            container:
                              description: The container name
                              type: string
                            job:
                              description: The name of the Job
                              type: string
                            key:
                              description: The path to the log in the bucket
                              type: string
                          type: object
                        type: array
                    type: object
                  nextRun:
                    description: The time of the day when the schedule will be executed
                    format: date-time
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
