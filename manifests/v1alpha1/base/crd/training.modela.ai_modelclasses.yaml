---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: modelclasses.training.modela.ai
spec:
  group: training.modela.ai
  names:
    categories:
    - training
    - modela
    kind: ModelClass
    listKind: ModelClassList
    plural: modelclasses
    shortNames:
    - mc
    singular: modelclass
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.owner
      name: Owner
      priority: 1
      type: string
    - jsonPath: .spec.versionName
      name: Version
      priority: 1
      type: string
    - jsonPath: .spec.description
      name: Description
      type: string
    - jsonPath: .spec.task
      name: Task
      type: string
    - jsonPath: .spec.objective.metric
      name: Objective
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ModelClass represents an automatic search for the best machine
          learning model for a given dataset
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ModelClassSpec defines the desired state of a ModelClass
              and the parameters for a model search
            properties:
              artifactBucketName:
                description: The name of a Virtual Bucket that will be applied as
                  the artifact bucket to resources created by the ModelClass
                type: string
              data:
                description: The model class data
                properties:
                  flatFile:
                    description: In case where the feature group data is stored as
                      flat file. the flat file format define how to read the file.
                    properties:
                      csv:
                        description: The file format for CSV files, if applicable
                        properties:
                          commentChars:
                            default: '#'
                            description: 'The comment character used to split comments
                              off the end of lines (by default, a hashtag #)'
                            type: string
                          compression:
                            default: none
                            description: The compression type, if the file is compressed
                            type: string
                          delimiter:
                            default: comma
                            description: The character used to separate fields (by
                              default, a comma)
                            enum:
                            - crlf
                            - cr
                            - lf
                            - semicolon
                            - colon
                            - comma
                            - tab
                            - space
                            - pipe
                            type: string
                          encoding:
                            default: utf-8
                            description: The unicode encoding of the file (e.g. 'utf-8'
                              for UTF-8 encoded text)
                            enum:
                            - utf-8
                            - latin-1
                            - utf-16
                            type: string
                          escapeChar:
                            default: single-quote
                            description: The character used to escape the delimiter
                            enum:
                            - single-quote
                            - double-quote
                            - tilda
                            - none
                            type: string
                          hasIndexColumn:
                            default: false
                            description: Indicates if the file contains an index column
                            type: boolean
                          header:
                            default: true
                            description: Indicates if a header is present in the file
                            type: boolean
                          maxRows:
                            description: The maximum number of rows to read
                            format: int32
                            minimum: 0
                            type: integer
                          nullValues:
                            default: ""
                            description: NullValues is a sequence of values to replace
                              with NA.
                            type: string
                          quote:
                            default: double-quote
                            description: The character used for quotes (by default,
                              a double quote ")
                            enum:
                            - double-quote
                            - single-quote
                            type: string
                          skipRows:
                            default: 0
                            description: The number of rows to skip from the top of
                              the file
                            format: int32
                            minimum: 0
                            type: integer
                          strict:
                            default: true
                            description: Indicates if the read of the CSV file should
                              fail if there are any errors
                            type: boolean
                        type: object
                      excel:
                        description: The file format for Excel files, if applicable
                        properties:
                          columnNameRow:
                            description: The position of the row that contains the
                              column names (i.e. the header)
                            format: int32
                            type: integer
                          data:
                            description: The specification for the bounds of the data
                            properties:
                              entireSheet:
                                default: false
                                description: Indicates if the excel reader should
                                  read the entire sheet; if false, it will read only
                                  within the bounds specified by the `To` and `From`
                                  fields of the ExcelSheetArea
                                type: boolean
                              fromColumn:
                                description: If reading part of the excel sheet, start
                                  with the column in this position
                                format: int32
                                type: integer
                              fromRow:
                                description: If reading part of the excel sheet, start
                                  with the row in this position
                                format: int32
                                type: integer
                              toColumn:
                                description: If reading part of the excel sheet, end
                                  with the column in this position
                                format: int32
                                type: integer
                              toRow:
                                description: If reading part of the excel sheet, end
                                  with the row in this position
                                format: int32
                                type: integer
                            type: object
                          firstSheetWithData:
                            default: false
                            description: Indicates if the excel reader should use
                              the first sheet that contains data
                            type: boolean
                          sheetIndex:
                            description: The index of the sheet in the excel file
                              to read data from
                            format: int32
                            type: integer
                          sheetName:
                            description: The name of the sheet that exists in the
                              excel file to read data from
                            type: string
                        type: object
                      fileType:
                        default: csv
                        description: The file type of incoming data which uses the
                          DataSource (by default, a CSV file)
                        enum:
                        - csv
                        - tsv
                        - excel
                        - fwf
                        - hdf
                        - html
                        - json
                        - pickle
                        - sas
                        - stata
                        - feather
                        - parquet
                        type: string
                      parquet:
                        description: The file format for Parquet files, if applicable
                        properties:
                          engine:
                            default: auto
                            description: The character used to separate fields (by
                              default, a comma)
                            type: string
                        type: object
                    type: object
                  observations:
                    description: The location of the observation file or table. The
                      observations are the source for training (observations which
                      have a value for the target columns) or for prediction (observations
                      with no targets).
                    properties:
                      bucket:
                        default: ""
                        description: In the case of the location type being an object
                          storage system, BucketName is the name of the VirtualBucket
                          resource that exists in the same tenant as the resource
                          specifying the DataLocation. Modela will connect to the
                          external object storage system, and will access the file
                          from the path specified by the Path field
                        type: string
                      connection:
                        default: ""
                        description: In the case of the type of location being a database,
                          ConnectionName specifies the name of the ConnectionName
                          resource that exists in the same tenant as the resource
                          specifying the DataLocation. Modela will attempt to connect
                          to the database using the credentials specified in the ConnectionName,
                          and will execute the query specified by the SQL field
                        type: string
                      database:
                        default: ""
                        description: The name of a database inside the database system
                          specified by the ConnectionName field
                        type: string
                      path:
                        default: ""
                        description: The path to a flat-file inside an object storage
                          system. When using the Modela API to upload files (through
                          the FileService API), Modela will upload the data to a predetermined
                          path based on the Tenant, Data Product, Data Product Version,
                          and resource type of the resource in relation to the file
                          being uploaded. The path does not need to adhere to this
                          format; you may also specify an arbitrary path
                        type: string
                      resourceRef:
                        description: In the case of the location type being Dataset
                          or PublicDataset, ResourceRef references another resource
                          that containing data that will be used as a data source
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      sql:
                        default: ""
                        description: The SQL statement which will be executed to query
                          data from the table specified by Table
                        type: string
                      table:
                        default: ""
                        description: The name of a table inside a database, if applicable
                        type: string
                      topic:
                        default: ""
                        description: The name of the streaming topic (currently unsupported)
                        type: string
                      type:
                        default: object
                        description: The type of location where the data resides,
                          which can either be an object inside an object storage system
                          (i.e. Minio), a SQL location like a table or a view, a data
                          stream (i.e. Kafka, currently unsupported), or a web location
                          (currently unsupported)
                        enum:
                        - object
                        - table
                        - view
                        - stream
                        - web
                        - public-dataset
                        - dataset
                        type: string
                      url:
                        default: ""
                        description: In the case of the location type being WebApi,
                          URL specifies the external location (HTTP or Git) that will
                          be queried and then stored as flat-file by the resource
                          which specifies the DataLocation
                        type: string
                    type: object
                  offlineFeatureStoreName:
                    description: The name of the offline feature store, the offline
                      feature store contain the observations and the feature groups
                      The offline feature stores are stored in the tenant.
                    type: string
                  onlineFeatureStoreName:
                    description: The name of the online feature store that serve predictions
                      for models from this model class The offline feature stores
                      are stored in the tenant.
                    type: string
                  predictionTimeColumn:
                    description: Define the column name that contains the prediction
                      time for each row in the label data. The system uses the prediction
                      time in order to avoid data leakage. I.e. the training dataset
                      will contain only data that was known before the prediction
                      time If null, the system will set the prediction time column
                      as the time index column in the schema.
                    type: string
                  predictions:
                    description: The location of the predictions table. The predictions
                      table contains all the latest predictions.
                    properties:
                      bucket:
                        default: ""
                        description: In the case of the location type being an object
                          storage system, BucketName is the name of the VirtualBucket
                          resource that exists in the same tenant as the resource
                          specifying the DataLocation. Modela will connect to the
                          external object storage system, and will access the file
                          from the path specified by the Path field
                        type: string
                      connection:
                        default: ""
                        description: In the case of the type of location being a database,
                          ConnectionName specifies the name of the ConnectionName
                          resource that exists in the same tenant as the resource
                          specifying the DataLocation. Modela will attempt to connect
                          to the database using the credentials specified in the ConnectionName,
                          and will execute the query specified by the SQL field
                        type: string
                      database:
                        default: ""
                        description: The name of a database inside the database system
                          specified by the ConnectionName field
                        type: string
                      path:
                        default: ""
                        description: The path to a flat-file inside an object storage
                          system. When using the Modela API to upload files (through
                          the FileService API), Modela will upload the data to a predetermined
                          path based on the Tenant, Data Product, Data Product Version,
                          and resource type of the resource in relation to the file
                          being uploaded. The path does not need to adhere to this
                          format; you may also specify an arbitrary path
                        type: string
                      resourceRef:
                        description: In the case of the location type being Dataset
                          or PublicDataset, ResourceRef references another resource
                          that containing data that will be used as a data source
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      sql:
                        default: ""
                        description: The SQL statement which will be executed to query
                          data from the table specified by Table
                        type: string
                      table:
                        default: ""
                        description: The name of a table inside a database, if applicable
                        type: string
                      topic:
                        default: ""
                        description: The name of the streaming topic (currently unsupported)
                        type: string
                      type:
                        default: object
                        description: The type of location where the data resides,
                          which can either be an object inside an object storage system
                          (i.e. Minio), a SQL location like a table or a view, a data
                          stream (i.e. Kafka, currently unsupported), or a web location
                          (currently unsupported)
                        enum:
                        - object
                        - table
                        - view
                        - stream
                        - web
                        - public-dataset
                        - dataset
                        type: string
                      url:
                        default: ""
                        description: In the case of the location type being WebApi,
                          URL specifies the external location (HTTP or Git) that will
                          be queried and then stored as flat-file by the resource
                          which specifies the DataLocation
                        type: string
                    type: object
                  primaryKey:
                    description: The primary key for the observation row If empty
                      the system will set the join key as the primary key based on
                      the schema.
                    items:
                      type: string
                    type: array
                  schema:
                    description: The schema of the observation file. The schema is
                      used as the basis for training and serving.
                    properties:
                      columns:
                        description: The collection of columns and their attributes
                        items:
                          description: Column specifies the attribute of a single
                            column in a dataset. The fields of the Column align with
                            the JSON schema standard; you can view detailed documentation
                            at https://json-schema.org/draft/2020-12/json-schema-validation.html
                          properties:
                            DefaultValueNum:
                              description: The default value for number types; used
                                internally for synthetic data and validation
                              type: number
                            aggr:
                              description: If this column is aggregate. Define the
                                aggregate
                              enum:
                              - min
                              - max
                              - mean
                              - median
                              - sum
                              - stddev
                              - var
                              - none
                              type: string
                            datatype:
                              description: The data type of the feature (e.g. number,
                                string, boolean, etc.)
                              enum:
                              - boolean
                              - datetime
                              - number
                              - categorical
                              - ordinal
                              - text
                              - json
                              - number-list
                              - categorical-list
                              - text-list
                              type: string
                            datetimeFormat:
                              description: The format of the datetime column. This
                                is only setup if the column contain datetime type.
                              type: string
                            description:
                              description: The user-specified description of the feature
                              maxLength: 63
                              type: string
                            displayName:
                              description: The display name of the column, which is
                                used in reports and other visual elements. If omitted,
                                it will use the raw name
                              maxLength: 63
                              type: string
                            driftThreshold:
                              description: The threshold drift value for model drift
                                detection for the feature represented by this feature
                              type: number
                            enum:
                              description: The collection of unique values for categorical
                                features
                              items:
                                type: string
                              type: array
                            example:
                              description: A user-specified example value
                              type: string
                            exclusiveMaximum:
                              description: The exclusive upper limit of all values
                                in the column, which does not include the maximum
                                value
                              type: boolean
                            exclusiveMinimum:
                              description: The exclusive lower limit of all values
                                in the column, which does not include the minimum
                                value
                              type: boolean
                            externalDocs:
                              description: A link to user-specified external documentation
                              type: string
                            fk:
                              description: Denotes if the column specifies a foreign
                                key of another database table
                              type: boolean
                            fold:
                              description: Indicates if the column holds fold values
                              type: boolean
                            format:
                              description: The data domain of the feature, which constrains
                                the contents of the feature to a specific set of values
                              enum:
                              - url
                              - path
                              - password
                              - time
                              - count
                              - interval
                              - nominal
                              - email
                              - creditcard
                              - uuid
                              - uuid5
                              - uuid
                              - base64
                              - latitude
                              - longtitude
                              - dns
                              - ip4
                              - ip6
                              - ssn
                              - alpha
                              - alphanumeric
                              - unknown
                              - color
                              - currency
                              - date
                              - guid
                              - hyperlink
                              - image
                              - media
                              - file
                              - embedding
                              - record
                              - useless
                              - none
                              type: string
                            formula:
                              description: The formula used to generate the column
                              type: string
                            generated:
                              description: Indicates if the feature was automatically
                                generated
                              type: boolean
                            id:
                              description: Indicates if the column is an ID column
                              type: boolean
                            ignore:
                              description: Indicates if the feature should be ignored
                                when building models
                              type: boolean
                            imputation:
                              description: The recommended imputation method for the
                                column
                              enum:
                              - remove-rows-with-missing-values
                              - replace-with-mean
                              - replace-with-median
                              - replace-with-arbitrary-value
                              - freq-category-imputation
                              - add-missing-value-indicator
                              - knn
                              - iterative
                              - mice
                              - no-imputation
                              - auto
                              - none
                              type: string
                            key:
                              description: Indicates if the column is an key column
                              type: boolean
                            laggedRegressor:
                              description: In forecasting based data sets Indicates
                                if the column is regressor This is relevant only for
                                time series schema
                              type: boolean
                            loc:
                              description: Contain the Index for the column in the
                                schema
                              format: int32
                              type: integer
                            log:
                              description: Indicates if values from this column will
                                be sampled on a logarithmic scale
                              type: boolean
                            maxItems:
                              description: The maximum number of items if the column
                                is a list of values
                              format: int32
                              minimum: 0
                              type: integer
                            maxLength:
                              description: The maximum length of values in the column,
                                if the column data type is a string
                              format: int32
                              minimum: 0
                              type: integer
                            maximum:
                              description: The maximum value of values all values
                                in the column
                              type: number
                            minItems:
                              description: The minimum number of items if the column
                                is a list of values
                              format: int32
                              minimum: 0
                              type: integer
                            minLength:
                              description: The minimum length of values in the column,
                                if the column data type is a string
                              format: int32
                              minimum: 0
                              type: integer
                            minimum:
                              description: The minimum value of values all values
                                in the column
                              type: number
                            mu:
                              description: Mu is the mean of the normal distribution
                              type: number
                            multipleOf:
                              description: The integer value which the values of the
                                column should be a multiple of
                              format: int32
                              minimum: 0
                              type: integer
                            name:
                              description: The name of the column
                              maxLength: 63
                              minLength: 1
                              type: string
                            nullable:
                              description: Indicates if the column can contain null
                                values
                              type: boolean
                            pattern:
                              description: The regex pattern which values in the column
                                must adhere to
                              type: string
                            phi:
                              description: Indicates if the column contains personal
                                health information
                              type: boolean
                            pii:
                              description: Indicates if the column contains personally
                                identifiable information
                              type: boolean
                            pk:
                              description: Denotes if the column specifies a primary
                                key of a database table (i.e. a users ID)
                              type: boolean
                            protected:
                              description: Protected means that this feature is important
                                for ethical AI / Fairness
                              type: boolean
                            regressor:
                              description: In forecasting based data sets Indicates
                                if the column is regressor This is relevant only for
                                time series schema
                              type: boolean
                            required:
                              description: Required
                              type: boolean
                            reserved:
                              description: Indicates that the feature should always
                                be used in training
                              type: boolean
                            scaling:
                              description: The recommended scaling method for the
                                column
                              enum:
                              - standard-scaling
                              - max-abs-scaling
                              - min-max-scaling
                              - normalization-scaling
                              - robust-scaling
                              - scale-to-unit-norm
                              - none
                              - auto
                              type: string
                            sigma:
                              description: Sigma is the standard deviation of the
                                distribution
                              type: number
                            skewThreshold:
                              description: The threshold skew for skew detection for
                                the feature represented by this feature.
                              type: number
                            step:
                              description: The step value if the column values are
                                a sequence of numbers
                              type: number
                            target:
                              description: Indicates if the feature is the target
                                feature of the model, and the feature which predictions
                                will be made on
                              type: boolean
                            timeIndex:
                              description: For time series, the field indicate tha
                                this column will be used as the data time index for
                                the time series. Note that there can multiple datatime
                                type columns, but only one time column.
                              type: boolean
                            timeseries:
                              description: Indicates if the column is contain a time
                                series, In case of forecasting, if only one column
                                is a time series, this is a univariate time series
                                Otherwise, if two or more columns contain time series,
                                than this is a univariate time series.
                              type: boolean
                            uniqueItems:
                              description: Enforce that all the items in the list
                                are unique
                              type: boolean
                            weight:
                              description: If True than this is a weight column
                              type: boolean
                            window:
                              description: If this column is aggregate
                              format: int32
                              type: integer
                          required:
                          - datatype
                          - name
                          type: object
                        type: array
                      key:
                        description: The keys columns are the index of the file or
                          table. The set of keys will be used as an index for the
                          in memory representation(e.g. pandas)
                        items:
                          type: string
                        type: array
                      recommendationSchema:
                        description: The recommendation schema, which is used for
                          the recommendation ML task
                        properties:
                          itemIDColumn:
                            default: item_id
                            description: The name of the column that specifies item
                              IDs
                            type: string
                          ratingColumn:
                            default: rating
                            description: The name of the column that specifies ratings
                            type: string
                          userIDColumn:
                            default: user_id
                            description: The name of the column that specifies user
                              IDs (i.e. the primary key)
                            type: string
                        type: object
                      timeSeriesSchema:
                        description: The time-series schema, which sets time-series
                          specific parameters
                        properties:
                          freq:
                            default: day
                            description: The time series frequency
                            enum:
                            - second
                            - minute
                            - hour
                            - day
                            - week
                            - month
                            - quarter
                            - year
                            - multi-year
                            type: string
                          interval:
                            default: 1
                            description: The interval to forecast at this level
                            format: int32
                            type: integer
                          type:
                            default: series
                            description: The time series type
                            enum:
                            - series
                            - panel
                            - hierarchical
                            type: string
                        type: object
                    type: object
                  target:
                    description: Name of the target column If null, the system will
                      assign this column based on the schema.
                    type: string
                  tests:
                    description: Tests to run on the training data before training.
                      This assurs data quality is being met.
                    properties:
                      enabled:
                        description: If false, this test case is disabled
                        type: boolean
                      tests:
                        items:
                          properties:
                            assertThat:
                              description: The assertion type
                              type: string
                            column:
                              description: If unit test is column test, this is the
                                name of the column
                              type: string
                            column2:
                              description: For test that involve two columns (e.g.
                                correlation)
                              type: string
                            columns:
                              description: If unit test is column test, this is the
                                name of the column
                              items:
                                type: string
                              type: array
                            compareToRef:
                              description: Reference to another entity which is a
                                ref.
                              properties:
                                apiVersion:
                                  description: API version of the referent.
                                  type: string
                                fieldPath:
                                  description: 'If referring to a piece of an object
                                    instead of an entire object, this string should
                                    contain a valid JSON/Go field access statement,
                                    such as desiredState.manifest.containers[2]. For
                                    example, if the object reference is to a container
                                    within a pod, this would take on a value like:
                                    "spec.containers{name}" (where "name" refers to
                                    the name of the container that triggered the event)
                                    or if no container name is specified "spec.containers[2]"
                                    (container with index 2 in this pod). This syntax
                                    is chosen only to have some well-defined way of
                                    referencing a part of an object. TODO: this design
                                    is not final and this field is subject to change
                                    in the future.'
                                  type: string
                                kind:
                                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                namespace:
                                  description: 'Namespace of the referent. More info:
                                    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                  type: string
                                resourceVersion:
                                  description: 'Specific resourceVersion to which
                                    this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                  type: string
                                uid:
                                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            dataFilter:
                              description: Sql statement to filter the data for this
                                unit test
                              type: string
                            enabled:
                              description: If false, this test case is disabled
                              type: boolean
                            entityRef:
                              description: Reference to an entity.
                              properties:
                                apiVersion:
                                  description: API version of the referent.
                                  type: string
                                fieldPath:
                                  description: 'If referring to a piece of an object
                                    instead of an entire object, this string should
                                    contain a valid JSON/Go field access statement,
                                    such as desiredState.manifest.containers[2]. For
                                    example, if the object reference is to a container
                                    within a pod, this would take on a value like:
                                    "spec.containers{name}" (where "name" refers to
                                    the name of the container that triggered the event)
                                    or if no container name is specified "spec.containers[2]"
                                    (container with index 2 in this pod). This syntax
                                    is chosen only to have some well-defined way of
                                    referencing a part of an object. TODO: this design
                                    is not final and this field is subject to change
                                    in the future.'
                                  type: string
                                kind:
                                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                namespace:
                                  description: 'Namespace of the referent. More info:
                                    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                  type: string
                                resourceVersion:
                                  description: 'Specific resourceVersion to which
                                    this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                  type: string
                                uid:
                                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            entityRef2:
                              description: Reference to an entity.
                              properties:
                                apiVersion:
                                  description: API version of the referent.
                                  type: string
                                fieldPath:
                                  description: 'If referring to a piece of an object
                                    instead of an entire object, this string should
                                    contain a valid JSON/Go field access statement,
                                    such as desiredState.manifest.containers[2]. For
                                    example, if the object reference is to a container
                                    within a pod, this would take on a value like:
                                    "spec.containers{name}" (where "name" refers to
                                    the name of the container that triggered the event)
                                    or if no container name is specified "spec.containers[2]"
                                    (container with index 2 in this pod). This syntax
                                    is chosen only to have some well-defined way of
                                    referencing a part of an object. TODO: this design
                                    is not final and this field is subject to change
                                    in the future.'
                                  type: string
                                kind:
                                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                namespace:
                                  description: 'Namespace of the referent. More info:
                                    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                  type: string
                                resourceVersion:
                                  description: 'Specific resourceVersion to which
                                    this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                  type: string
                                uid:
                                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            expectedCategory:
                              description: The expected value
                              type: string
                            expectedSet:
                              description: Expected set of values,if the assertion
                              items:
                                type: string
                              type: array
                            expectedValue:
                              description: The expected numerical value
                              type: number
                            featureFilter:
                              description: Filter the filter for this unit test.
                              type: string
                            generated:
                              description: Indicates if this validation rule was automatically
                                generated by the system
                              type: boolean
                            lower:
                              description: For range based tests.
                              format: float
                              type: number
                            lowerInclusive:
                              type: boolean
                            metric:
                              description: The metric that is used for the test
                              type: string
                            name:
                              description: The name of the test case, will be generate
                                if empty by the combination of assertion, entity ref,
                                column name and metric
                              type: string
                            periods:
                              description: The length of the past if we are comparing
                                to moving avg
                              format: int32
                              type: integer
                            referenceType:
                              description: Set the reference type for this unit test
                              type: string
                            tags:
                              description: The test case tags, used for filtering.
                                Optional Test Tags
                              items:
                                type: string
                              type: array
                            type:
                              description: The test type The type of the data test
                              type: string
                            upper:
                              format: float
                              type: number
                            upperInclusive:
                              type: boolean
                          type: object
                        type: array
                    type: object
                type: object
              description:
                default: ""
                description: The user-provided description of the ModelClass
                maxLength: 512
                type: string
              entities:
                description: Entities contains a list of Entity resources that will
                  be used to construct the training data.
                items:
                  properties:
                    exclude:
                      description: FeatureGroups to exclude from the link
                      items:
                        type: string
                      type: array
                    name:
                      description: The name of the entity
                      type: string
                  type: object
                type: array
              fast:
                default: false
                description: Fast indicates if Dataset, Model and Study resources
                  associated with the ModelClass should run in fast mode. Running
                  in fast mode will skip unnecessary workloads such as profiling,
                  reporting, explaining, etc.
                type: boolean
              notification:
                description: The notification specification that determines which
                  notifiers will receive Alerts generated by the object
                properties:
                  notifierName:
                    description: NotifierName specifies the name of a single Notifier
                      resource which the Alert will be forwarded to
                    type: string
                  selector:
                    additionalProperties:
                      type: string
                    description: Selector defines a map of labels that will be matched
                      to find multiple Notifier resource to forward alerts to
                    type: object
                  ttl:
                    default: 3600
                    description: TTL defines the time-to-live for Alerts, in seconds,
                      after which they will be deleted
                    format: int32
                    type: integer
                type: object
              objective:
                description: The optimization objective. The objective is also used
                  when promoting models
                properties:
                  goal:
                    default: maximize
                    description: The goal of the objective.
                    type: string
                  metric:
                    description: The objective metric
                    type: string
                type: object
              owner:
                default: no-one
                description: The name of the Account which created the object, which
                  exists in the same tenant as the object
                type: string
              paused:
                default: false
                description: If true, pause the model class activities.
                type: boolean
              registered:
                default: false
                description: Registered indicate if this model class is registered
                  with the model registry. A registred model cannot be garbage collected,
                  and apper in the model registry page.
                type: boolean
              reportSchedule:
                description: The schedule for summary report
                properties:
                  cron:
                    description: The cron string for the schedule, applicable if the
                      trigger type is Cron. See https://docs.oracle.com/cd/E12058_01/doc/doc.1014/e12030/cron_expressions.htm
                      for more information
                    type: string
                  enabled:
                    default: false
                    description: Enabled indicates if the schedule is enabled. When
                      enabled, a CronJob will be created which when triggered will
                      initiate the creation of a run for the resource that specifies
                      the schedule
                    type: boolean
                  type:
                    description: The type of schedule, which can be a frequency interval
                      or a cron expression
                    enum:
                    - now
                    - once
                    - hourly
                    - daily
                    - weekly
                    - monthly
                    - yearly
                    - cron
                    type: string
                type: object
              serving:
                description: ServingTemplate specifies the model format and resource
                  requirements that will be applied to the Predictor created for the
                  Model that will be selected by the ModelClass
                properties:
                  monitoringSchedule:
                    description: Schedule for monitoring drift
                    properties:
                      cron:
                        description: The cron string for the schedule, applicable
                          if the trigger type is Cron. See https://docs.oracle.com/cd/E12058_01/doc/doc.1014/e12030/cron_expressions.htm
                          for more information
                        type: string
                      enabled:
                        default: false
                        description: Enabled indicates if the schedule is enabled.
                          When enabled, a CronJob will be created which when triggered
                          will initiate the creation of a run for the resource that
                          specifies the schedule
                        type: boolean
                      type:
                        description: The type of schedule, which can be a frequency
                          interval or a cron expression
                        enum:
                        - now
                        - once
                        - hourly
                        - daily
                        - weekly
                        - monthly
                        - yearly
                        - cron
                        type: string
                    type: object
                  postSQL:
                    description: List of SQL statements to run after training
                    items:
                      type: string
                    type: array
                  preSQL:
                    description: List of SQL statements to run before training
                    items:
                      type: string
                    type: array
                  predictionSchedule:
                    description: BatchPrediction schedule
                    properties:
                      cron:
                        description: The cron string for the schedule, applicable
                          if the trigger type is Cron. See https://docs.oracle.com/cd/E12058_01/doc/doc.1014/e12030/cron_expressions.htm
                          for more information
                        type: string
                      enabled:
                        default: false
                        description: Enabled indicates if the schedule is enabled.
                          When enabled, a CronJob will be created which when triggered
                          will initiate the creation of a run for the resource that
                          specifies the schedule
                        type: boolean
                      type:
                        description: The type of schedule, which can be a frequency
                          interval or a cron expression
                        enum:
                        - now
                        - once
                        - hourly
                        - daily
                        - weekly
                        - monthly
                        - yearly
                        - cron
                        type: string
                    type: object
                  template:
                    description: Define the serving of the best model.
                    properties:
                      access:
                        description: Access specifies the configuration for the Predictor
                          service to be exposed externally
                        properties:
                          accessType:
                            default: cluster-ip
                            description: The Kubernetes-native access method which
                              specifies how the Kubernetes Service created by the
                              Predictor will be exposed. See https://modela.ai/docs/docs/serving/production/#access-method
                              for a detailed description of each access type
                            enum:
                            - cluster-ip
                            - node-port
                            - load-balancer
                            - ingress
                            - mesh
                            - none
                            type: string
                          apikeySecretRef:
                            description: ApiKeySecretRef references a Kubernetes Secret
                              containing an API key that must be passed in prediction
                              requests to the Predictor
                            properties:
                              name:
                                description: name is unique within a namespace to
                                  reference a secret resource.
                                type: string
                              namespace:
                                description: namespace defines the space within which
                                  the secret name must be unique.
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                          authMethod:
                            default: none
                            enum:
                            - api-token
                            - jwt-token
                            - none
                            type: string
                          http:
                            default: false
                            description: Indicates if the prediction service should
                              expose an additional port to serve the Modela prediction
                              API through HTTP. The port one digit above the number
                              specified by the Port field will be exposed to accept
                              HTTP/1.1 traffic
                            type: boolean
                          nodePort:
                            description: The port number that will be exposed on the
                              external address of every node on the cluster, in the
                              case of the Predictor's access type being NodePort.
                              Traffic from the port will be forwarded to the Predictor's
                              backend service
                            format: int32
                            maximum: 65535
                            minimum: 0
                            type: integer
                          path:
                            default: ""
                            description: The auto-generated DNS path where the Predictor
                              service can be accessed. If the access type is ClusterIP,
                              it will be a cluster-internal DNS name (i.e. predictor.default-serving-site.svc.cluster.local).
                              In the case of the Ingress access type, it will be determined
                              by the FQDN of the host ServingSite (i.e. predictor.default-serving-site.your-domain.ai).
                            maxLength: 256
                            type: string
                          port:
                            default: 8080
                            description: The port number that will be exposed on the
                              Predictor's Pods to serve prediction traffic through
                              the GRPCInferenceService API. The Kubernetes Service
                              created by the Predictor will expose the port and forward
                              GRPC traffic to the backend pods
                            format: int32
                            maximum: 65535
                            minimum: 1024
                            type: integer
                        type: object
                      approvedAt:
                        description: ApprovedAt indicates the time of manual approval
                        format: date-time
                        type: string
                      approvedBy:
                        description: ApprovedBy indicates the account that approved
                          the model
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      dashboard:
                        default: false
                        description: Dashboard indicates if a Data App will be created
                          for the Model
                        type: boolean
                      enabled:
                        default: false
                        description: Enabled indicates if automatic model serving
                          is enabled. If false or unspecified, the Study or Model
                          Class managing the model will not create or update serving
                          resources for the Model
                        type: boolean
                      predictorName:
                        description: PredictorName specifies the name of a Predictor
                          to create or update. If unspecified, a live Predictor will
                          not be created for the model
                        type: string
                      promotion:
                        default: none
                        description: Promotion specifies the promotion policy for
                          the Predictor
                        enum:
                        - manual
                        - best
                        - latest
                        - none
                        type: string
                      replicas:
                        default: 1
                        description: Replicas specifies the number of replicas that
                          will be created for the Predictor
                        format: int32
                        type: integer
                      resources:
                        description: Resources specifies the resources that will be
                          allocated to the Predictor
                        properties:
                          custom:
                            default: false
                            description: Custom indicates if the custom requirements
                              specified by Requirements will be used
                            type: boolean
                          requirements:
                            description: Requirements specifies the custom resource
                              requirements for the workload
                            properties:
                              limits:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Limits describes the maximum amount
                                  of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                type: object
                              requests:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Requests describes the minimum amount
                                  of compute resources required. If Requests is omitted
                                  for a container, it defaults to Limits if that is
                                  explicitly specified, otherwise to an implementation-defined
                                  value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                type: object
                            type: object
                          workloadName:
                            description: WorkloadName references the name of a Workload
                              Class resource that will be used to determine the resource
                              requirements of the workload. If specified, WorkloadName
                              will take precedence over custom requirements
                            type: string
                        type: object
                      servingSiteRef:
                        description: The reference to the Serving Site under which
                          serving resources will be created
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                type: object
              subtask:
                default: none
                description: The machine learning subtask relevant to the primary
                  task (text classification, image object detection, etc.)
                enum:
                - text-ner
                - text-classification
                - text-multi-classification
                - text-regression
                - text-multi-label-classification
                - text-conversation
                - text-lang-generation
                - text-lang-model
                - text-multi-modal
                - text-ner
                - text-qa
                - text-summarization
                - text-sentence-pair
                - text-representation-generation
                - text-sentiment-analysis
                - text-code-generation
                - text-translation
                - text-lang-detection
                - text-grammar-correction
                - text-paraphrasing
                - text-intent-classification
                - text-semantic-similarity
                - text-keyword-extraction
                - text-pos
                - text-tokenization
                - text-lemma
                - image-classification
                - image-multi-label-classification
                - image-object-detection
                - image-segmentation
                - none
                type: string
              task:
                description: The machine learning task type (i.e. regression, classification)
                enum:
                - binary-classification
                - multi-classification
                - forecasting
                - regression
                - clustering
                - recommendation
                - outlier-detection
                - novelty-detection
                - auto
                - unknown
                - partition-forecasting
                - monitoring
                type: string
              training:
                description: TrainingTemplate specifies the configuration to train
                  and evaluate models
                properties:
                  aborted:
                    default: false
                    description: Aborted indicates that the execution.
                    type: boolean
                  explained:
                    default: false
                    description: Explained indicates that we want to explain models.
                    type: boolean
                  labRef:
                    description: The reference to the Lab under which the Model for
                      the class will be trained If unspecified, the default Lab from
                      the parent DataProduct will be used
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  maxModels:
                    default: 10
                    description: The number of candidate models that will be sampled
                      and trained
                    format: int32
                    maximum: 512
                    minimum: 1
                    type: integer
                  maxTime:
                    default: 3600
                    description: The deadline for models to complete training, in
                      seconds
                    format: int32
                    maximum: 36000
                    minimum: 1
                    type: integer
                  modelUnitTests:
                    description: A template for models unit tests
                    properties:
                      enabled:
                        description: If false, this test case is disabled
                        type: boolean
                      tests:
                        items:
                          properties:
                            assertThat:
                              description: The assertion type
                              type: string
                            column:
                              description: If unit test is column test, this is the
                                name of the column
                              type: string
                            column2:
                              description: For test that involve two columns (e.g.
                                correlation)
                              type: string
                            columns:
                              description: If unit test is column test, this is the
                                name of the column
                              items:
                                type: string
                              type: array
                            compareToRef:
                              description: Reference to another entity which is a
                                ref.
                              properties:
                                apiVersion:
                                  description: API version of the referent.
                                  type: string
                                fieldPath:
                                  description: 'If referring to a piece of an object
                                    instead of an entire object, this string should
                                    contain a valid JSON/Go field access statement,
                                    such as desiredState.manifest.containers[2]. For
                                    example, if the object reference is to a container
                                    within a pod, this would take on a value like:
                                    "spec.containers{name}" (where "name" refers to
                                    the name of the container that triggered the event)
                                    or if no container name is specified "spec.containers[2]"
                                    (container with index 2 in this pod). This syntax
                                    is chosen only to have some well-defined way of
                                    referencing a part of an object. TODO: this design
                                    is not final and this field is subject to change
                                    in the future.'
                                  type: string
                                kind:
                                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                namespace:
                                  description: 'Namespace of the referent. More info:
                                    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                  type: string
                                resourceVersion:
                                  description: 'Specific resourceVersion to which
                                    this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                  type: string
                                uid:
                                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            dataFilter:
                              description: Sql statement to filter the data for this
                                unit test
                              type: string
                            enabled:
                              description: If false, this test case is disabled
                              type: boolean
                            entityRef:
                              description: Reference to an entity.
                              properties:
                                apiVersion:
                                  description: API version of the referent.
                                  type: string
                                fieldPath:
                                  description: 'If referring to a piece of an object
                                    instead of an entire object, this string should
                                    contain a valid JSON/Go field access statement,
                                    such as desiredState.manifest.containers[2]. For
                                    example, if the object reference is to a container
                                    within a pod, this would take on a value like:
                                    "spec.containers{name}" (where "name" refers to
                                    the name of the container that triggered the event)
                                    or if no container name is specified "spec.containers[2]"
                                    (container with index 2 in this pod). This syntax
                                    is chosen only to have some well-defined way of
                                    referencing a part of an object. TODO: this design
                                    is not final and this field is subject to change
                                    in the future.'
                                  type: string
                                kind:
                                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                namespace:
                                  description: 'Namespace of the referent. More info:
                                    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                  type: string
                                resourceVersion:
                                  description: 'Specific resourceVersion to which
                                    this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                  type: string
                                uid:
                                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            entityRef2:
                              description: Reference to an entity.
                              properties:
                                apiVersion:
                                  description: API version of the referent.
                                  type: string
                                fieldPath:
                                  description: 'If referring to a piece of an object
                                    instead of an entire object, this string should
                                    contain a valid JSON/Go field access statement,
                                    such as desiredState.manifest.containers[2]. For
                                    example, if the object reference is to a container
                                    within a pod, this would take on a value like:
                                    "spec.containers{name}" (where "name" refers to
                                    the name of the container that triggered the event)
                                    or if no container name is specified "spec.containers[2]"
                                    (container with index 2 in this pod). This syntax
                                    is chosen only to have some well-defined way of
                                    referencing a part of an object. TODO: this design
                                    is not final and this field is subject to change
                                    in the future.'
                                  type: string
                                kind:
                                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                namespace:
                                  description: 'Namespace of the referent. More info:
                                    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                  type: string
                                resourceVersion:
                                  description: 'Specific resourceVersion to which
                                    this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                  type: string
                                uid:
                                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            expectedCategory:
                              description: The expected value
                              type: string
                            expectedSet:
                              description: Expected set of values,if the assertion
                              items:
                                type: string
                              type: array
                            expectedValue:
                              description: The expected numerical value
                              type: number
                            featureFilter:
                              description: Filter the filter for this unit test.
                              type: string
                            generated:
                              description: Indicates if this validation rule was automatically
                                generated by the system
                              type: boolean
                            lower:
                              description: For range based tests.
                              format: float
                              type: number
                            lowerInclusive:
                              type: boolean
                            metric:
                              description: The metric that is used for the test
                              type: string
                            name:
                              description: The name of the test case, will be generate
                                if empty by the combination of assertion, entity ref,
                                column name and metric
                              type: string
                            periods:
                              description: The length of the past if we are comparing
                                to moving avg
                              format: int32
                              type: integer
                            referenceType:
                              description: Set the reference type for this unit test
                              type: string
                            tags:
                              description: The test case tags, used for filtering.
                                Optional Test Tags
                              items:
                                type: string
                              type: array
                            type:
                              description: The test type The type of the data test
                              type: string
                            upper:
                              format: float
                              type: number
                            upperInclusive:
                              type: boolean
                          type: object
                        type: array
                    type: object
                  paused:
                    default: false
                    description: Pause the training job or any additional training
                      job
                    type: boolean
                  postSQL:
                    description: List of SQL statements to run after training
                    items:
                      type: string
                    type: array
                  preSQL:
                    description: List of SQL statements to run before training
                    items:
                      type: string
                    type: array
                  resources:
                    description: Training resources
                    properties:
                      custom:
                        default: false
                        description: Custom indicates if the custom requirements specified
                          by Requirements will be used
                        type: boolean
                      requirements:
                        description: Requirements specifies the custom resource requirements
                          for the workload
                        properties:
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                      workloadName:
                        description: WorkloadName references the name of a Workload
                          Class resource that will be used to determine the resource
                          requirements of the workload. If specified, WorkloadName
                          will take precedence over custom requirements
                        type: string
                    type: object
                  searchSpace:
                    description: Define custom search space for this model class.
                      The search space defines which algorithm to include or execlude
                      If not defined, we would use the search space in the model template.
                    properties:
                      custom:
                        description: Custom specifies custom hyperparameter ranges
                          for specific algorithms
                        items:
                          description: AlgorithmParameterRange defines a custom hyperparameter
                            range for a single algorithm
                          properties:
                            name:
                              description: Name specifies the name of the algorithm
                                to override
                              type: string
                            ranges:
                              description: Ranges contain the collection of hyperparameter
                                ranges to override
                              items:
                                description: ParameterRange defines the limits for
                                  a single hyperparameter
                                properties:
                                  choices:
                                    description: Set of choices for categorical variable
                                    items:
                                      type: string
                                    type: array
                                  conditional:
                                    description: If true this parameter is condition
                                      on another parameter value
                                    type: boolean
                                  defaultChoice:
                                    description: Default Choice for categorical variable.
                                    type: string
                                  defaultValue:
                                    description: DefaultValue is the default value
                                      of the parameter
                                    type: number
                                  high:
                                    description: High is the maximum value of the
                                      hyperparameter
                                    type: number
                                  log:
                                    description: Log indicates if the scale is logarithmic
                                    type: boolean
                                  low:
                                    description: Low is the minimum value of the hyperparameter
                                    type: number
                                  name:
                                    description: Name is the name of the hyperparameter
                                    type: string
                                  parent:
                                    description: Parent parameter name
                                    type: string
                                  parentValueCat:
                                    description: The parent value in order for this
                                      parameter to be active.
                                    type: string
                                  parentValueFloat:
                                    description: The parent value in order for this
                                      parameter to be active.
                                    type: number
                                  parentValueInteger:
                                    description: The parent value in order for this
                                      parameter to be active.
                                    format: int32
                                    type: integer
                                  step:
                                    description: Step for discrete variable.
                                    format: int32
                                    type: integer
                                  type:
                                    description: Type is the datatype of the parameter
                                    enum:
                                    - float
                                    - int
                                    - categorical
                                    type: string
                                type: object
                              type: array
                          type: object
                        type: array
                      exclude:
                        description: Which algorithm to exclude If empty, all algorithms
                          will be available for training
                        items:
                          type: string
                        type: array
                      include:
                        description: Which algorithm to include If empty, all algorithms
                          will be available for training
                        items:
                          type: string
                        type: array
                    type: object
                  studyTemplateName:
                    description: Define a reference to a study template. The study
                      template will be the basis for training models From this model
                      class.
                    type: string
                  trainers:
                    default: 1
                    description: The desired number of trainers that will train candidate
                      models in parallel. The number of trainers is restricted based
                      on the allowance provided by the active License
                    format: int32
                    type: integer
                  trainingSchedule:
                    description: Training schedule
                    properties:
                      cron:
                        description: The cron string for the schedule, applicable
                          if the trigger type is Cron. See https://docs.oracle.com/cd/E12058_01/doc/doc.1014/e12030/cron_expressions.htm
                          for more information
                        type: string
                      enabled:
                        default: false
                        description: Enabled indicates if the schedule is enabled.
                          When enabled, a CronJob will be created which when triggered
                          will initiate the creation of a run for the resource that
                          specifies the schedule
                        type: boolean
                      type:
                        description: The type of schedule, which can be a frequency
                          interval or a cron expression
                        enum:
                        - now
                        - once
                        - hourly
                        - daily
                        - weekly
                        - monthly
                        - yearly
                        - cron
                        type: string
                    type: object
                  triggeredBy:
                    description: What triggered the training
                    enum:
                    - on-demand
                    - on-schedule
                    - on-new-data
                    - on-github-event
                    - on-concept-drift
                    - on-perf-degradation
                    type: string
                type: object
              version:
                description: VersionName references the name of a Data Product Version
                  that describes the version of the resource
                type: string
            required:
            - task
            type: object
          status:
            properties:
              bestFE:
                description: BestFE specifies the best feature engineering pipeline
                  produced by the ModelClass
                properties:
                  imbalance:
                    default: auto
                    description: Imbalance specifies the method which will be used
                      to handle an imbalanced dataset
                    enum:
                    - adasyn
                    - baseline-smote
                    - kmean-smote
                    - random-over-sampler
                    - smote
                    - smotenc
                    - svmsmote
                    - none
                    - auto
                    - class-weights
                    type: string
                  pipelines:
                    description: Pipelines contains the collection of feature engineering
                      pipelines that will be applied to the dataset prior to model
                      training
                    items:
                      description: FeatureEngineeringPipeline represents a single
                        pipeline to transform a dataset
                      properties:
                        dataType:
                          description: DataType specifies the data type of the pipeline,
                            which corresponds to the data type of all features in
                            the pipeline
                          enum:
                          - boolean
                          - datetime
                          - number
                          - categorical
                          - ordinal
                          - text
                          - json
                          - number-list
                          - categorical-list
                          - text-list
                          type: string
                        datetimeTransformation:
                          default: none
                          description: DatetimeTransformation specifies the method
                            to use when handling the date-time data type
                          enum:
                          - extract-datetime-information
                          - none
                          - auto
                          type: string
                        discretisation:
                          default: none
                          description: Discretisation specifies the discretisation
                            method to convert numerical features to discrete variables
                          enum:
                          - equal-width-discretisation-
                          - equal-freq-discretisation
                          - kbin-discretisation
                          - kernel-centerer-discretisation
                          - label-binarizer-discretisation
                          - multi-label-binarizer-discretisation
                          - none
                          - auto
                          type: string
                        drop:
                          default: false
                          description: Drop indicates if all of all the features for
                            the pipeline will be dropped
                          type: boolean
                        encoding:
                          default: none
                          description: Encoding specifies the encoding method to use
                            for categorical features
                          enum:
                          - one-hot-encoding
                          - one-hot-encoding-top-categories
                          - ordinal-encoding
                          - count-encoding
                          - target-encoding
                          - weight-of-evidence-encoding
                          - binary-encoding
                          - label-encoding
                          - hash-encoding
                          - catboost-encoding
                          - loo-encoding
                          - no-encoding
                          - auto
                          - none
                          type: string
                        features:
                          description: Features contains the collection of features
                            which the pipeline will be applied to
                          items:
                            type: string
                          type: array
                        imputation:
                          default: none
                          description: Imputation specifies the imputation method
                            to use when handling missing values
                          enum:
                          - remove-rows-with-missing-values
                          - replace-with-mean
                          - replace-with-median
                          - replace-with-arbitrary-value
                          - freq-category-imputation
                          - add-missing-value-indicator
                          - knn
                          - iterative
                          - mice
                          - no-imputation
                          - auto
                          - none
                          type: string
                        name:
                          description: Name specifies the unique name of the pipeline
                          type: string
                        outlierHandling:
                          default: none
                          description: OutlierHandling specifies the method to use
                            when handling outliers Apply only to numeric data types.
                          enum:
                          - trim-outliers
                          - winsorizer-outliers
                          - cap-outliers
                          - zero-code-outliers
                          - none
                          - auto
                          type: string
                        scaling:
                          default: none
                          description: Scaling specifies the scaling method to use
                            for numerical features
                          enum:
                          - standard-scaling
                          - max-abs-scaling
                          - min-max-scaling
                          - normalization-scaling
                          - robust-scaling
                          - scale-to-unit-norm
                          - none
                          - auto
                          type: string
                        text:
                          description: Text defines the configuration for the pipeline
                            to handle text features
                          properties:
                            embedding:
                              description: Indicates if the pipeline will generate
                                a word embedding
                              type: string
                            encoder:
                              default: auto
                              description: The text encoder (e.g. TFIDF)
                              enum:
                              - tfidf
                              - count-vec
                              - hasing-vec
                              - none
                              - auto
                              type: string
                            lemma:
                              default: true
                              description: Indicates if the pipeline will implement
                                lemmatization
                              type: boolean
                            maxSvdComponents:
                              default: 0
                              description: The maximum number of SVD components to
                                use, if applicable
                              format: int32
                              type: integer
                            pos:
                              default: true
                              description: Indicates if the pipeline will add part-of-speech
                                handling
                              type: boolean
                            stem:
                              default: true
                              description: Indicates if the pipeline will implement
                                word stemming
                              type: boolean
                            stopwords:
                              default: true
                              description: Indicates if the pipeline will add stop
                                word handling
                              type: boolean
                            svd:
                              default: true
                              description: Indicates if the pipeline will add singular
                                value decomposition
                              type: boolean
                            tokenizer:
                              description: The text tokenizer character
                              type: string
                          type: object
                        variableTransformation:
                          default: none
                          description: VariableTransformation specifies the transformation
                            method to use for numerical feature
                          enum:
                          - log-transformation
                          - reciprocal-transformation
                          - sqrt-transformation
                          - power-transformation
                          - box-cox-transformation
                          - yj-transformation
                          - none
                          - auto
                          type: string
                      type: object
                    type: array
                type: object
              bestModelScore:
                description: The highest score out of all ModelsCount created by the
                  associated Study resource
                type: number
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              dataAppName:
                description: The name of the current dataaoo for the model class
                type: string
              failureMessage:
                description: UpdateUpdateStrategy in case of terminal failure message
                type: string
              lastPredictionAt:
                description: The last time a batch prediction was made
                format: date-time
                type: string
              lastPredictionName:
                description: The name of the last prediction for this class
                type: string
              lastRunAt:
                description: The last time a new model was trained as part of this
                  model class
                format: date-time
                type: string
              lastRunName:
                description: The name of the last prediction for this class
                type: string
              live:
                description: If true, a model of this class is in production
                type: boolean
              modelsCount:
                description: Total models in the system for this model class
                format: int32
                type: integer
              monitoringScheduleStatus:
                description: Batch Prediction schedule
                properties:
                  active:
                    description: Active contains a collection of references to currently
                      active runs
                    items:
                      description: RunReference defines a generic reference to any
                        type of run
                      properties:
                        name:
                          description: Name specifies the name of the resource
                          type: string
                        version:
                          description: Version specifies the version of the run
                          format: int32
                          type: integer
                      required:
                      - name
                      - version
                      type: object
                    type: array
                  lastScheduleTime:
                    description: LastScheduleTime specifies when was the last time
                      a run was successfully scheduled
                    format: date-time
                    type: string
                  lastSuccessfulTime:
                    description: LastSuccessfulTime specifies when was the last time
                      a run successfully completed
                    format: date-time
                    type: string
                type: object
              observedGeneration:
                description: ObservedGeneration is the last generation that was acted
                  on
                format: int64
                type: integer
              predictionScheduleStatus:
                description: Batch Prediction schedule
                properties:
                  active:
                    description: Active contains a collection of references to currently
                      active runs
                    items:
                      description: RunReference defines a generic reference to any
                        type of run
                      properties:
                        name:
                          description: Name specifies the name of the resource
                          type: string
                        version:
                          description: Version specifies the version of the run
                          format: int32
                          type: integer
                      required:
                      - name
                      - version
                      type: object
                    type: array
                  lastScheduleTime:
                    description: LastScheduleTime specifies when was the last time
                      a run was successfully scheduled
                    format: date-time
                    type: string
                  lastSuccessfulTime:
                    description: LastSuccessfulTime specifies when was the last time
                      a run successfully completed
                    format: date-time
                    type: string
                type: object
              predictionsCount:
                description: Total number of batch predictions
                format: int32
                type: integer
              predictorName:
                description: The name of the current predictor for this model class.
                type: string
              predictorsCount:
                description: Total predictors in the system for this model class
                format: int32
                type: integer
              reportScheduleStatus:
                description: Batch Prediction schedule
                properties:
                  active:
                    description: Active contains a collection of references to currently
                      active runs
                    items:
                      description: RunReference defines a generic reference to any
                        type of run
                      properties:
                        name:
                          description: Name specifies the name of the resource
                          type: string
                        version:
                          description: Version specifies the version of the run
                          format: int32
                          type: integer
                      required:
                      - name
                      - version
                      type: object
                    type: array
                  lastScheduleTime:
                    description: LastScheduleTime specifies when was the last time
                      a run was successfully scheduled
                    format: date-time
                    type: string
                  lastSuccessfulTime:
                    description: LastSuccessfulTime specifies when was the last time
                      a run successfully completed
                    format: date-time
                    type: string
                type: object
              retired:
                description: List of the last 5 retired models
                items:
                  type: string
                type: array
              runsCount:
                description: Total number of batch  mode class run in the system for
                  this model class.
                format: int32
                type: integer
              trainingScheduleStatus:
                description: Training schedule status
                properties:
                  active:
                    description: Active contains a collection of references to currently
                      active runs
                    items:
                      description: RunReference defines a generic reference to any
                        type of run
                      properties:
                        name:
                          description: Name specifies the name of the resource
                          type: string
                        version:
                          description: Version specifies the version of the run
                          format: int32
                          type: integer
                      required:
                      - name
                      - version
                      type: object
                    type: array
                  lastScheduleTime:
                    description: LastScheduleTime specifies when was the last time
                      a run was successfully scheduled
                    format: date-time
                    type: string
                  lastSuccessfulTime:
                    description: LastSuccessfulTime specifies when was the last time
                      a run successfully completed
                    format: date-time
                    type: string
                type: object
              triggeredBy:
                description: The name of triggered by.
                enum:
                - on-demand
                - on-schedule
                - on-new-data
                - on-github-event
                - on-concept-drift
                - on-perf-degradation
                type: string
              updatedAt:
                description: The last time the object was updated
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
