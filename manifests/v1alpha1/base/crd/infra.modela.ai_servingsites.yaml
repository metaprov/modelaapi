---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: servingsites.infra.modela.ai
spec:
  group: infra.modela.ai
  names:
    categories:
    - infra
    - modela
    kind: ServingSite
    listKind: ServingSiteList
    plural: servingsites
    singular: servingsite
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - description: owner
      jsonPath: .spec.owner
      name: Owner
      type: string
    - jsonPath: .spec.ingress.fqdn
      name: FQDN
      type: string
    - jsonPath: .status.grpcIngressName
      name: GRPC Ingress
      type: string
    - jsonPath: .status.httpIngressName
      name: HTTP Ingress
      type: string
    - jsonPath: .status.activePredictors
      name: Predictors
      type: number
    - jsonPath: .spec.clusterName
      name: Cluster
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ServingSite represents a namespace where model serving workloads
          are executed under
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ServingSiteSpec defines the desired state of a ServingSite
            properties:
              description:
                default: ""
                description: The user-provided description of the object
                type: string
              ingress:
                description: Ingress defines the specification to create Ingress resources
                  that can route traffic to the resources which exist under the Serving
                  Site namespace
                properties:
                  clusterIssuerName:
                    default: ""
                    description: ClusterIssuerName specifies the name of a cert-manager
                      ClusterIssuer resource that will provide a TLS certificate to
                      the ingress. This will be added as an annotation to the ingress.
                    type: string
                  fqdn:
                    default: serving.vcap.me
                    description: FQDN specifies the fully-qualified domain name that
                      the Serving Site's Ingress will use as the base host for the
                      endpoint of services deployed under the Serving Site. For example,
                      setting the FQDN as `model-serving.modela.ai` will automatically
                      serve Predictors using the REST API at `predictors.model-serving.modela.ai`
                    type: string
                  grpc:
                    default: true
                    description: Grpc indicates if the Serving Site will create an
                      Ingress resource to serve GRPC prediction traffic. All Predictor
                      resources created under the Serving Site will receive a unique
                      host in the Ingress determined by the name of the Predictor
                      and the FQDN of the ServingSite (i.e. my-predictor.model-serving.modela.ai)
                    type: boolean
                  http:
                    default: false
                    description: HTTP indicates if the Serving Site will create an
                      Ingress resource to serve HTTP prediction traffic. All HTTP
                      traffic will be served under a single host determined by the
                      FQDN of the ServingSite (i.e. predictors.model-serving.modela.ai).
                      HTTP must be enabled to serve Data Apps over Ingress
                    type: boolean
                  ingressClassName:
                    default: nginx
                    description: IngressClassName is the name of the ingress class
                      that will be applied to created Ingress resources (defaults
                      to nginx)
                    type: string
                  issuerName:
                    description: IssuerName specifies the name of a cert-manager Issuer
                      resource in the same namespace as the Serving Site that will
                      provide a TLS certificate to the ingress. This will be added
                      as an annotation to the ingress.
                    type: string
                  tlsSecretName:
                    description: TlsSecretName specifies the name of the secret that
                      contains the TLS certificate for the ingress. If it does not
                      exist, ClusterIssuerName or IssuerName must be specified for
                      Cert Manager to generate the serving certificate. If this field
                      is specified, TLS will be implicitly enabled.
                    type: string
                type: object
              limits:
                description: Limits specifies the hard resource limits that can be
                  allocated for workloads created under the ServingSite
                properties:
                  enabled:
                    default: false
                    description: Indicates if the resource limit is enabled
                    type: boolean
                  limitRange:
                    description: LimitRangeSpec defines a min/max usage limit for
                      resources that match on kind.
                    properties:
                      limits:
                        description: Limits is the list of LimitRangeItem objects
                          that are enforced.
                        items:
                          description: LimitRangeItem defines a min/max usage limit
                            for any resource that matches on kind.
                          properties:
                            default:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: Default resource requirement limit value
                                by resource name if resource limit is omitted.
                              type: object
                            defaultRequest:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: DefaultRequest is the default resource
                                requirement request value by resource name if resource
                                request is omitted.
                              type: object
                            max:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: Max usage constraints on this kind by resource
                                name.
                              type: object
                            maxLimitRequestRatio:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: MaxLimitRequestRatio if specified, the
                                named resource must have a request and limit that
                                are both non-zero where limit divided by request is
                                less than or equal to the enumerated value; this represents
                                the max burst for the named resource.
                              type: object
                            min:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: Min usage constraints on this kind by resource
                                name.
                              type: object
                            type:
                              description: Type of resource that this limit applies
                                to.
                              type: string
                          required:
                          - type
                          type: object
                        type: array
                    required:
                    - limits
                    type: object
                  quota:
                    description: QuotaSpec defines the resource quota specification
                      for the namespace
                    properties:
                      hard:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'hard is the set of desired hard limits for each
                          named resource. More info: https://kubernetes.io/docs/concepts/policy/resource-quotas/'
                        type: object
                      scopeSelector:
                        description: scopeSelector is also a collection of filters
                          like scopes that must match each object tracked by a quota
                          but expressed using ScopeSelectorOperator in combination
                          with possible values. For a resource to match, both scopes
                          AND scopeSelector (if specified in spec), must be matched.
                        properties:
                          matchExpressions:
                            description: A list of scope selector requirements by
                              scope of the resources.
                            items:
                              description: A scoped-resource selector requirement
                                is a selector that contains values, a scope name,
                                and an operator that relates the scope name and values.
                              properties:
                                operator:
                                  description: Represents a scope's relationship to
                                    a set of values. Valid operators are In, NotIn,
                                    Exists, DoesNotExist.
                                  type: string
                                scopeName:
                                  description: The name of the scope that the selector
                                    applies to.
                                  type: string
                                values:
                                  description: An array of string values. If the operator
                                    is In or NotIn, the values array must be non-empty.
                                    If the operator is Exists or DoesNotExist, the
                                    values array must be empty. This array is replaced
                                    during a strategic merge patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - operator
                              - scopeName
                              type: object
                            type: array
                        type: object
                        x-kubernetes-map-type: atomic
                      scopes:
                        description: A collection of filters that must match each
                          object tracked by a quota. If not specified, the quota matches
                          all objects.
                        items:
                          description: A ResourceQuotaScope defines a filter that
                            must match each object tracked by a quota
                          type: string
                        type: array
                    type: object
                type: object
              owner:
                default: no-one
                description: The name of the Account which created the object, which
                  exists in the same tenant as the object
                type: string
            type: object
          status:
            properties:
              activePredictors:
                description: The number of active predictor services
                format: int32
                type: integer
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              dailyPredictionsCounts:
                description: The collection of predictions from the last 7 days
                items:
                  format: int32
                  type: integer
                type: array
              failureMessage:
                description: In the case of failure, the ServingSite resource controller
                  will set this field with a failure message
                type: string
              grpcIngressName:
                description: GrpcIngressName specifies the name of the Kubernetes
                  Ingress resource which the Serving Site uses to define external
                  access points for resources that accept GRPC-based traffic to their
                  services (i.e. Predictors). This field is set only after one or
                  more resources are created which use the Ingress access method.
                  If there are no Ingress rules to serve then the Ingress will be
                  destroyed
                type: string
              inactivePredictors:
                description: The number of inactive (non-deployed) predictors
                format: int32
                type: integer
              observedGeneration:
                description: ObservedGeneration is the last generation that was acted
                  on
                format: int64
                type: integer
              restIngressName:
                description: HttpIngressName specifies the name of the Kubernetes
                  Ingress resource which the Serving Site uses to define external
                  access points for resources that accept HTTP-based traffic to their
                  services (i.e. Data Apps). This field is set only after one or more
                  resources are created which use the Ingress access method to serve
                  HTTP traffic. If there are no Ingress rules to serve then the Ingress
                  will be destroyed
                type: string
              totalPredictorAccuracyFailed:
                description: The number of predictors that have detected average inaccurate
                  results
                format: int32
                type: integer
              totalPredictorDataDriftFailed:
                description: The number of predictors that have detected a data drift
                format: int32
                type: integer
              totalPredictorServiceFailed:
                description: The number of predictor services that have failed/errored
                format: int32
                type: integer
              updatedAt:
                description: The last time the object was updated
                format: date-time
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
