---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: datapipelines.data.modela.ai
spec:
  group: data.modela.ai
  names:
    categories:
    - data
    - modela
    kind: DataPipeline
    listKind: DataPipelineList
    plural: datapipelines
    shortNames:
    - dpl
    singular: datapipeline
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - jsonPath: .spec.description
      name: Description
      type: string
    - jsonPath: .spec.schedule
      name: Schedule
      type: string
    - jsonPath: .status.lastRun.at
      name: Last Run
      type: date
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DataPipeline represents the ETL flow from the data sources to
          a processed dataset, ready for training.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DataPipelineSpec defines the desired state of a DataPipeline
            properties:
              datasetSelector:
                additionalProperties:
                  type: string
                description: DatasetSelector is used to select datasets for processing
                  in the pipeline
                type: object
              description:
                default: ""
                description: Description of the data pipeline
                type: string
              modelClassName:
                description: The model class for this pipeline
                type: string
              notification:
                description: Specification for notification
                properties:
                  notifierName:
                    description: NotifierName specifies the name of a single Notifier
                      resource which the Alert will be forwarded to
                    type: string
                  selector:
                    additionalProperties:
                      type: string
                    description: Selector defines a map of labels that will be matched
                      to find multiple Notifier resource to forward alerts to
                    type: object
                  ttl:
                    default: 3600
                    description: TTL defines the time-to-live for Alerts, in seconds,
                      after which they will be deleted
                    format: int32
                    type: integer
                type: object
              output:
                description: The output definition
                properties:
                  IncludeShapValues:
                    default: false
                    description: If true, SHAP values for each predicted row will
                      be included as JSON as an additional column of the dataset
                    type: boolean
                  action:
                    default: upsert
                    description: The update strategy for the dataset in the case that
                      the output location already exists (i.e a database table)
                    enum:
                    - upsert
                    - insert
                    - update
                    type: string
                  createTableIfNotExist:
                    description: If true, the database table specified by Location
                      will be created if it does not exist
                    type: boolean
                  datasetName:
                    default: ""
                    description: DatasetName is the name of a new Dataset resource
                      that will be created. If empty, the system will save the dataset
                      to a file
                    type: string
                  detectOutliers:
                    default: false
                    description: If true, an additional column will be added to the
                      dataset which indicates if each predicted row was detected to
                      be an outlier. The predicting model must have been trained with
                      an outlier model
                    type: boolean
                  format:
                    default: csv
                    description: The format of the dataset, applicable if the output
                      location is a flat-file
                    enum:
                    - csv
                    - tsv
                    - excel
                    - fwf
                    - hdf
                    - html
                    - json
                    - pickle
                    - sas
                    - stata
                    - feather
                    - parquet
                    type: string
                  includeFeatures:
                    default: true
                    description: Indicates if the features (i.e. all the columns)
                      of the input dataset, excluding the feature which was predicted
                      on, will be included in the output dataset
                    type: boolean
                  location:
                    description: The location where the dataset will be stored
                    properties:
                      database:
                        description: Database specifies the location of data within
                          a database
                        properties:
                          connectionName:
                            description: The name of the Connection resource used
                              to connect to the database
                            type: string
                          sql:
                            default: ""
                            description: The SQL statement to execute
                            type: string
                          table:
                            default: ""
                            description: The name of the table to read
                            type: string
                        type: object
                      file:
                        description: File specifies the location of a flat-file
                        properties:
                          bucketName:
                            type: string
                          path:
                            type: string
                        type: object
                      resource:
                        description: Resource references another Modela resource that
                          contains data
                        properties:
                          kind:
                            description: The type of resource which can be used as
                              a data source
                            type: string
                          name:
                            description: The name of the resource
                            type: string
                          namespace:
                            description: The namespace of the resource. When referencing
                              a Dataset Snapshot, default to the Data Product of the
                              specifying resource. When referencing a Public Dataset,
                              default to the built-in catalog namespace (modela-catalog)
                            type: string
                        type: object
                      web:
                        description: Web specifies the location of an internet-accessible
                          flat-file
                        properties:
                          url:
                            default: ""
                            description: The internet-accessible URL of a file to
                              download
                            type: string
                        type: object
                    type: object
                type: object
              owner:
                default: no-one
                description: Owner of this data pipeline
                pattern: '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'
                type: string
              paused:
                default: false
                description: Set to true to pause the cron prediction
                type: boolean
              priority:
                default: medium
                description: The priority of this data pipeline. The default is medium.
                enum:
                - low
                - medium
                - high
                - urgent
                type: string
              recipes:
                description: RecipeOrder defines the list of recipes and the order
                  they need to run
                items:
                  properties:
                    dependents:
                      description: Dependents is the list of recipe that need to run
                        after this recipe.
                      items:
                        type: string
                      type: array
                    recipeName:
                      default: ""
                      description: RecipeName is the name of the recipe to run
                      type: string
                  type: object
                type: array
              resources:
                description: Resources are hardware resource req.
                properties:
                  custom:
                    default: false
                    description: Custom indicates if the custom requirements specified
                      by Requirements will be used
                    type: boolean
                  requirements:
                    description: Requirements specifies the custom resource requirements
                      for the workload
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  workloadName:
                    description: WorkloadName references the name of a Workload Class
                      resource that will be used to determine the resource requirements
                      of the workload. If specified, WorkloadName will take precedence
                      over custom requirements
                    type: string
                type: object
              schedule:
                description: Schedule for running the pipeline
                properties:
                  cron:
                    description: The cron string for the schedule, applicable if the
                      trigger type is Cron. See https://docs.oracle.com/cd/E12058_01/doc/doc.1014/e12030/cron_expressions.htm
                      for more information
                    type: string
                  enabled:
                    default: false
                    description: Enabled indicates if the schedule is enabled. When
                      enabled, a CronJob will be created which when triggered will
                      initiate the creation of a run for the resource that specifies
                      the schedule
                    type: boolean
                  type:
                    description: The type of schedule, which can be a frequency interval
                      or a cron expression
                    enum:
                    - hourly
                    - daily
                    - weekly
                    - monthly
                    - cron
                    type: string
                type: object
              ttl:
                default: 0
                description: TTL for the data product run. Set to 0 if no garbage
                  collected is needed.
                format: int32
                type: integer
              versionName:
                default: ""
                description: VersionName is the data product version of the data pipeline
                type: string
            type: object
          status:
            description: DataPipelineStatus is the observed state of the DataPipeline
              object.
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              lastRunName:
                description: The name of the last data pipeline count
                type: string
              observedGeneration:
                description: ObservedGeneration is the Last generation that was acted
                  on
                format: int64
                type: integer
              runsCount:
                description: The number of datapipline runs
                format: int32
                type: integer
              schedule:
                description: Last run is the last time a data pipeline run was created
                properties:
                  active:
                    description: Active contains a collection of references to currently
                      active runs
                    items:
                      description: RunReference defines a generic reference to any
                        type of run
                      properties:
                        name:
                          description: The name of the run
                          type: string
                        version:
                          description: The version of the run
                          format: int32
                          type: integer
                      required:
                      - name
                      - version
                      type: object
                    type: array
                  lastScheduleTime:
                    description: LastScheduleTime specifies when was the last time
                      a run was successfully scheduled
                    format: date-time
                    type: string
                  lastSuccessfulTime:
                    description: LastSuccessfulTime specifies when was the last time
                      a run successfully completed
                    format: date-time
                    type: string
                type: object
              updatedAt:
                description: Last time the object was updated
                format: date-time
                type: string
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
